{
  "openapi": "3.0.0",
  "info": {
    "title": "ChurchTools REST API",
    "version": "0.1.0",
    "description": "The ChurchTools REST API is the best entry point for developers to access ChurchTools. <br><br> **Authentication:** You need to be authorized to use some endpoints. Those endpoints are marked by a gray lock symbol. If you view the documentation, while you are logged into ChurchTools, all requests are already authorized. If you want to authorized a request, you need to provide a `Login Token` as `Authorization` header in the format `Authorization: Login<token>` or send a valid cookie. You can use the green \"Authorize\" dialog to enter those details and see how a request would look like in detail. <br><br> **Missing Endpoints:** Not all features are yet available by our new REST API. This documentation will grow in the future. We are working hard to add new endpoints with every ChurchTools version. The documentation will always show only those endpoints you can use with your ChurchTools installation.",
    "contact": {
      "name": "German ChurchTools Forum",
      "url": "https://forum.church.tools/category/22/churchtools-schnittstellen"
    }
  },
  "servers": [
    {
      "url": "/api",
      "description": "ChurchTools"
    },
    {
      "url": "http://churchtools.test/api",
      "description": "Local"
    }
  ],
  "tags": [
    {
      "name": "General",
      "description": "Endpoints of general purpose"
    },
    {
      "name": "Person",
      "description": "Find out about persons in ChurchTools"
    },
    {
      "name": "Group",
      "description": "Groups we love"
    },
    {
      "name": "GroupHomepage",
      "description": "Endpoints for public groups and registration forms"
    },
    {
      "name": "Status",
      "description": "CRUD methods for status field"
    },
    {
      "name": "Campus",
      "description": "CRUD methods for campus field"
    },
    {
      "name": "Field",
      "description": "CRUD methods for db fields"
    },
    {
      "name": "Service & Service Groups",
      "description": "CRUD methods for services & Service Groups"
    },
    {
      "name": "Tag",
      "description": "Create and Update Tags for Persons & Groups or songs"
    },
    {
      "name": "Department",
      "description": "CRUD methods for department field"
    },
    {
      "name": "Admin",
      "description": "Admin relevant endpoints"
    },
    {
      "name": "Calendar",
      "description": "Endpoint to list and create appointment templates"
    },
    {
      "name": "Event",
      "description": "Endpoints for event module"
    },
    {
      "name": "MasterData",
      "description": "Master data endpoints for each module"
    },
    {
      "name": "Translation",
      "description": "Translations"
    },
    {
      "name": "Finance",
      "description": "New Finance Endpoints"
    },
    {
      "name": "Queue",
      "description": "Endpoints for Fetching Queue Information and Triggering Workers"
    },
    {
      "name": "Permission",
      "description": "Permission Endpoints for Global and Group-Internal Permissions"
    },
    {
      "name": "Sync",
      "description": "Endpoints for Upcoming Sync Module"
    },
    {
      "name": "Wiki",
      "description": "Endpoints for Wiki"
    },
    {
      "name": "Checkin",
      "description": "Endpoints for Checkin"
    },
    {
      "name": "Absence",
      "description": "Endpoints for absences of persons."
    },
    {
      "name": "Song",
      "description": "Endpoints for Songs."
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "summary": "Information about API",
        "description": "The API envoles and dependes on the ChurchTools version. This endpoint provides the build version and CT version.",
        "operationId": "getApiInfo",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "description": "API Information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "build": {
                      "type": "string",
                      "example": "31464",
                      "description": "Database Build Version"
                    },
                    "version": {
                      "type": "string",
                      "example": "3.57.0",
                      "description": "ChurchTools Version"
                    }
                  }
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/whoami": {
      "get": {
        "summary": "Currently logged in user.",
        "description": "This endpoint returns the current user. If the request is unauthorized, the anonymous user (aka public user) is returned.",
        "operationId": "getCurrentUser",
        "tags": [
          "General"
        ],
        "parameters": [
          {
            "name": "only_allow_authenticated",
            "in": "query",
            "description": "If set to `true` the route will return 401 Unauthorized if the user is not logged in.",
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Current user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Person",
                      "type": "object",
                      "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "securityLevelForPerson": {
                          "type": "integer",
                          "description": "Security level of the current user. The user sees fields upto this level."
                        },
                        "editSecurityLevelForPerson": {
                          "type": "integer",
                          "description": "Eidt security level of the current user. The user can edit fields upto this level."
                        },
                        "title": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstName": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "job": {
                          "type": "string",
                          "nullable": true
                        },
                        "street": {
                          "type": "string",
                          "nullable": true
                        },
                        "addressAddition": {
                          "type": "string",
                          "nullable": true
                        },
                        "zip": {
                          "type": "string",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "latitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "phonePrivate": {
                          "type": "string",
                          "nullable": true
                        },
                        "phoneWork": {
                          "type": "string",
                          "nullable": true
                        },
                        "mobile": {
                          "type": "string",
                          "nullable": true
                        },
                        "fax": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthName": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "birthplace": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "familyImageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "sexId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "cmsUserId": {
                          "type": "string",
                          "nullable": true
                        },
                        "optigemId": {
                          "type": "string",
                          "description": "String with Optigem ID or empty string if no ID is set."
                        },
                        "privacyPolicyAgreement": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "typeId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "whoId": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        "nationalityId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "familyStatusId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "weddingDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "campusId": {
                          "type": "integer"
                        },
                        "statusId": {
                          "type": "integer"
                        },
                        "departmentIds": {
                          "type": "array",
                          "description": "List of department IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "firstContact": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBelonging": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "dateOfEntry": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfResign": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBaptism": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "placeOfBaptism": {
                          "type": "string",
                          "nullable": true
                        },
                        "baptisedBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredTo": {
                          "type": "string",
                          "nullable": true
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "firstName": "Alfred",
                        "lastName": "API Tester",
                        "sexId": 1,
                        "nationalityId": 3,
                        "campusId": 0,
                        "statusId": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated"
          }
        },
        "security": []
      }
    },
    "/campuses": {
      "get": {
        "summary": "Get all campuses",
        "description": "Returns an array of all campuses defined in ChurchTools. Campuses are sorted by its `sortKey` by default.",
        "operationId": "getAllCampuses",
        "tags": [
          "Campus"
        ],
        "responses": {
          "200": {
            "description": "All campuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Campus",
                        "type": "object",
                        "x-tags": [
                          "Campus"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of campus"
                          },
                          "name": {
                            "type": "string",
                            "description": "Campus name"
                          },
                          "shorty": {
                            "type": "string",
                            "description": "Abbreviation"
                          },
                          "sortKey": {
                            "type": "integer",
                            "description": "Used to sort all campuses"
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Gersthofen",
                          "shorty": "G",
                          "sortKey": 10
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "description": "Save new campus",
        "operationId": "createNewCampus",
        "tags": [
          "Campus"
        ],
        "responses": {
          "201": {
            "description": "Successfuly created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Campus",
                      "type": "object",
                      "x-tags": [
                        "Campus"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of campus"
                        },
                        "name": {
                          "type": "string",
                          "description": "Campus name"
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation"
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Used to sort all campuses"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Gersthofen",
                        "shorty": "G",
                        "sortKey": 10
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PaymentRequired.v1",
                  "type": "object",
                  "x-examples": {
                    "maximum campuses reached": {
                      "message": "License limit for maximum campuses reached.",
                      "translatedMessage": "Maximale Anzahl von Stationen erreicht. Erlaubt sind 1.<br>Bitte die Lizenz in den <a href='/?q=admin#/license/configurator'>Admineinstellungen</a> anpassen.",
                      "messageKey": "license.campuses.reached.allowed.are.x",
                      "args": [
                        1
                      ],
                      "errors": []
                    }
                  },
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "messageTranslated": {
                      "type": "string"
                    },
                    "massageKey": {
                      "type": "string"
                    },
                    "args": {
                      "type": "array",
                      "items": {}
                    },
                    "errors": {
                      "type": "array",
                      "items": {}
                    }
                  },
                  "description": "License Limit Reached. Please Upgrade Your License."
                },
                "examples": {
                  "License limit for maximum campuses reached": {
                    "value": {
                      "message": "License limit for maximum campuses reached.",
                      "translatedMessage": "Maximale Anzahl von Stationen erreicht. Erlaubt sind 1.<br>Bitte die Lizenz in den <a href='/?q=admin#/license/configurator'>Admineinstellungen</a> anpassen.",
                      "messageKey": "license.campuses.reached.allowed.are.x",
                      "args": [
                        1
                      ],
                      "errors": []
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "shorty"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "shorty": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 10
                  }
                },
                "example": {
                  "name": "Stuttgart",
                  "shorty": "S",
                  "sortKey": 10
                }
              }
            }
          }
        }
      }
    },
    "/campuses/{id}": {
      "get": {
        "description": "Get a specific campus",
        "tags": [
          "Campus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of campus",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Campus",
                      "type": "object",
                      "x-tags": [
                        "Campus"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of campus"
                        },
                        "name": {
                          "type": "string",
                          "description": "Campus name"
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation"
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Used to sort all campuses"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Gersthofen",
                        "shorty": "G",
                        "sortKey": 10
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see campus"
          },
          "404": {
            "description": "Campus not found"
          }
        },
        "operationId": "get-campus"
      },
      "put": {
        "description": "Update campus",
        "tags": [
          "Campus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of campus",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "New values for campus",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "shorty",
                  "sortKey"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "shorty": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Augsburg",
                  "shorty": "A",
                  "sortKey": 10
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Campus",
                      "type": "object",
                      "x-tags": [
                        "Campus"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of campus"
                        },
                        "name": {
                          "type": "string",
                          "description": "Campus name"
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation"
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Used to sort all campuses"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Gersthofen",
                        "shorty": "G",
                        "sortKey": 10
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "update-campus"
      },
      "delete": {
        "description": "Delete a campus",
        "tags": [
          "Campus"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of campus",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-campus"
      }
    },
    "/fields": {
      "get": {
        "summary": "Get all fields",
        "description": "Returns an array of all fields defined in ChurchTools.",
        "operationId": "getAllFields",
        "tags": [
          "Field"
        ],
        "responses": {
          "200": {
            "description": "All Fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of field"
                          },
                          "key": {
                            "type": "string",
                            "description": "The key of the field. This is the name that is also used when using the person or group api"
                          },
                          "name": {
                            "type": "string",
                            "description": "Field name"
                          },
                          "shorty": {
                            "type": "string",
                            "description": "Abbreviation"
                          },
                          "fieldCategoryCode": {
                            "type": "string",
                            "description": "The intern code of the field category the field belongs to"
                          },
                          "fieldTypeCode": {
                            "type": "string",
                            "description": "The intern code of the field type the field belongs to"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Active Flag"
                          },
                          "isNewPersonField": {
                            "type": "boolean",
                            "description": "Defines if the field can be used as parameter when creating new persons"
                          },
                          "lineEnding": {
                            "type": "string",
                            "description": "The line ending that should be used when displaying the field"
                          },
                          "secLevel": {
                            "type": "integer",
                            "description": "The security level necessary to see this field"
                          },
                          "length": {
                            "type": "integer",
                            "description": "The max length of the field"
                          },
                          "deleteOnArchive": {
                            "type": "boolean",
                            "description": "Whether the field should be deleted on person archive or not"
                          },
                          "nullable": {
                            "type": "boolean",
                            "description": "Should define if a field can be null. This is sadly not really enforced in the application right now. So don't bet on it."
                          },
                          "sortKey": {
                            "type": "integer",
                            "description": "Used to sort all campuses"
                          },
                          "hideInFrontend": {
                            "type": "boolean",
                            "description": "Should be hidden in frontend"
                          },
                          "options": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "id": 2,
                                "name": "Mitglied"
                              }
                            },
                            "description": "Possible options for this field"
                          }
                        },
                        "example": {
                          "id": 2,
                          "key": "street",
                          "name": "strasse",
                          "shorty": "st",
                          "fieldCategoryCode": "f_address",
                          "fieldTypeCode": "text",
                          "isActive": true,
                          "isNewPersonField": false,
                          "lineEnding": "</br>",
                          "secLevel": 1,
                          "length": 30,
                          "deleteOnArchive": false,
                          "nullable": false,
                          "sortKey": 5,
                          "hideInFrontend": false,
                          "options": [
                            {
                              "id": "1",
                              "name": "Migtlied"
                            }
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see fields"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/statuses": {
      "get": {
        "summary": "Get all statuses",
        "description": "Returns an array of all statuses defined in ChurchTools. Statuses are sorted by its `sortKey` by default.",
        "operationId": "getAllStatuses",
        "tags": [
          "Status"
        ],
        "responses": {
          "200": {
            "description": "All statuses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of status"
                          },
                          "name": {
                            "type": "string",
                            "description": "Status name"
                          },
                          "shorty": {
                            "type": "string",
                            "description": "Abbreviation of name."
                          },
                          "isMember": {
                            "type": "boolean",
                            "description": "Flag if status is member of the church"
                          },
                          "isSearchable": {
                            "type": "boolean",
                            "description": "Flag if that status is searchable"
                          },
                          "sortKey": {
                            "type": "integer",
                            "description": "Used to sort all statuses"
                          },
                          "securityLevelId": {
                            "type": "integer",
                            "description": "Only persons with that securitylevel can edit/select/delete that status"
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Mitglied",
                          "shorty": "M",
                          "isMember": true,
                          "isSearchable": true,
                          "sortKey": 10,
                          "securityLevelId": 1
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see statuses"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "post": {
        "summary": "Save new status",
        "operationId": "createNewStatus",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "description": "Status to add",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "shorty",
                  "isMember"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "shorty": {
                    "type": "string"
                  },
                  "isMember": {
                    "type": "boolean"
                  },
                  "isSearchable": {
                    "type": "boolean",
                    "default": true
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 10
                  },
                  "securityLevelId": {
                    "type": "integer",
                    "default": 1
                  }
                },
                "example": {
                  "name": "Member",
                  "shorty": "M",
                  "isMember": true,
                  "isSearchable": true,
                  "sortKey": 10,
                  "securityLevelId": 1
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "shorty",
                  "isMember"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "shorty": {
                    "type": "string"
                  },
                  "isMember": {
                    "type": "boolean"
                  },
                  "isSearchable": {
                    "type": "boolean",
                    "default": true
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 10
                  },
                  "securityLevelId": {
                    "type": "integer",
                    "default": 1
                  }
                },
                "example": {
                  "name": "Member",
                  "shorty": "M",
                  "isMember": true,
                  "isSearchable": true,
                  "sortKey": 10,
                  "securityLevelId": 1
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfuly created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of status"
                        },
                        "name": {
                          "type": "string",
                          "description": "Status name"
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation of name."
                        },
                        "isMember": {
                          "type": "boolean",
                          "description": "Flag if status is member of the church"
                        },
                        "isSearchable": {
                          "type": "boolean",
                          "description": "Flag if that status is searchable"
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Used to sort all statuses"
                        },
                        "securityLevelId": {
                          "type": "integer",
                          "description": "Only persons with that securitylevel can edit/select/delete that status"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Mitglied",
                        "shorty": "M",
                        "isMember": true,
                        "isSearchable": true,
                        "sortKey": 10,
                        "securityLevelId": 1
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/statuses/{id}": {
      "get": {
        "summary": "Get a specific status",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of status",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of status"
                        },
                        "name": {
                          "type": "string",
                          "description": "Status name"
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation of name."
                        },
                        "isMember": {
                          "type": "boolean",
                          "description": "Flag if status is member of the church"
                        },
                        "isSearchable": {
                          "type": "boolean",
                          "description": "Flag if that status is searchable"
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Used to sort all statuses"
                        },
                        "securityLevelId": {
                          "type": "integer",
                          "description": "Only persons with that securitylevel can edit/select/delete that status"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Mitglied",
                        "shorty": "M",
                        "isMember": true,
                        "isSearchable": true,
                        "sortKey": 10,
                        "securityLevelId": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see status"
          },
          "404": {
            "description": "Status not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "put": {
        "summary": "Update status",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of status",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "New values for status",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "shorty",
                  "isMember",
                  "isSearchable",
                  "sortKey",
                  "securityLevelId"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "shorty": {
                    "type": "string"
                  },
                  "isMember": {
                    "type": "boolean"
                  },
                  "isSearchable": {
                    "type": "boolean"
                  },
                  "sortKey": {
                    "type": "integer"
                  },
                  "securityLevelId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Member",
                  "shorty": "M",
                  "isMember": true,
                  "isSearchable": true,
                  "sortKey": 10,
                  "securityLevelId": 1
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of status"
                        },
                        "name": {
                          "type": "string",
                          "description": "Status name"
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation of name."
                        },
                        "isMember": {
                          "type": "boolean",
                          "description": "Flag if status is member of the church"
                        },
                        "isSearchable": {
                          "type": "boolean",
                          "description": "Flag if that status is searchable"
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Used to sort all statuses"
                        },
                        "securityLevelId": {
                          "type": "integer",
                          "description": "Only persons with that securitylevel can edit/select/delete that status"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Mitglied",
                        "shorty": "M",
                        "isMember": true,
                        "isSearchable": true,
                        "sortKey": 10,
                        "securityLevelId": 1
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a status",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of status",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons": {
      "get": {
        "summary": "Get all persons",
        "description": "This endpoint gives you all the people you are allowed to see. Each person object holds only those fields you may see. You will get at least an empty array even if you cannot see any person. The results are sorted by lastname, firstname.<br><br> We distinguish between `date` and `date-time` fields. `date` is a ISO representation like `YYYY-MM-DD`. On the other hand, for `date-time` we return and accept a <a href=\"https://www.w3.org/TR/NOTE-datetime\">W3C Zulu date string</a>. Example `1994-11-05T08:15:30Z`",
        "operationId": "getAllPersons",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "Array of person ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "status_ids",
            "in": "query",
            "description": "Filter by status id",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "campus_ids",
            "in": "query",
            "description": "Filter by campus id",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "birthday_before",
            "in": "query",
            "description": "Filter by birthdays before that date (Format: YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "birthday_after",
            "in": "query",
            "description": "Filter by birthdays after that date (Format: YYYY-MM-DD)",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "is_archived",
            "in": "query",
            "description": "Show only archived or not archived people",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show page in pagenation. If empty, start at first page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Person",
                        "type": "object",
                        "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                        "x-tags": [
                          "Person"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "securityLevelForPerson": {
                            "type": "integer",
                            "description": "Security level of the current user. The user sees fields upto this level."
                          },
                          "editSecurityLevelForPerson": {
                            "type": "integer",
                            "description": "Eidt security level of the current user. The user can edit fields upto this level."
                          },
                          "title": {
                            "type": "string",
                            "nullable": true
                          },
                          "firstName": {
                            "type": "string",
                            "nullable": true
                          },
                          "lastName": {
                            "type": "string",
                            "nullable": true
                          },
                          "nickname": {
                            "type": "string",
                            "nullable": true
                          },
                          "job": {
                            "type": "string",
                            "nullable": true
                          },
                          "street": {
                            "type": "string",
                            "nullable": true
                          },
                          "addressAddition": {
                            "type": "string",
                            "nullable": true
                          },
                          "zip": {
                            "type": "string",
                            "nullable": true
                          },
                          "city": {
                            "type": "string",
                            "nullable": true
                          },
                          "country": {
                            "type": "string",
                            "nullable": true
                          },
                          "latitude": {
                            "type": "number",
                            "format": "float",
                            "nullable": true
                          },
                          "longitude": {
                            "type": "number",
                            "format": "float",
                            "nullable": true
                          },
                          "latitudeLoose": {
                            "type": "number",
                            "format": "float",
                            "nullable": true
                          },
                          "longitudeLoose": {
                            "type": "number",
                            "format": "float",
                            "nullable": true
                          },
                          "phonePrivate": {
                            "type": "string",
                            "nullable": true
                          },
                          "phoneWork": {
                            "type": "string",
                            "nullable": true
                          },
                          "mobile": {
                            "type": "string",
                            "nullable": true
                          },
                          "fax": {
                            "type": "string",
                            "nullable": true
                          },
                          "birthName": {
                            "type": "string",
                            "nullable": true
                          },
                          "birthday": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "birthplace": {
                            "type": "string",
                            "nullable": true
                          },
                          "imageUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "familyImageUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "sexId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "nullable": true
                          },
                          "cmsUserId": {
                            "type": "string",
                            "nullable": true
                          },
                          "optigemId": {
                            "type": "string",
                            "description": "String with Optigem ID or empty string if no ID is set."
                          },
                          "privacyPolicyAgreement": {
                            "type": "object",
                            "properties": {
                              "date": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "typeId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "whoId": {
                                "type": "integer",
                                "nullable": true
                              }
                            }
                          },
                          "nationalityId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "familyStatusId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "weddingDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "campusId": {
                            "type": "integer"
                          },
                          "statusId": {
                            "type": "integer"
                          },
                          "departmentIds": {
                            "type": "array",
                            "description": "List of department IDs",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "firstContact": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "dateOfBelonging": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "dateOfEntry": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "dateOfResign": {
                            "type": "string",
                            "format": "date-time",
                            "nullable": true
                          },
                          "dateOfBaptism": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "placeOfBaptism": {
                            "type": "string",
                            "nullable": true
                          },
                          "baptisedBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "referredBy": {
                            "type": "string",
                            "nullable": true
                          },
                          "referredTo": {
                            "type": "string",
                            "nullable": true
                          },
                          "growPathId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "isArchived": {
                            "type": "boolean"
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "description": "Total number of results.",
                              "example": 21
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current page.",
                              "example": 1
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Number of results per page.",
                              "example": 10
                            },
                            "lastPage": {
                              "type": "integer",
                              "description": "Number of last page.",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create new person",
        "description": "Endpoint to save a new person in ChurchTools. Generally, you can provide any information to save, but be aware that you can only save information for fields you have write access to. If the request fails because a duplicate is found (person with same name) use the `force` flag to create this person even if a duplicate is found.",
        "operationId": "createPerson",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "description": "Force the action, which would otherwise fail.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          },
          {
            "name": "without_privacy_policy_agreement",
            "in": "query",
            "description": "If given fields for privacy policy agreements are not mandotory. Can only be used if setting is allowed in admin settings.",
            "schema": {
              "type": "boolean",
              "example": "false"
            }
          }
        ],
        "requestBody": {
          "description": "Include those fields you want to add and are allowed to write.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "description": "The default values are used if no value is provides.",
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "default": null
                  },
                  "firstName": {
                    "type": "string",
                    "nullable": true,
                    "example": "Alfred"
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true,
                    "example": "API Tester"
                  },
                  "nickname": {
                    "type": "string",
                    "nullable": true
                  },
                  "job": {
                    "type": "string",
                    "nullable": true
                  },
                  "street": {
                    "type": "string",
                    "nullable": true
                  },
                  "addressAddition": {
                    "type": "string",
                    "nullable": true
                  },
                  "zip": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "country": {
                    "type": "string",
                    "nullable": true
                  },
                  "phonePrivate": {
                    "type": "string",
                    "nullable": true
                  },
                  "phoneWork": {
                    "type": "string",
                    "nullable": true
                  },
                  "mobile": {
                    "type": "string",
                    "nullable": true
                  },
                  "fax": {
                    "type": "string",
                    "nullable": true
                  },
                  "birthName": {
                    "type": "string",
                    "nullable": true
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "birthplace": {
                    "type": "string",
                    "nullable": true
                  },
                  "sexId": {
                    "type": "integer",
                    "nullable": true,
                    "example": 1
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "emails": {
                    "description": "Save many eMail addresses for person. If `emails` is present in request `email` is ignored.",
                    "nullable": true,
                    "type": "array",
                    "items": {
                      "title": "PersonEmail",
                      "type": "object",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "pastor@church.com"
                        },
                        "isDefault": {
                          "description": "Marks the default eMail address.",
                          "type": "boolean",
                          "example": true
                        },
                        "contactLabelId": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "cmsUserId": {
                    "type": "string",
                    "nullable": true
                  },
                  "optigemId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "privacyPolicyAgreement": {
                    "description": "This object can be optional or required. Depending on your ChurchTools data security settings.",
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                      },
                      "typeId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "whoId": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  },
                  "nationalityId": {
                    "type": "integer",
                    "nullable": true,
                    "example": 3
                  },
                  "familyStatusId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "weddingDate": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "campusId": {
                    "type": "integer",
                    "example": 0
                  },
                  "statusId": {
                    "type": "integer",
                    "example": 5
                  },
                  "departmentIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Department IDs. At least one department MUST be set for a person."
                  },
                  "firstContact": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "dateOfBelonging": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "dateOfEntry": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "dateOfResign": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "dateOfBaptism": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "placeOfBaptism": {
                    "type": "string",
                    "nullable": true
                  },
                  "baptisedBy": {
                    "type": "string",
                    "nullable": true
                  },
                  "referredBy": {
                    "type": "string",
                    "nullable": true
                  },
                  "referredTo": {
                    "type": "string",
                    "nullable": true
                  },
                  "growPathId": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Person",
                      "type": "object",
                      "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "securityLevelForPerson": {
                          "type": "integer",
                          "description": "Security level of the current user. The user sees fields upto this level."
                        },
                        "editSecurityLevelForPerson": {
                          "type": "integer",
                          "description": "Eidt security level of the current user. The user can edit fields upto this level."
                        },
                        "title": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstName": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "job": {
                          "type": "string",
                          "nullable": true
                        },
                        "street": {
                          "type": "string",
                          "nullable": true
                        },
                        "addressAddition": {
                          "type": "string",
                          "nullable": true
                        },
                        "zip": {
                          "type": "string",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "latitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "phonePrivate": {
                          "type": "string",
                          "nullable": true
                        },
                        "phoneWork": {
                          "type": "string",
                          "nullable": true
                        },
                        "mobile": {
                          "type": "string",
                          "nullable": true
                        },
                        "fax": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthName": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "birthplace": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "familyImageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "sexId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "cmsUserId": {
                          "type": "string",
                          "nullable": true
                        },
                        "optigemId": {
                          "type": "string",
                          "description": "String with Optigem ID or empty string if no ID is set."
                        },
                        "privacyPolicyAgreement": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "typeId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "whoId": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        "nationalityId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "familyStatusId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "weddingDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "campusId": {
                          "type": "integer"
                        },
                        "statusId": {
                          "type": "integer"
                        },
                        "departmentIds": {
                          "type": "array",
                          "description": "List of department IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "firstContact": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBelonging": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "dateOfEntry": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfResign": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBaptism": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "placeOfBaptism": {
                          "type": "string",
                          "nullable": true
                        },
                        "baptisedBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredTo": {
                          "type": "string",
                          "nullable": true
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "firstName": "Alfred",
                        "lastName": "API Tester",
                        "sexId": 1,
                        "nationalityId": 3,
                        "campusId": 0,
                        "statusId": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request / Duplicate Person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Duplicate found. Use force flag to create person with same name."
                    },
                    "translatedMessage": {
                      "type": "string",
                      "example": "Duplikat gefunden. Nutze das force Flag um die Person trotzdem anzulegen."
                    },
                    "messageKey": {
                      "type": "string",
                      "example": "forbidden.duplicate.person"
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "402": {
            "description": "Payment Required"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/persons/properties": {
      "post": {
        "summary": "Retrieve people's properties, whether they own an email adress",
        "operationId": "getPersonProperties",
        "tags": [
          "Person"
        ],
        "requestBody": {
          "description": "List all person IDs for which you want the property information. If empty, all person IDs are used",
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "example": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get properties for people. Key = Person ID, Value = Object with person properties",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "1": {
                          "type": "object",
                          "properties": {
                            "hasEmail": {
                              "type": "boolean",
                              "example": true
                            },
                            "canChat": {
                              "type": "boolean",
                              "example": true
                            },
                            "invitationStatus": {
                              "type": "string",
                              "example": "accepted"
                            },
                            "isSamlUser": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}": {
      "get": {
        "summary": "Get a person by ID or GUID",
        "description": "Each person as a unique numeric ID in ChurchTools. This ID is used all over in ChurchTools and in the API.",
        "operationId": "getPersonById",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID or GUID of person",
            "required": true,
            "schema": {
              "type": "string",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Person",
                      "type": "object",
                      "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "securityLevelForPerson": {
                          "type": "integer",
                          "description": "Security level of the current user. The user sees fields upto this level."
                        },
                        "editSecurityLevelForPerson": {
                          "type": "integer",
                          "description": "Eidt security level of the current user. The user can edit fields upto this level."
                        },
                        "title": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstName": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "job": {
                          "type": "string",
                          "nullable": true
                        },
                        "street": {
                          "type": "string",
                          "nullable": true
                        },
                        "addressAddition": {
                          "type": "string",
                          "nullable": true
                        },
                        "zip": {
                          "type": "string",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "latitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "phonePrivate": {
                          "type": "string",
                          "nullable": true
                        },
                        "phoneWork": {
                          "type": "string",
                          "nullable": true
                        },
                        "mobile": {
                          "type": "string",
                          "nullable": true
                        },
                        "fax": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthName": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "birthplace": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "familyImageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "sexId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "cmsUserId": {
                          "type": "string",
                          "nullable": true
                        },
                        "optigemId": {
                          "type": "string",
                          "description": "String with Optigem ID or empty string if no ID is set."
                        },
                        "privacyPolicyAgreement": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "typeId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "whoId": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        "nationalityId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "familyStatusId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "weddingDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "campusId": {
                          "type": "integer"
                        },
                        "statusId": {
                          "type": "integer"
                        },
                        "departmentIds": {
                          "type": "array",
                          "description": "List of department IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "firstContact": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBelonging": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "dateOfEntry": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfResign": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBaptism": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "placeOfBaptism": {
                          "type": "string",
                          "nullable": true
                        },
                        "baptisedBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredTo": {
                          "type": "string",
                          "nullable": true
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "firstName": "Alfred",
                        "lastName": "API Tester",
                        "sexId": 1,
                        "nationalityId": 3,
                        "campusId": 0,
                        "statusId": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "patch": {
        "summary": "Updates a person",
        "description": "Endpoint to update a person in ChurchTools. Generally, you can provide any information to save, but be aware that you can only save information for fields you have write access to. Beware, that not all fields which are listed in the Person schema can be updated. E.g. `imageUrl` or `familyUrl`.",
        "operationId": "patchPerson",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "requestBody": {
          "description": "Include those fields you want to update and are allowed to write.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "nullable": true,
                    "default": null
                  },
                  "firstName": {
                    "type": "string",
                    "nullable": true,
                    "example": "Alfred"
                  },
                  "lastName": {
                    "type": "string",
                    "nullable": true,
                    "example": "API Tester"
                  },
                  "nickname": {
                    "type": "string",
                    "nullable": true
                  },
                  "job": {
                    "type": "string",
                    "nullable": true
                  },
                  "street": {
                    "type": "string",
                    "nullable": true
                  },
                  "addressAddition": {
                    "type": "string",
                    "nullable": true
                  },
                  "zip": {
                    "type": "string",
                    "nullable": true
                  },
                  "city": {
                    "type": "string",
                    "nullable": true
                  },
                  "country": {
                    "type": "string",
                    "nullable": true
                  },
                  "phonePrivate": {
                    "type": "string",
                    "nullable": true
                  },
                  "phoneWork": {
                    "type": "string",
                    "nullable": true
                  },
                  "mobile": {
                    "type": "string",
                    "nullable": true
                  },
                  "fax": {
                    "type": "string",
                    "nullable": true
                  },
                  "birthName": {
                    "type": "string",
                    "nullable": true
                  },
                  "birthday": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "birthplace": {
                    "type": "string",
                    "nullable": true
                  },
                  "sexId": {
                    "type": "integer",
                    "nullable": true,
                    "example": 1
                  },
                  "email": {
                    "type": "string",
                    "nullable": true
                  },
                  "emails": {
                    "description": "Save many eMail addresses for person. If `emails` is present in request `email` is ignored.",
                    "nullable": true,
                    "type": "array",
                    "items": {
                      "title": "PersonEmail",
                      "type": "object",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "email": {
                          "type": "string",
                          "example": "pastor@church.com"
                        },
                        "isDefault": {
                          "description": "Marks the default eMail address.",
                          "type": "boolean",
                          "example": true
                        },
                        "contactLabelId": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  },
                  "cmsUserId": {
                    "type": "string",
                    "nullable": true
                  },
                  "optigemId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "privacyPolicyAgreement": {
                    "description": "This object can be optional or required. Depending on your ChurchTools data security settings.",
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                      },
                      "typeId": {
                        "type": "integer",
                        "nullable": true
                      },
                      "whoId": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  },
                  "nationalityId": {
                    "type": "integer",
                    "nullable": true,
                    "example": 3
                  },
                  "familyStatusId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "weddingDate": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "campusId": {
                    "type": "integer",
                    "example": 0
                  },
                  "statusId": {
                    "type": "integer",
                    "example": 5
                  },
                  "departmentIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "description": "Department IDs. At least one department MUST be set for a person. The last department ID cannot be deleted."
                  },
                  "firstContact": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "dateOfBelonging": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "dateOfEntry": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "dateOfResign": {
                    "type": "string",
                    "format": "date-time",
                    "nullable": true
                  },
                  "dateOfBaptism": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "placeOfBaptism": {
                    "type": "string",
                    "nullable": true
                  },
                  "baptisedBy": {
                    "type": "string",
                    "nullable": true
                  },
                  "referredBy": {
                    "type": "string",
                    "nullable": true
                  },
                  "referredTo": {
                    "type": "string",
                    "nullable": true
                  },
                  "growPathId": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Person",
                      "type": "object",
                      "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "securityLevelForPerson": {
                          "type": "integer",
                          "description": "Security level of the current user. The user sees fields upto this level."
                        },
                        "editSecurityLevelForPerson": {
                          "type": "integer",
                          "description": "Eidt security level of the current user. The user can edit fields upto this level."
                        },
                        "title": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstName": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "job": {
                          "type": "string",
                          "nullable": true
                        },
                        "street": {
                          "type": "string",
                          "nullable": true
                        },
                        "addressAddition": {
                          "type": "string",
                          "nullable": true
                        },
                        "zip": {
                          "type": "string",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "latitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "phonePrivate": {
                          "type": "string",
                          "nullable": true
                        },
                        "phoneWork": {
                          "type": "string",
                          "nullable": true
                        },
                        "mobile": {
                          "type": "string",
                          "nullable": true
                        },
                        "fax": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthName": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "birthplace": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "familyImageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "sexId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "cmsUserId": {
                          "type": "string",
                          "nullable": true
                        },
                        "optigemId": {
                          "type": "string",
                          "description": "String with Optigem ID or empty string if no ID is set."
                        },
                        "privacyPolicyAgreement": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "typeId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "whoId": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        "nationalityId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "familyStatusId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "weddingDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "campusId": {
                          "type": "integer"
                        },
                        "statusId": {
                          "type": "integer"
                        },
                        "departmentIds": {
                          "type": "array",
                          "description": "List of department IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "firstContact": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBelonging": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "dateOfEntry": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfResign": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBaptism": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "placeOfBaptism": {
                          "type": "string",
                          "nullable": true
                        },
                        "baptisedBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredTo": {
                          "type": "string",
                          "nullable": true
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "firstName": "Alfred",
                        "lastName": "API Tester",
                        "sexId": 1,
                        "nationalityId": 3,
                        "campusId": 0,
                        "statusId": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "There are validation errors"
                    },
                    "translatedMessage": {
                      "type": "string",
                      "example": "Die eingegebenen Daten waren nicht korrekt."
                    },
                    "messageKey": {
                      "type": "string",
                      "example": "validation.error"
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "delete": {
        "summary": "Delete person",
        "operationId": "deletePerson",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/persons/{id}/tags": {
      "get": {
        "summary": "Get all tags attached to a person",
        "operationId": "getPersonTags",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tags of person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "count": {
                            "type": "integer"
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Super Tag",
                          "count": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/relationships": {
      "get": {
        "summary": "Get all relationships linked to this person",
        "description": "This endpoint returns all relationships of this person. The result is sorted by 1. the `sortkey` of the relationship type, 2. last name, and 3. first name of a person.",
        "operationId": "getPersonRelationships",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Relationships of person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "personRelationship",
                        "type": "object",
                        "x-tags": [
                          "Person"
                        ],
                        "description": "Relationship information of a person. Notice, that a relationship has a security level. That means you only see those relationships, you are allowed to see.",
                        "properties": {
                          "relative": {
                            "title": "Person DomainObject",
                            "type": "object",
                            "x-tags": [
                              "Person"
                            ],
                            "description": "Person as Domain Object",
                            "properties": {
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string",
                                    "description": "",
                                    "example": "Vanessa"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "example": "Fischer",
                                    "description": ""
                                  },
                                  "guid": {
                                    "type": "string",
                                    "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                    "description": "Globally Unique Identifier"
                                  }
                                }
                              },
                              "imageUrl": {
                                "type": "string",
                                "description": "Image Url",
                                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                              },
                              "frontendUrl": {
                                "type": "string",
                                "description": "Frontend link",
                                "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                              },
                              "apiUrl": {
                                "type": "string",
                                "description": "API Endpoint to calendar",
                                "example": "http://churchtools.test/api/persons/19"
                              },
                              "domainType": {
                                "type": "string",
                                "description": "ChurchTools domain type",
                                "example": "person"
                              },
                              "title": {
                                "type": "string",
                                "description": "Fullname of Person",
                                "example": "Vanessa Fischer"
                              },
                              "domainIdentifier": {
                                "type": "string",
                                "example": "19",
                                "description": "Person ID"
                              }
                            }
                          },
                          "degreeOfRelationship": {
                            "type": "string",
                            "example": "Parent",
                            "description": "Name of type, what this relative is for the user."
                          },
                          "relationshipName": {
                            "type": "string",
                            "example": "Parent/Child",
                            "description": "Name of Relationship"
                          },
                          "relationshipTypeId": {
                            "type": "integer",
                            "example": "1",
                            "description": "ID of relationship type"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/persons/{id}/settings": {
      "get": {
        "summary": "Get all person settings",
        "description": "Use this endpoint to get all person settings for this user.",
        "operationId": "getAllPersonSettings",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All person settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Piece of meta information about a person, like is this person using two factor authentication or does she want service remind mails.",
                        "type": "object",
                        "properties": {
                          "module": {
                            "type": "string"
                          },
                          "attribute": {
                            "type": "string"
                          },
                          "value": {
                            "description": "Mixed content. Each setting has its own type.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "array"
                              },
                              {
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "example": {
                          "module": "churchcore",
                          "attribute": "saml-id",
                          "value": 99
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/settings/{module}": {
      "get": {
        "summary": "Get all person settings of a module",
        "description": "Person settings are grouped per module. This endpoint returns an array of all user settings for a person of this module.",
        "operationId": "getPersonModuleSettings",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "module",
            "in": "path",
            "required": true,
            "description": "Module name like `churchdb` or `churchservice`",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of person settings for this module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Piece of meta information about a person, like is this person using two factor authentication or does she want service remind mails.",
                        "type": "object",
                        "properties": {
                          "module": {
                            "type": "string"
                          },
                          "attribute": {
                            "type": "string"
                          },
                          "value": {
                            "description": "Mixed content. Each setting has its own type.",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "integer"
                              },
                              {
                                "type": "array"
                              },
                              {
                                "type": "object"
                              }
                            ]
                          }
                        },
                        "example": {
                          "module": "churchcore",
                          "attribute": "saml-id",
                          "value": 99
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/settings/{module}/{attribute}": {
      "get": {
        "summary": "Get person setting",
        "description": "To retrieve a specific person setting, use this endpoint. A setting is identifies by `module` and `attribute`.",
        "operationId": "getPersonSetting",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "module",
            "in": "path",
            "required": true,
            "description": "Module name like `churchdb` or `churchservice`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "required": true,
            "description": "Attribute name of setting",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Piece of meta information about a person, like is this person using two factor authentication or does she want service remind mails.",
                      "type": "object",
                      "properties": {
                        "module": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "value": {
                          "description": "Mixed content. Each setting has its own type.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "array"
                            },
                            {
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "example": {
                        "module": "churchcore",
                        "attribute": "saml-id",
                        "value": 99
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "put": {
        "summary": "Create/Update person setting",
        "description": "<strong>Important:</strong> Not all settings are supported to update over this endpoint. The API will tell you if you are allowed to update a setting.<br>This endpoint can be used to update a value of an existing setting or create it if it does not exists, yet.",
        "operationId": "updatePersonSetting",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "module",
            "in": "path",
            "required": true,
            "description": "Module name like `churchdb` or `churchservice`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "required": true,
            "description": "Attribute name of setting",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created/updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "description": "Piece of meta information about a person, like is this person using two factor authentication or does she want service remind mails.",
                      "type": "object",
                      "properties": {
                        "module": {
                          "type": "string"
                        },
                        "attribute": {
                          "type": "string"
                        },
                        "value": {
                          "description": "Mixed content. Each setting has its own type.",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "integer"
                            },
                            {
                              "type": "array"
                            },
                            {
                              "type": "object"
                            }
                          ]
                        }
                      },
                      "example": {
                        "module": "churchcore",
                        "attribute": "saml-id",
                        "value": 99
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a person setting",
        "description": "Deleting settings is sometimes useful or necessary. This endpoint can be used to delete one specific setting.",
        "operationId": "deletePersonSetting",
        "tags": [
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "module",
            "in": "path",
            "required": true,
            "description": "Module name like `churchdb` or `churchservice`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attribute",
            "in": "path",
            "required": true,
            "description": "Attribute name of setting",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/events": {
      "get": {
        "summary": "Get events that person is involved with",
        "description": "Gets a list of all events that a person is involved",
        "operationId": "getPersonEvents",
        "tags": [
          "Event",
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "string",
              "example": 42
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Start date from when events are returned. Default value: today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2019-08-08"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "guid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "eventServices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "person": {
                                "nullable": true,
                                "type": "object",
                                "properties": {
                                  "titel": {
                                    "type": "string"
                                  },
                                  "domainType": {
                                    "type": "string",
                                    "enum": [
                                      "person"
                                    ]
                                  },
                                  "domainIdentifier": {
                                    "type": "string"
                                  },
                                  "apiUrl": {
                                    "type": "string"
                                  },
                                  "frontendUrl": {
                                    "type": "string"
                                  },
                                  "imageUrl": {
                                    "type": "string"
                                  },
                                  "domainAttributes": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string"
                                      },
                                      "lastName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "title": "John Smith",
                                  "domainType": "person",
                                  "domainIdentifier": "116",
                                  "apiUrl": "http://churchtools.test/api/persons/116",
                                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                  "imageUrl": "",
                                  "domainAttributes": [
                                    {
                                      "firstName": "John",
                                      "lastName": "Smith"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "serviceId": {
                                "type": "integer"
                              },
                              "agreed": {
                                "type": "boolean"
                              },
                              "isValid": {
                                "type": "boolean"
                              },
                              "requestedDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "requesterPerson": {
                                "nullable": true,
                                "type": "object",
                                "properties": {
                                  "titel": {
                                    "type": "string"
                                  },
                                  "domainType": {
                                    "type": "string",
                                    "enum": [
                                      "person"
                                    ]
                                  },
                                  "domainIdentifier": {
                                    "type": "string"
                                  },
                                  "apiUrl": {
                                    "type": "string"
                                  },
                                  "frontendUrl": {
                                    "type": "string"
                                  },
                                  "imageUrl": {
                                    "type": "string"
                                  },
                                  "domainAttributes": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string"
                                      },
                                      "lastName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "title": "John Smith",
                                  "domainType": "person",
                                  "domainIdentifier": "116",
                                  "apiUrl": "http://churchtools.test/api/persons/116",
                                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                  "imageUrl": "",
                                  "domainAttributes": [
                                    {
                                      "firstName": "John",
                                      "lastName": "Smith"
                                    }
                                  ]
                                }
                              },
                              "comment": {
                                "type": "string"
                              },
                              "counter": {
                                "type": "integer"
                              },
                              "allowChat": {
                                "type": "boolean"
                              }
                            },
                            "example": {
                              "id": 77,
                              "person": {
                                "title": "John Smith",
                                "domainType": "person",
                                "domainIdentifier": "116",
                                "apiUrl": "http://churchtools.test/api/persons/116",
                                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                "imageUrl": "",
                                "domainAttributes": [
                                  {
                                    "firstName": "John",
                                    "lastName": "Smith"
                                  }
                                ]
                              },
                              "name": "John Smith",
                              "serviceId": 8,
                              "agreed": true,
                              "isValid": true,
                              "requestedDate": "2019-08-01T16:16:54Z",
                              "requesterPerson": {
                                "title": "John Smith",
                                "domainType": "person",
                                "domainIdentifier": "116",
                                "apiUrl": "http://churchtools.test/api/persons/116",
                                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                "imageUrl": "",
                                "domainAttributes": [
                                  {
                                    "firstName": "John",
                                    "lastName": "Smith"
                                  }
                                ]
                              },
                              "comment": "I\"m in",
                              "counter": 0,
                              "allowChat": true
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 10,
                        "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                        "name": "Sunday Service",
                        "description": "We celebrate",
                        "startDate": "2019-08-06T11:00:00Z",
                        "endDate": "2019-08-06T12:30:00Z",
                        "items": [
                          {
                            "id": 77,
                            "person": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            },
                            "name": "John Smith",
                            "serviceId": 8,
                            "agreed": true,
                            "isValid": true,
                            "requestedDate": "2019-08-01T16:16:54Z",
                            "requesterPerson": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            },
                            "comment": "I\"m in",
                            "counter": 0,
                            "allowChat": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/servicerequests": {
      "get": {
        "summary": "Get all service requests for a person",
        "description": "Use this endpoint to get all service requests for this user.",
        "operationId": "getOpenServiceRequestsForPerson",
        "tags": [
          "Person",
          "Service & Service Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All service requests for this person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "personId": {
                            "deprecated": true,
                            "type": "integer"
                          },
                          "person": {
                            "title": "Person",
                            "type": "object",
                            "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                            "x-tags": [
                              "Person"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "securityLevelForPerson": {
                                "type": "integer",
                                "description": "Security level of the current user. The user sees fields upto this level."
                              },
                              "editSecurityLevelForPerson": {
                                "type": "integer",
                                "description": "Eidt security level of the current user. The user can edit fields upto this level."
                              },
                              "title": {
                                "type": "string",
                                "nullable": true
                              },
                              "firstName": {
                                "type": "string",
                                "nullable": true
                              },
                              "lastName": {
                                "type": "string",
                                "nullable": true
                              },
                              "nickname": {
                                "type": "string",
                                "nullable": true
                              },
                              "job": {
                                "type": "string",
                                "nullable": true
                              },
                              "street": {
                                "type": "string",
                                "nullable": true
                              },
                              "addressAddition": {
                                "type": "string",
                                "nullable": true
                              },
                              "zip": {
                                "type": "string",
                                "nullable": true
                              },
                              "city": {
                                "type": "string",
                                "nullable": true
                              },
                              "country": {
                                "type": "string",
                                "nullable": true
                              },
                              "latitude": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "longitude": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "latitudeLoose": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "longitudeLoose": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "phonePrivate": {
                                "type": "string",
                                "nullable": true
                              },
                              "phoneWork": {
                                "type": "string",
                                "nullable": true
                              },
                              "mobile": {
                                "type": "string",
                                "nullable": true
                              },
                              "fax": {
                                "type": "string",
                                "nullable": true
                              },
                              "birthName": {
                                "type": "string",
                                "nullable": true
                              },
                              "birthday": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "birthplace": {
                                "type": "string",
                                "nullable": true
                              },
                              "imageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "familyImageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "sexId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "cmsUserId": {
                                "type": "string",
                                "nullable": true
                              },
                              "optigemId": {
                                "type": "string",
                                "description": "String with Optigem ID or empty string if no ID is set."
                              },
                              "privacyPolicyAgreement": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "format": "date",
                                    "nullable": true
                                  },
                                  "typeId": {
                                    "type": "integer",
                                    "nullable": true
                                  },
                                  "whoId": {
                                    "type": "integer",
                                    "nullable": true
                                  }
                                }
                              },
                              "nationalityId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "familyStatusId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "weddingDate": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "campusId": {
                                "type": "integer"
                              },
                              "statusId": {
                                "type": "integer"
                              },
                              "departmentIds": {
                                "type": "array",
                                "description": "List of department IDs",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "firstContact": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateOfBelonging": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "dateOfEntry": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateOfResign": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateOfBaptism": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "placeOfBaptism": {
                                "type": "string",
                                "nullable": true
                              },
                              "baptisedBy": {
                                "type": "string",
                                "nullable": true
                              },
                              "referredBy": {
                                "type": "string",
                                "nullable": true
                              },
                              "referredTo": {
                                "type": "string",
                                "nullable": true
                              },
                              "growPathId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "isArchived": {
                                "type": "boolean"
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "firstName": "Alfred",
                              "lastName": "API Tester",
                              "sexId": 1,
                              "nationalityId": 3,
                              "campusId": 0,
                              "statusId": 5
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "serviceId": {
                            "type": "integer"
                          },
                          "agreed": {
                            "type": "boolean"
                          },
                          "isValid": {
                            "type": "boolean"
                          },
                          "requestedDate": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "requesterPersonId": {
                            "deprecated": true,
                            "type": "integer"
                          },
                          "requesterPerson": {
                            "title": "Person",
                            "type": "object",
                            "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                            "x-tags": [
                              "Person"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "securityLevelForPerson": {
                                "type": "integer",
                                "description": "Security level of the current user. The user sees fields upto this level."
                              },
                              "editSecurityLevelForPerson": {
                                "type": "integer",
                                "description": "Eidt security level of the current user. The user can edit fields upto this level."
                              },
                              "title": {
                                "type": "string",
                                "nullable": true
                              },
                              "firstName": {
                                "type": "string",
                                "nullable": true
                              },
                              "lastName": {
                                "type": "string",
                                "nullable": true
                              },
                              "nickname": {
                                "type": "string",
                                "nullable": true
                              },
                              "job": {
                                "type": "string",
                                "nullable": true
                              },
                              "street": {
                                "type": "string",
                                "nullable": true
                              },
                              "addressAddition": {
                                "type": "string",
                                "nullable": true
                              },
                              "zip": {
                                "type": "string",
                                "nullable": true
                              },
                              "city": {
                                "type": "string",
                                "nullable": true
                              },
                              "country": {
                                "type": "string",
                                "nullable": true
                              },
                              "latitude": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "longitude": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "latitudeLoose": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "longitudeLoose": {
                                "type": "number",
                                "format": "float",
                                "nullable": true
                              },
                              "phonePrivate": {
                                "type": "string",
                                "nullable": true
                              },
                              "phoneWork": {
                                "type": "string",
                                "nullable": true
                              },
                              "mobile": {
                                "type": "string",
                                "nullable": true
                              },
                              "fax": {
                                "type": "string",
                                "nullable": true
                              },
                              "birthName": {
                                "type": "string",
                                "nullable": true
                              },
                              "birthday": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "birthplace": {
                                "type": "string",
                                "nullable": true
                              },
                              "imageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "familyImageUrl": {
                                "type": "string",
                                "nullable": true
                              },
                              "sexId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "email": {
                                "type": "string",
                                "nullable": true
                              },
                              "cmsUserId": {
                                "type": "string",
                                "nullable": true
                              },
                              "optigemId": {
                                "type": "string",
                                "description": "String with Optigem ID or empty string if no ID is set."
                              },
                              "privacyPolicyAgreement": {
                                "type": "object",
                                "properties": {
                                  "date": {
                                    "type": "string",
                                    "format": "date",
                                    "nullable": true
                                  },
                                  "typeId": {
                                    "type": "integer",
                                    "nullable": true
                                  },
                                  "whoId": {
                                    "type": "integer",
                                    "nullable": true
                                  }
                                }
                              },
                              "nationalityId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "familyStatusId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "weddingDate": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "campusId": {
                                "type": "integer"
                              },
                              "statusId": {
                                "type": "integer"
                              },
                              "departmentIds": {
                                "type": "array",
                                "description": "List of department IDs",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "firstContact": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateOfBelonging": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "dateOfEntry": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateOfResign": {
                                "type": "string",
                                "format": "date-time",
                                "nullable": true
                              },
                              "dateOfBaptism": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "placeOfBaptism": {
                                "type": "string",
                                "nullable": true
                              },
                              "baptisedBy": {
                                "type": "string",
                                "nullable": true
                              },
                              "referredBy": {
                                "type": "string",
                                "nullable": true
                              },
                              "referredTo": {
                                "type": "string",
                                "nullable": true
                              },
                              "growPathId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "isArchived": {
                                "type": "boolean"
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "firstName": "Alfred",
                              "lastName": "API Tester",
                              "sexId": 1,
                              "nationalityId": 3,
                              "campusId": 0,
                              "statusId": 5
                            }
                          },
                          "comment": {
                            "type": "string"
                          },
                          "counter": {
                            "type": "integer"
                          }
                        },
                        "example": {
                          "id": 2,
                          "personId": 1,
                          "person": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          },
                          "name": "Alfred Tester",
                          "serviceId": 2,
                          "agreed": false,
                          "isValid": true,
                          "requestedDate": "1970-01-01T12:00:00Z",
                          "requesterPersonId": 1,
                          "requesterPerson": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          },
                          "comment": "",
                          "counter": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/servicerequests/{requestId}": {
      "get": {
        "summary": "Get a specific service request for a person",
        "description": "Use this endpoint to get a specific service request for this user.",
        "operationId": "getServiceRequestById",
        "tags": [
          "Person",
          "Service & Service Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of a service request",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A specific service request for this person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "personId": {
                          "deprecated": true,
                          "type": "integer"
                        },
                        "person": {
                          "title": "Person",
                          "type": "object",
                          "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                          "x-tags": [
                            "Person"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "securityLevelForPerson": {
                              "type": "integer",
                              "description": "Security level of the current user. The user sees fields upto this level."
                            },
                            "editSecurityLevelForPerson": {
                              "type": "integer",
                              "description": "Eidt security level of the current user. The user can edit fields upto this level."
                            },
                            "title": {
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "type": "string",
                              "nullable": true
                            },
                            "lastName": {
                              "type": "string",
                              "nullable": true
                            },
                            "nickname": {
                              "type": "string",
                              "nullable": true
                            },
                            "job": {
                              "type": "string",
                              "nullable": true
                            },
                            "street": {
                              "type": "string",
                              "nullable": true
                            },
                            "addressAddition": {
                              "type": "string",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "nullable": true
                            },
                            "country": {
                              "type": "string",
                              "nullable": true
                            },
                            "latitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "latitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "phonePrivate": {
                              "type": "string",
                              "nullable": true
                            },
                            "phoneWork": {
                              "type": "string",
                              "nullable": true
                            },
                            "mobile": {
                              "type": "string",
                              "nullable": true
                            },
                            "fax": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthName": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "birthplace": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "familyImageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "sexId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "cmsUserId": {
                              "type": "string",
                              "nullable": true
                            },
                            "optigemId": {
                              "type": "string",
                              "description": "String with Optigem ID or empty string if no ID is set."
                            },
                            "privacyPolicyAgreement": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                },
                                "typeId": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "whoId": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "nationalityId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "familyStatusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "weddingDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "campusId": {
                              "type": "integer"
                            },
                            "statusId": {
                              "type": "integer"
                            },
                            "departmentIds": {
                              "type": "array",
                              "description": "List of department IDs",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "firstContact": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBelonging": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "dateOfEntry": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfResign": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBaptism": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "placeOfBaptism": {
                              "type": "string",
                              "nullable": true
                            },
                            "baptisedBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredTo": {
                              "type": "string",
                              "nullable": true
                            },
                            "growPathId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "isArchived": {
                              "type": "boolean"
                            },
                            "meta": {
                              "title": "Entity Meta Data",
                              "type": "object",
                              "description": "Created and Modified Date of an Entity",
                              "properties": {
                                "createdPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Created the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "createdDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Creation"
                                },
                                "modifiedPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Modified the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "modifiedDate": {
                                  "type": "string",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Last Modification"
                                }
                              }
                            }
                          },
                          "example": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "serviceId": {
                          "type": "integer"
                        },
                        "agreed": {
                          "type": "boolean"
                        },
                        "isValid": {
                          "type": "boolean"
                        },
                        "requestedDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "requesterPersonId": {
                          "deprecated": true,
                          "type": "integer"
                        },
                        "requesterPerson": {
                          "title": "Person",
                          "type": "object",
                          "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                          "x-tags": [
                            "Person"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "securityLevelForPerson": {
                              "type": "integer",
                              "description": "Security level of the current user. The user sees fields upto this level."
                            },
                            "editSecurityLevelForPerson": {
                              "type": "integer",
                              "description": "Eidt security level of the current user. The user can edit fields upto this level."
                            },
                            "title": {
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "type": "string",
                              "nullable": true
                            },
                            "lastName": {
                              "type": "string",
                              "nullable": true
                            },
                            "nickname": {
                              "type": "string",
                              "nullable": true
                            },
                            "job": {
                              "type": "string",
                              "nullable": true
                            },
                            "street": {
                              "type": "string",
                              "nullable": true
                            },
                            "addressAddition": {
                              "type": "string",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "nullable": true
                            },
                            "country": {
                              "type": "string",
                              "nullable": true
                            },
                            "latitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "latitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "phonePrivate": {
                              "type": "string",
                              "nullable": true
                            },
                            "phoneWork": {
                              "type": "string",
                              "nullable": true
                            },
                            "mobile": {
                              "type": "string",
                              "nullable": true
                            },
                            "fax": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthName": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "birthplace": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "familyImageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "sexId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "cmsUserId": {
                              "type": "string",
                              "nullable": true
                            },
                            "optigemId": {
                              "type": "string",
                              "description": "String with Optigem ID or empty string if no ID is set."
                            },
                            "privacyPolicyAgreement": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                },
                                "typeId": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "whoId": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "nationalityId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "familyStatusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "weddingDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "campusId": {
                              "type": "integer"
                            },
                            "statusId": {
                              "type": "integer"
                            },
                            "departmentIds": {
                              "type": "array",
                              "description": "List of department IDs",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "firstContact": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBelonging": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "dateOfEntry": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfResign": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBaptism": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "placeOfBaptism": {
                              "type": "string",
                              "nullable": true
                            },
                            "baptisedBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredTo": {
                              "type": "string",
                              "nullable": true
                            },
                            "growPathId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "isArchived": {
                              "type": "boolean"
                            },
                            "meta": {
                              "title": "Entity Meta Data",
                              "type": "object",
                              "description": "Created and Modified Date of an Entity",
                              "properties": {
                                "createdPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Created the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "createdDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Creation"
                                },
                                "modifiedPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Modified the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "modifiedDate": {
                                  "type": "string",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Last Modification"
                                }
                              }
                            }
                          },
                          "example": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          }
                        },
                        "comment": {
                          "type": "string"
                        },
                        "counter": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "id": 2,
                        "personId": 1,
                        "person": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        },
                        "name": "Alfred Tester",
                        "serviceId": 2,
                        "agreed": false,
                        "isValid": true,
                        "requestedDate": "1970-01-01T12:00:00Z",
                        "requesterPersonId": 1,
                        "requesterPerson": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        },
                        "comment": "",
                        "counter": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "post": {
        "summary": "Agree to a service request for a person",
        "description": "Use this endpoint to agree to a service request. To decline a service request, use the DELETE method.",
        "operationId": "updateServiceRequestById",
        "tags": [
          "Person",
          "Service & Service Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of a service request",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "requestBody": {
          "description": "Send the agreed state and optionally a comment.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agreed": {
                    "type": "boolean",
                    "description": "Only true is allowed when updating."
                  },
                  "comment": {
                    "type": "string"
                  }
                },
                "example": {
                  "agreed": true,
                  "comment": ""
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated service request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "personId": {
                          "deprecated": true,
                          "type": "integer"
                        },
                        "person": {
                          "title": "Person",
                          "type": "object",
                          "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                          "x-tags": [
                            "Person"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "securityLevelForPerson": {
                              "type": "integer",
                              "description": "Security level of the current user. The user sees fields upto this level."
                            },
                            "editSecurityLevelForPerson": {
                              "type": "integer",
                              "description": "Eidt security level of the current user. The user can edit fields upto this level."
                            },
                            "title": {
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "type": "string",
                              "nullable": true
                            },
                            "lastName": {
                              "type": "string",
                              "nullable": true
                            },
                            "nickname": {
                              "type": "string",
                              "nullable": true
                            },
                            "job": {
                              "type": "string",
                              "nullable": true
                            },
                            "street": {
                              "type": "string",
                              "nullable": true
                            },
                            "addressAddition": {
                              "type": "string",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "nullable": true
                            },
                            "country": {
                              "type": "string",
                              "nullable": true
                            },
                            "latitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "latitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "phonePrivate": {
                              "type": "string",
                              "nullable": true
                            },
                            "phoneWork": {
                              "type": "string",
                              "nullable": true
                            },
                            "mobile": {
                              "type": "string",
                              "nullable": true
                            },
                            "fax": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthName": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "birthplace": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "familyImageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "sexId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "cmsUserId": {
                              "type": "string",
                              "nullable": true
                            },
                            "optigemId": {
                              "type": "string",
                              "description": "String with Optigem ID or empty string if no ID is set."
                            },
                            "privacyPolicyAgreement": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                },
                                "typeId": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "whoId": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "nationalityId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "familyStatusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "weddingDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "campusId": {
                              "type": "integer"
                            },
                            "statusId": {
                              "type": "integer"
                            },
                            "departmentIds": {
                              "type": "array",
                              "description": "List of department IDs",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "firstContact": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBelonging": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "dateOfEntry": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfResign": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBaptism": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "placeOfBaptism": {
                              "type": "string",
                              "nullable": true
                            },
                            "baptisedBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredTo": {
                              "type": "string",
                              "nullable": true
                            },
                            "growPathId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "isArchived": {
                              "type": "boolean"
                            },
                            "meta": {
                              "title": "Entity Meta Data",
                              "type": "object",
                              "description": "Created and Modified Date of an Entity",
                              "properties": {
                                "createdPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Created the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "createdDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Creation"
                                },
                                "modifiedPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Modified the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "modifiedDate": {
                                  "type": "string",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Last Modification"
                                }
                              }
                            }
                          },
                          "example": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "serviceId": {
                          "type": "integer"
                        },
                        "agreed": {
                          "type": "boolean"
                        },
                        "isValid": {
                          "type": "boolean"
                        },
                        "requestedDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "requesterPersonId": {
                          "deprecated": true,
                          "type": "integer"
                        },
                        "requesterPerson": {
                          "title": "Person",
                          "type": "object",
                          "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                          "x-tags": [
                            "Person"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "securityLevelForPerson": {
                              "type": "integer",
                              "description": "Security level of the current user. The user sees fields upto this level."
                            },
                            "editSecurityLevelForPerson": {
                              "type": "integer",
                              "description": "Eidt security level of the current user. The user can edit fields upto this level."
                            },
                            "title": {
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "type": "string",
                              "nullable": true
                            },
                            "lastName": {
                              "type": "string",
                              "nullable": true
                            },
                            "nickname": {
                              "type": "string",
                              "nullable": true
                            },
                            "job": {
                              "type": "string",
                              "nullable": true
                            },
                            "street": {
                              "type": "string",
                              "nullable": true
                            },
                            "addressAddition": {
                              "type": "string",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "nullable": true
                            },
                            "country": {
                              "type": "string",
                              "nullable": true
                            },
                            "latitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "latitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "phonePrivate": {
                              "type": "string",
                              "nullable": true
                            },
                            "phoneWork": {
                              "type": "string",
                              "nullable": true
                            },
                            "mobile": {
                              "type": "string",
                              "nullable": true
                            },
                            "fax": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthName": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "birthplace": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "familyImageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "sexId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "cmsUserId": {
                              "type": "string",
                              "nullable": true
                            },
                            "optigemId": {
                              "type": "string",
                              "description": "String with Optigem ID or empty string if no ID is set."
                            },
                            "privacyPolicyAgreement": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                },
                                "typeId": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "whoId": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "nationalityId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "familyStatusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "weddingDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "campusId": {
                              "type": "integer"
                            },
                            "statusId": {
                              "type": "integer"
                            },
                            "departmentIds": {
                              "type": "array",
                              "description": "List of department IDs",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "firstContact": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBelonging": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "dateOfEntry": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfResign": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBaptism": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "placeOfBaptism": {
                              "type": "string",
                              "nullable": true
                            },
                            "baptisedBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredTo": {
                              "type": "string",
                              "nullable": true
                            },
                            "growPathId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "isArchived": {
                              "type": "boolean"
                            },
                            "meta": {
                              "title": "Entity Meta Data",
                              "type": "object",
                              "description": "Created and Modified Date of an Entity",
                              "properties": {
                                "createdPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Created the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "createdDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Creation"
                                },
                                "modifiedPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Modified the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "modifiedDate": {
                                  "type": "string",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Last Modification"
                                }
                              }
                            }
                          },
                          "example": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          }
                        },
                        "comment": {
                          "type": "string"
                        },
                        "counter": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "id": 2,
                        "personId": 1,
                        "person": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        },
                        "name": "Alfred Tester",
                        "serviceId": 2,
                        "agreed": false,
                        "isValid": true,
                        "requestedDate": "1970-01-01T12:00:00Z",
                        "requesterPersonId": 1,
                        "requesterPerson": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        },
                        "comment": "",
                        "counter": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Decline a service request for a person",
        "description": "Use this endpoint to decline a service request.",
        "operationId": "declineServiceRequestById",
        "tags": [
          "Person",
          "Service & Service Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of a service request",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Comment",
            "required": false,
            "schema": {
              "type": "string",
              "example": ""
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The service request has been declined."
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/servicerequests/{requestId}/undo": {
      "post": {
        "summary": "Undo last service request action",
        "description": "This endpoint can undo either a declination or an acceptance. Only the requested person can issue this undo and the undo action is only possible within a specific time frame.",
        "operationId": "undoServiceRequestById",
        "tags": [
          "Person",
          "Service & Service Groups"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "ID of a service request",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The updated service request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "personId": {
                          "deprecated": true,
                          "type": "integer"
                        },
                        "person": {
                          "title": "Person",
                          "type": "object",
                          "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                          "x-tags": [
                            "Person"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "securityLevelForPerson": {
                              "type": "integer",
                              "description": "Security level of the current user. The user sees fields upto this level."
                            },
                            "editSecurityLevelForPerson": {
                              "type": "integer",
                              "description": "Eidt security level of the current user. The user can edit fields upto this level."
                            },
                            "title": {
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "type": "string",
                              "nullable": true
                            },
                            "lastName": {
                              "type": "string",
                              "nullable": true
                            },
                            "nickname": {
                              "type": "string",
                              "nullable": true
                            },
                            "job": {
                              "type": "string",
                              "nullable": true
                            },
                            "street": {
                              "type": "string",
                              "nullable": true
                            },
                            "addressAddition": {
                              "type": "string",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "nullable": true
                            },
                            "country": {
                              "type": "string",
                              "nullable": true
                            },
                            "latitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "latitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "phonePrivate": {
                              "type": "string",
                              "nullable": true
                            },
                            "phoneWork": {
                              "type": "string",
                              "nullable": true
                            },
                            "mobile": {
                              "type": "string",
                              "nullable": true
                            },
                            "fax": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthName": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "birthplace": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "familyImageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "sexId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "cmsUserId": {
                              "type": "string",
                              "nullable": true
                            },
                            "optigemId": {
                              "type": "string",
                              "description": "String with Optigem ID or empty string if no ID is set."
                            },
                            "privacyPolicyAgreement": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                },
                                "typeId": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "whoId": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "nationalityId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "familyStatusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "weddingDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "campusId": {
                              "type": "integer"
                            },
                            "statusId": {
                              "type": "integer"
                            },
                            "departmentIds": {
                              "type": "array",
                              "description": "List of department IDs",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "firstContact": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBelonging": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "dateOfEntry": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfResign": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBaptism": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "placeOfBaptism": {
                              "type": "string",
                              "nullable": true
                            },
                            "baptisedBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredTo": {
                              "type": "string",
                              "nullable": true
                            },
                            "growPathId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "isArchived": {
                              "type": "boolean"
                            },
                            "meta": {
                              "title": "Entity Meta Data",
                              "type": "object",
                              "description": "Created and Modified Date of an Entity",
                              "properties": {
                                "createdPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Created the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "createdDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Creation"
                                },
                                "modifiedPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Modified the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "modifiedDate": {
                                  "type": "string",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Last Modification"
                                }
                              }
                            }
                          },
                          "example": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          }
                        },
                        "name": {
                          "type": "string"
                        },
                        "serviceId": {
                          "type": "integer"
                        },
                        "agreed": {
                          "type": "boolean"
                        },
                        "isValid": {
                          "type": "boolean"
                        },
                        "requestedDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "requesterPersonId": {
                          "deprecated": true,
                          "type": "integer"
                        },
                        "requesterPerson": {
                          "title": "Person",
                          "type": "object",
                          "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                          "x-tags": [
                            "Person"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "securityLevelForPerson": {
                              "type": "integer",
                              "description": "Security level of the current user. The user sees fields upto this level."
                            },
                            "editSecurityLevelForPerson": {
                              "type": "integer",
                              "description": "Eidt security level of the current user. The user can edit fields upto this level."
                            },
                            "title": {
                              "type": "string",
                              "nullable": true
                            },
                            "firstName": {
                              "type": "string",
                              "nullable": true
                            },
                            "lastName": {
                              "type": "string",
                              "nullable": true
                            },
                            "nickname": {
                              "type": "string",
                              "nullable": true
                            },
                            "job": {
                              "type": "string",
                              "nullable": true
                            },
                            "street": {
                              "type": "string",
                              "nullable": true
                            },
                            "addressAddition": {
                              "type": "string",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "nullable": true
                            },
                            "country": {
                              "type": "string",
                              "nullable": true
                            },
                            "latitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitude": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "latitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "longitudeLoose": {
                              "type": "number",
                              "format": "float",
                              "nullable": true
                            },
                            "phonePrivate": {
                              "type": "string",
                              "nullable": true
                            },
                            "phoneWork": {
                              "type": "string",
                              "nullable": true
                            },
                            "mobile": {
                              "type": "string",
                              "nullable": true
                            },
                            "fax": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthName": {
                              "type": "string",
                              "nullable": true
                            },
                            "birthday": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "birthplace": {
                              "type": "string",
                              "nullable": true
                            },
                            "imageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "familyImageUrl": {
                              "type": "string",
                              "nullable": true
                            },
                            "sexId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "email": {
                              "type": "string",
                              "nullable": true
                            },
                            "cmsUserId": {
                              "type": "string",
                              "nullable": true
                            },
                            "optigemId": {
                              "type": "string",
                              "description": "String with Optigem ID or empty string if no ID is set."
                            },
                            "privacyPolicyAgreement": {
                              "type": "object",
                              "properties": {
                                "date": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                },
                                "typeId": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "whoId": {
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "nationalityId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "familyStatusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "weddingDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "campusId": {
                              "type": "integer"
                            },
                            "statusId": {
                              "type": "integer"
                            },
                            "departmentIds": {
                              "type": "array",
                              "description": "List of department IDs",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "firstContact": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBelonging": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "dateOfEntry": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfResign": {
                              "type": "string",
                              "format": "date-time",
                              "nullable": true
                            },
                            "dateOfBaptism": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "placeOfBaptism": {
                              "type": "string",
                              "nullable": true
                            },
                            "baptisedBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredBy": {
                              "type": "string",
                              "nullable": true
                            },
                            "referredTo": {
                              "type": "string",
                              "nullable": true
                            },
                            "growPathId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "isArchived": {
                              "type": "boolean"
                            },
                            "meta": {
                              "title": "Entity Meta Data",
                              "type": "object",
                              "description": "Created and Modified Date of an Entity",
                              "properties": {
                                "createdPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Created the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "createdDate": {
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Creation"
                                },
                                "modifiedPerson": {
                                  "type": "object",
                                  "example": 1,
                                  "description": "Person Id Who Modified the Entity",
                                  "properties": {
                                    "id": {
                                      "type": "number"
                                    }
                                  }
                                },
                                "modifiedDate": {
                                  "type": "string",
                                  "example": "2019-05-25T11:00:00Z",
                                  "description": "Date of Last Modification"
                                }
                              }
                            }
                          },
                          "example": {
                            "id": 1,
                            "firstName": "Alfred",
                            "lastName": "API Tester",
                            "sexId": 1,
                            "nationalityId": 3,
                            "campusId": 0,
                            "statusId": 5
                          }
                        },
                        "comment": {
                          "type": "string"
                        },
                        "counter": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "id": 2,
                        "personId": 1,
                        "person": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        },
                        "name": "Alfred Tester",
                        "serviceId": 2,
                        "agreed": false,
                        "isValid": true,
                        "requestedDate": "1970-01-01T12:00:00Z",
                        "requesterPersonId": 1,
                        "requesterPerson": {
                          "id": 1,
                          "firstName": "Alfred",
                          "lastName": "API Tester",
                          "sexId": 1,
                          "nationalityId": 3,
                          "campusId": 0,
                          "statusId": 5
                        },
                        "comment": "",
                        "counter": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/persons/{id}/groups": {
      "get": {
        "summary": "Get all groups a member is in",
        "description": "This endpoint returns an array with all groups the user is in.",
        "operationId": "getAllGroupsForPerson",
        "tags": [
          "Group",
          "Person"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "show_overdue_groups",
            "in": "query",
            "description": "Determines if groups with overdue enddate should still be shown. To the enddate x dates are added specified by the admin settings for person & groups",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_inactive_groups",
            "in": "query",
            "description": "Determines if inactive groups should be returned",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The groups of the person",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "group": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "group"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "note": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "Smallgroup Smith",
                              "domainType": "group",
                              "domainIdentifier": "42",
                              "apiUrl": "http://churchtools.test/api/groups/42",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "note": "This group is aweasome"
                                }
                              ]
                            }
                          },
                          "groupTypeRoleId": {
                            "type": "integer"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "memberStartDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "memberEndDate": {
                            "type": "string",
                            "format": "date"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/groups/{id}": {
      "get": {
        "summary": "Get a group",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID or chat GUID of group",
            "required": true,
            "schema": {
              "type": "string",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "The group model structures all information in different objects: `information`, `settings`, `followUp`, and `roles`. Custom group fields are added to the root level of this model.",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 42
                        },
                        "guid": {
                          "type": "string",
                          "example": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727"
                        },
                        "name": {
                          "type": "string",
                          "example": "Smallgroup West"
                        },
                        "securityLevelForGroup": {
                          "type": "integer",
                          "description": "You can see group fields up to this security level.",
                          "example": 3
                        },
                        "information": {
                          "type": "object",
                          "properties": {
                            "imageUrl": {
                              "default": null,
                              "nullable": true,
                              "type": "string"
                            },
                            "dateOfFoundation": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "meetingTime": {
                              "type": "string",
                              "nullable": true
                            },
                            "weekday": {
                              "type": "integer",
                              "nullable": true,
                              "description": "The number of the weekday. Starting with 0 = Sunday, 1 = Monday, ..."
                            },
                            "groupCategoryId": {
                              "nullable": true,
                              "type": "integer"
                            },
                            "ageGroups": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "example": [
                                1,
                                2
                              ]
                            },
                            "targetGroupId": {
                              "nullable": true,
                              "type": "integer"
                            },
                            "maxMembers": {
                              "type": "integer",
                              "nullable": true
                            },
                            "groupTypeId": {
                              "type": "integer"
                            },
                            "groupStatusId": {
                              "type": "integer"
                            },
                            "note": {
                              "type": "string"
                            },
                            "campusId": {
                              "nullable": true,
                              "type": "integer"
                            },
                            "chatStatus": {
                              "description": "status of group chat",
                              "type": "string",
                              "example": "STARTED"
                            }
                          }
                        },
                        "settings": {
                          "type": "object",
                          "properties": {
                            "isHidden": {
                              "type": "boolean"
                            },
                            "isOpenForMembers": {
                              "description": "Indicator if people can apply for participation.",
                              "type": "boolean"
                            },
                            "autoAccept": {
                              "description": "Indicator if applications are accepted automatically.",
                              "type": "boolean"
                            },
                            "isPublic": {
                              "type": "boolean"
                            },
                            "inStatistic": {
                              "description": "Show in statistics.",
                              "type": "boolean"
                            },
                            "groupMeeting": {
                              "type": "object",
                              "properties": {
                                "autoCreate": {
                                  "description": "Create weekly group meetings.",
                                  "type": "boolean"
                                },
                                "templateId": {
                                  "description": "Group template used for meetings.",
                                  "type": "integer",
                                  "nullable": true
                                }
                              }
                            },
                            "informLeader": {
                              "description": "Inform leader via e-mail about changes.",
                              "type": "boolean"
                            },
                            "newMember": {
                              "description": "Campus, Status, Department for newly created persons.",
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "campusId": {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                "statusId": {
                                  "nullable": true,
                                  "type": "integer"
                                },
                                "departmentId": {
                                  "nullable": true,
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        },
                        "followUp": {
                          "type": "object",
                          "properties": {
                            "typeId": {
                              "type": "integer",
                              "example": 1
                            },
                            "targetTypeId": {
                              "type": "integer",
                              "example": 0
                            },
                            "targetObjectId": {
                              "type": "integer",
                              "nullable": true,
                              "example": null
                            },
                            "targetGroupMemberStatusId": {
                              "type": "integer",
                              "nullable": true,
                              "example": null
                            },
                            "sendReminderMails": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of this group role."
                              },
                              "groupTypeRoleId": {
                                "type": "integer",
                                "description": "ID of the corresponding group type role."
                              },
                              "groupTypeId": {
                                "type": "integer",
                                "description": "ID of corresponding group type."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of role."
                              },
                              "shorty": {
                                "type": "string",
                                "description": "Abbreviation of the name."
                              },
                              "sortKey": {
                                "type": "integer",
                                "description": "Number used for sorting roles."
                              },
                              "toDelete": {
                                "type": "boolean",
                                "description": "Flag, if members of this role can be deleted or removed from the group."
                              },
                              "hasRequested": {
                                "type": "boolean",
                                "description": "Flag, if group member is requesting group access."
                              },
                              "isLeader": {
                                "type": "boolean",
                                "description": "Flag, this role is a leader."
                              },
                              "isDefault": {
                                "type": "boolean",
                                "description": "Indicator of default roles."
                              },
                              "isHidden": {
                                "type": "boolean",
                                "description": "Flag, if this role is hidden in groups."
                              },
                              "growPathId": {
                                "type": "integer",
                                "nullable": true,
                                "description": "ID of the grow path. The id is either given from the group type role. But a group can override the grow path. In this case the group role specific ID is used."
                              },
                              "forceTwoFactorAuth": {
                                "type": "boolean",
                                "description": "Flag, if members with this role have to use two factor authentication."
                              },
                              "isActive": {
                                "type": "boolean",
                                "description": "Flag, if this role is active in this group."
                              }
                            },
                            "example": [
                              {
                                "id": 5,
                                "groupTypeRoleId": 3,
                                "groupTypeId": 2,
                                "name": "Member",
                                "shorty": "M",
                                "sortKey": 4,
                                "toDelete": false,
                                "hasRequested": false,
                                "isLeader": false,
                                "isDefault": true,
                                "isHidden": false,
                                "growPathId": null,
                                "forceTwoFactorAuth": false,
                                "isActive": true
                              },
                              {
                                "id": 6,
                                "groupTypeRoleId": 4,
                                "groupTypeId": 2,
                                "name": "Leader",
                                "shorty": "L",
                                "sortKey": 2,
                                "toDelete": false,
                                "hasRequested": false,
                                "isLeader": true,
                                "isDefault": false,
                                "isHidden": false,
                                "growPathId": 2,
                                "forceTwoFactorAuth": true,
                                "isActive": true
                              }
                            ]
                          },
                          "example": [
                            {
                              "id": 5,
                              "groupTypeRoleId": 3,
                              "groupTypeId": 2,
                              "name": "Member",
                              "shorty": "M",
                              "sortKey": 4,
                              "toDelete": false,
                              "hasRequested": false,
                              "isLeader": false,
                              "isDefault": true,
                              "isHidden": false,
                              "growPathId": null,
                              "forceTwoFactorAuth": false,
                              "isActive": true
                            },
                            {
                              "id": 6,
                              "groupTypeRoleId": 4,
                              "groupTypeId": 2,
                              "name": "Leader",
                              "shorty": "L",
                              "sortKey": 2,
                              "toDelete": false,
                              "hasRequested": false,
                              "isLeader": true,
                              "isDefault": false,
                              "isHidden": false,
                              "growPathId": 2,
                              "forceTwoFactorAuth": true,
                              "isActive": true
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see group"
          },
          "404": {
            "description": "Group not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/groups/{id}/chat": {
      "post": {
        "summary": "Start or stop an event chat",
        "operationId": "startStopChat",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "triggerChatInviteMail": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Successful request"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/groups/{id}/members": {
      "get": {
        "summary": "Get all group members",
        "description": "This endpoint returns an array with all group members of one group. The members can be filtered by the group member fields as query params.",
        "operationId": "getAllGroupMembers",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show page in pagenation. If empty, start at first page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 10
            }
          },
          {
            "name": "role_ids",
            "in": "query",
            "description": "roles to filter the members",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "allowed_chat_users_only",
            "in": "query",
            "description": "If true, return only group members, that are allowed to chat in this group",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The group members",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "personId": {
                            "type": "integer"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "groupTypeRoleId": {
                            "type": "integer"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "memberStartDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "memberEndDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "waitinglistPos": {
                            "type": "integer",
                            "nullable": true
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "integer",
                          "example": 10
                        },
                        "count": {
                          "type": "integer",
                          "example": 1
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "description": "Total number of results.",
                              "example": 21
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current page.",
                              "example": 1
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Number of results per page.",
                              "example": 10
                            },
                            "lastPage": {
                              "type": "integer",
                              "description": "Number of last page.",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see group members"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/groups/{id}/members/{personId}": {
      "put": {
        "summary": "Create/Update a group member",
        "description": "Add or update a group member.",
        "operationId": "createOrUpdateMember",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "requestBody": {
          "description": "All fields are optional. If not set, default values are used. groupTypeRoleId defaults to the standard role of the group's grouptype, comment and member start/end dates default to null. Additional custom group fields are not yet supported through this API.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "groupTypeRoleId": {
                    "type": "integer"
                  },
                  "comment": {
                    "type": "string"
                  },
                  "memberStartDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "memberEndDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "fields": {
                    "type": "object",
                    "description": "Group member fields as key value pairs, where the key is the ID of the field to be set.",
                    "example": {
                      "12": true,
                      "14": "Text",
                      "17": null
                    }
                  },
                  "waitinglistPos": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created/updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "personId": {
                          "type": "integer"
                        },
                        "person": {
                          "type": "object",
                          "properties": {
                            "titel": {
                              "type": "string"
                            },
                            "domainType": {
                              "type": "string",
                              "enum": [
                                "person"
                              ]
                            },
                            "domainIdentifier": {
                              "type": "string"
                            },
                            "apiUrl": {
                              "type": "string"
                            },
                            "frontendUrl": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string"
                                },
                                "lastName": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "example": {
                            "title": "John Smith",
                            "domainType": "person",
                            "domainIdentifier": "116",
                            "apiUrl": "http://churchtools.test/api/persons/116",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "firstName": "John",
                                "lastName": "Smith"
                              }
                            ]
                          }
                        },
                        "groupTypeRoleId": {
                          "type": "integer"
                        },
                        "comment": {
                          "type": "string"
                        },
                        "memberStartDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "memberEndDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "waitinglistPos": {
                          "type": "integer",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a group member",
        "description": "Removes a group member from the group.",
        "operationId": "deleteMember",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/groups/{id}/optins": {
      "get": {
        "summary": "Get Opt In status of group members",
        "operationId": "optIns",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "newsletter": {
                          "type": "object"
                        },
                        "persons": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/groups/{id}/meetings": {
      "get": {
        "summary": "Get all group meetings for a specific group",
        "operationId": "getAllMeetings",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "x-tags": [
                          "Group"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "dateFrom": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start of the group meeting in UTC / Zulu format"
                          },
                          "dateTo": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End of the group meeting in UTC / Zulu format"
                          },
                          "isCompleted": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      },
      "post": {
        "summary": "Create a group meeting",
        "operationId": "createMeeting",
        "tags": [
          "Group"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dateFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start of the group meeting in UTC / Zulu format"
                  },
                  "dateTo": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End of the group meeting in UTC / Zulu format"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-tags": [
                        "Group"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "dateFrom": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start of the group meeting in UTC / Zulu format"
                        },
                        "dateTo": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End of the group meeting in UTC / Zulu format"
                        },
                        "isCompleted": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/groups/{groupId}/qrcodecheckin/{personId}/pdf": {
      "get": {
        "summary": "Get link to QR-Code for CheckIn PDF",
        "description": "Get link to QR-Code for CheckIn PDF",
        "operationId": "getQRCodeCheckin",
        "tags": [
          "Group",
          "Checkin"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "download URL for the created QR code PDF"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/groups/{groupId}/checkin/{personId}": {
      "post": {
        "summary": "Checkin a person to a group",
        "operationId": "checkin",
        "tags": [
          "Group",
          "Checkin"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "ID of group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 42
            }
          },
          {
            "name": "personId",
            "in": "path",
            "description": "ID of person",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 7
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time",
                    "description": "date and time of the group meeting in UTC / Zulu format"
                  },
                  "token": {
                    "type": "string",
                    "description": "optional token of a ticket that is to be validated"
                  },
                  "printerId": {
                    "type": "integer",
                    "description": "optional printer ID, if a name tag should be printed out"
                  }
                },
                "example": {
                  "date": "2020-11-10T09:00:00Z",
                  "token": "d8FxPm25kC",
                  "printerId": 2
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully checked in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "x-tags": [
                        "Group"
                      ],
                      "properties": {
                        "person": {
                          "title": "Person DomainObject",
                          "type": "object",
                          "x-tags": [
                            "Person"
                          ],
                          "description": "Person as Domain Object",
                          "properties": {
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "description": "",
                                  "example": "Vanessa"
                                },
                                "lastName": {
                                  "type": "string",
                                  "example": "Fischer",
                                  "description": ""
                                },
                                "guid": {
                                  "type": "string",
                                  "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                  "description": "Globally Unique Identifier"
                                }
                              }
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "Image Url",
                              "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                            },
                            "frontendUrl": {
                              "type": "string",
                              "description": "Frontend link",
                              "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                            },
                            "apiUrl": {
                              "type": "string",
                              "description": "API Endpoint to calendar",
                              "example": "http://churchtools.test/api/persons/19"
                            },
                            "domainType": {
                              "type": "string",
                              "description": "ChurchTools domain type",
                              "example": "person"
                            },
                            "title": {
                              "type": "string",
                              "description": "Fullname of Person",
                              "example": "Vanessa Fischer"
                            },
                            "domainIdentifier": {
                              "type": "string",
                              "example": "19",
                              "description": "Person ID"
                            }
                          }
                        },
                        "group": {
                          "title": "GroupDomainObject",
                          "type": "object",
                          "properties": {
                            "imageUrl": {
                              "type": "string",
                              "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                            },
                            "frontendUrl": {
                              "type": "string",
                              "example": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%236/"
                            },
                            "apiUrl": {
                              "type": "string",
                              "example": "http://churchtools.test/api/groups/6"
                            },
                            "domainType": {
                              "type": "string",
                              "enum": [
                                "group"
                              ]
                            },
                            "title": {
                              "type": "string",
                              "example": "Technik"
                            },
                            "domainIdentifier": {
                              "type": "string",
                              "example": "6"
                            },
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "note": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "required": [
                            "frontendUrl",
                            "apiUrl",
                            "title"
                          ]
                        },
                        "groupMeeting": {
                          "type": "object",
                          "x-tags": [
                            "Group"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "dateFrom": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start of the group meeting in UTC / Zulu format"
                            },
                            "dateTo": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End of the group meeting in UTC / Zulu format"
                            },
                            "isCompleted": {
                              "type": "boolean"
                            }
                          }
                        },
                        "totalCheckedIn": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/grouphomepages/{hash}": {
      "get": {
        "security": [],
        "summary": "Get information about public groups with settings",
        "operationId": "getGroupHomepage",
        "tags": [
          "Group",
          "GroupHomepage"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "Random hash for public groups",
            "required": true,
            "schema": {
              "type": "string",
              "example": "RNdjTK0tGp1N1afoblczGbFb8ikLfa9b"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Public group with settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "Group Homepage ID"
                    },
                    "parentGroup": {
                      "type": "number",
                      "description": "ID of the parent group of all groups that should be displayed in the group homepage"
                    },
                    "isEnabled": {
                      "type": "boolean",
                      "description": "Wheather the group homepage is enabled. Clients should not display the group homepage if it is not enabled."
                    },
                    "showLeader": {
                      "type": "boolean",
                      "description": "If true, the group homepage is set to display the leaders of each group."
                    },
                    "showGroupImages": {
                      "type": "boolean",
                      "description": "If true, the group homepage is set to display group images."
                    },
                    "showMap": {
                      "type": "boolean",
                      "description": "If true, the group homepage is set to display an overview map of all groups."
                    },
                    "showFilter": {
                      "type": "boolean",
                      "description": "If true, selected filters are displayed."
                    },
                    "defaultView": {
                      "type": "string",
                      "description": "Type how groups are listed on the page."
                    },
                    "sortBy": {
                      "type": "string",
                      "enum": [
                        "name",
                        "dateOfFoundation"
                      ],
                      "description": "Group field to sort list of groups by."
                    },
                    "orderDirection": {
                      "type": "string",
                      "enum": [
                        "ASC",
                        "DESC"
                      ],
                      "description": "Direction if groups are sorted ascending or descending."
                    },
                    "randomUrl": {
                      "type": "string",
                      "description": "The group homepage identifier (same as provided as hash request parameter)."
                    },
                    "filter": {
                      "type": "array",
                      "description": "Specifies all filters that can be applied for this group homepage.",
                      "items": {
                        "type": "object"
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Entity meta data"
                    },
                    "groups": {
                      "type": "array",
                      "description": "Array of groups to be displayed on the group homepage.",
                      "items": {
                        "title": "PublicGroup",
                        "type": "object",
                        "x-tags": [
                          "Group"
                        ],
                        "description": "Information about a public group, e.g. to be displayed on a group homepage.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "The public group ID."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the group, e.g. to be displayed as title."
                          },
                          "information": {
                            "type": "object",
                            "description": "General information about the group.",
                            "properties": {
                              "meetingTime": {
                                "type": "string",
                                "description": "Free text field when group meetings take place."
                              },
                              "weekday": {
                                "type": "object",
                                "description": "Week day when group meetings take place."
                              },
                              "groupCategory": {
                                "type": "object",
                                "description": "Group category set for the group."
                              },
                              "ageGroups": {
                                "type": "array",
                                "description": "List of target age groups for this group.",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "targetGroup": {
                                "type": "object",
                                "description": "Target group for this group."
                              },
                              "note": {
                                "type": "string",
                                "description": "The group description."
                              },
                              "campus": {
                                "type": "object",
                                "description": "The campus this group is assigned to."
                              },
                              "imageUrl": {
                                "type": "string",
                                "description": "URL to a group image if provided."
                              },
                              "leader": {
                                "type": "array",
                                "description": "List of person objects of all group leaders if the group is set to display leaders.",
                                "items": {
                                  "type": "object"
                                }
                              },
                              "groupPlaces": {
                                "type": "array",
                                "description": "List of the group's meeting places. Only returned if the group homepage is set to display a map.",
                                "items": {
                                  "type": "object"
                                }
                              }
                            }
                          },
                          "children": {
                            "type": "array",
                            "description": "Lists all (direct) child group IDs for the current group."
                          },
                          "autoAccept": {
                            "type": "boolean",
                            "description": "If true, group sign up requests will be accepted automatically."
                          },
                          "allowWaitinglist": {
                            "type": "boolean",
                            "description": "If true, group sign is allowed even if group is full."
                          },
                          "maxMemberCount": {
                            "type": "number",
                            "description": "Maximum number of members until the group is considered as full."
                          },
                          "currentMemberCount": {
                            "type": "number",
                            "description": "Current number of members in the group."
                          },
                          "requestedPlacesCount": {
                            "type": "number",
                            "description": "Number of member requests"
                          },
                          "requestedWaitinglistPlacesCount": {
                            "type": "number",
                            "description": "Number of member requests with waiting list position"
                          },
                          "canSignUp": {
                            "type": "boolean",
                            "description": "Indicates if the current user (either logged in or not) can sign up. This summarizes the information in signUpConditions."
                          },
                          "signUpConditions": {
                            "type": "object",
                            "required": [
                              "groupIsNotHidden",
                              "groupIsActive",
                              "groupIsOpenForMembers",
                              "groupIsNotFull",
                              "groupHasLeader",
                              "endDateNotPassed",
                              "rolesSetInGroup",
                              "groupIsPublic",
                              "canContactLeader",
                              "newPersonStationIsSet",
                              "newPersonStatusIsSet",
                              "newPersonDepartmentIsSet"
                            ],
                            "description": "Specifies conditions required to sign up in this group. Not all conditions apply to any user, e.g. some of the conditions only apply to users that are not logged in.",
                            "properties": {
                              "groupIsNotHidden": {
                                "type": "boolean",
                                "description": "If false, the group is set to hidden and nobody can sign up."
                              },
                              "groupIsActive": {
                                "type": "boolean",
                                "description": "If false, the group is not in active state and nobody can sign up."
                              },
                              "groupIsOpenForMembers": {
                                "type": "boolean",
                                "description": "If false, the group is not set to be open for members and nobody can sign up."
                              },
                              "groupIsNotFull": {
                                "type": "boolean",
                                "description": "If false, the group's max number of members is reached and nobody can sign up."
                              },
                              "groupHasLeader": {
                                "type": "boolean",
                                "description": "If false, no leader is set for the group and nobody can sign up."
                              },
                              "endDateNotPassed": {
                                "type": "boolean",
                                "description": "If false, the group's end date has passed and nobody can sign up."
                              },
                              "rolesSetInGroup": {
                                "type": "boolean",
                                "description": "If false, the standard role and requester role are not set for the group and nobody can sign up."
                              },
                              "groupIsPublic": {
                                "type": "boolean",
                                "description": "If false, the group is not public and only users already signed in are allowed to sign up."
                              },
                              "canContactLeader": {
                                "type": "boolean",
                                "description": "If false, none of the group's leaders have an email address set. Only persons already signed in can sign up."
                              },
                              "newPersonStationIsSet": {
                                "type": "boolean",
                                "description": "If false, the default station for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                              },
                              "newPersonStatusIsSet": {
                                "type": "boolean",
                                "description": "If false, the default status for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                              },
                              "newPersonDepartmentIsSet": {
                                "type": "boolean",
                                "description": "If false, the default department for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                              }
                            }
                          },
                          "signUpPersons": {
                            "type": "array",
                            "description": "Lists all persons the current user is allowed to sign up for. This includes spouses, children below the age of 16 and all persons with the same email address.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "Person Domain Object"
                                },
                                "status": {
                                  "description": "Specifies whether this person is already in the group (IN_GROUP), in pending state for the group (REQUESTED), or selected by the user to be added into the group (CLICKED). Otherwise NOT_CLICKED.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "signUpHeadline": {
                            "type": "string",
                            "description": "Text which can be displayed as a headline for the sign up section"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "information",
                          "autoAccept",
                          "allowWaitinglist",
                          "maxMemberCount",
                          "currentMemberCount",
                          "requestedPlacesCount",
                          "requestedWaitinglistPlacesCount",
                          "canSignUp",
                          "signUpConditions"
                        ],
                        "x-examples": {}
                      }
                    }
                  },
                  "required": [
                    "id",
                    "parentGroup",
                    "isEnabled",
                    "showLeader",
                    "showGroupImages",
                    "showMap",
                    "randomUrl",
                    "meta",
                    "groups"
                  ]
                },
                "examples": {}
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Get all information necessary to display public groups. The response will provide setting information and all public groups with information for the page."
      }
    },
    "/servicegroups": {
      "get": {
        "summary": "Get all service groups",
        "description": "This endpoint returns an array with all service groups.",
        "operationId": "getAllServiceGroups",
        "tags": [
          "Service & Service Groups"
        ],
        "responses": {
          "200": {
            "description": "The service groups",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sortKey": {
                            "type": "integer"
                          },
                          "viewAll": {
                            "type": "boolean"
                          },
                          "campusId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "onlyVisibleInCampusFilter": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": 2,
                          "name": "Program",
                          "sortKey": 20,
                          "viewAll": true,
                          "campusId": 1,
                          "onlyVisibleInCampusFilter": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see service groups"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/services": {
      "get": {
        "summary": "Get all services",
        "description": "This endpoint returns an array with all services.",
        "operationId": "getAllServices",
        "tags": [
          "Service & Service Groups"
        ],
        "responses": {
          "200": {
            "description": "The service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "serviceGroupId": {
                            "type": "integer"
                          },
                          "commentOnConfirmation": {
                            "type": "boolean"
                          },
                          "sortKey": {
                            "type": "integer"
                          },
                          "allowDecline": {
                            "type": "boolean"
                          },
                          "allowExchange": {
                            "type": "boolean"
                          },
                          "comment": {
                            "type": "string"
                          },
                          "standard": {
                            "type": "boolean"
                          },
                          "hidePersonName": {
                            "type": "boolean"
                          },
                          "sendReminderMails": {
                            "type": "boolean"
                          },
                          "sendServiceRequestEmails": {
                            "type": "boolean"
                          },
                          "allowControlLiveAgenda": {
                            "type": "boolean"
                          },
                          "groupIds": {
                            "type": "string",
                            "nullable": true,
                            "description": "Comma separated list of group ids"
                          },
                          "tagIds": {
                            "type": "string",
                            "nullable": true,
                            "description": "Comma separated list of tag ids"
                          },
                          "calTextTemplate": {
                            "type": "string"
                          },
                          "allowChat": {
                            "type": "boolean"
                          }
                        },
                        "example": {
                          "id": 2,
                          "name": "Preaching",
                          "serviceGroupId": 1,
                          "commentOnConfirmation": false,
                          "sortKey": 20,
                          "allowDecline": true,
                          "allowExchange": true,
                          "comment": "",
                          "standard": true,
                          "hidePersonName": false,
                          "sendReminderMails": true,
                          "sendServiceRequestEmails": true,
                          "allowControlLiveAgenda": false,
                          "groupIds": "6",
                          "tagIds": "8,10",
                          "calTextTemplate": "",
                          "allowChat": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see services"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/tags": {
      "get": {
        "summary": "Get all tags of a type",
        "description": "Returns all tags of type persons or songs",
        "operationId": "getTags",
        "tags": [
          "Tag"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Type of tags",
            "required": true,
            "schema": {
              "type": "string",
              "example": "persons"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array with all tags of a type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "count": {
                        "type": "integer"
                      }
                    },
                    "example": {
                      "id": 1,
                      "name": "Super Tag",
                      "count": 2
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "post": {
        "summary": "Create new tag",
        "operationId": "saveTag",
        "tags": [
          "Tag"
        ],
        "requestBody": {
          "description": "Tax rate data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "Neuer TAG",
                  "type": "persons"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return new tag with ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "count": {
                          "type": "integer"
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Super Tag",
                        "count": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/departments": {
      "get": {
        "summary": "Get all departments",
        "description": "Returns an array of all departments defined in ChurchTools. Departments are sorted by its `sortKey` by default.",
        "operationId": "getAllDepartments",
        "tags": [
          "Department"
        ],
        "responses": {
          "200": {
            "description": "All departments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of department"
                          },
                          "name": {
                            "type": "string",
                            "description": "Department name"
                          },
                          "shorty": {
                            "type": "string",
                            "description": "Abbreviation"
                          },
                          "sortKey": {
                            "type": "integer",
                            "description": "Used to sort all departments"
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Gemeindeliste",
                          "shorty": "G",
                          "sortKey": 10
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see departments"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/files/{id}": {
      "delete": {
        "summary": "Delete file by id",
        "operationId": "deleteFileById",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of file",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/files/{domainType}/{domainIdentifier}": {
      "post": {
        "summary": "Upload files",
        "operationId": "uploadFiles",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "domainType",
            "in": "path",
            "description": "The domain type. Currently supported are 'avatar', 'groupimage', 'logo', 'attatchments', 'html_template', 'service', 'song_arrangement', 'importtable', 'person', 'familyavatar', 'wiki_.?'.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "logo"
            }
          },
          {
            "name": "domainIdentifier",
            "in": "path",
            "description": "the domain identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": 35
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return new files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "filename": {
                            "type": "string"
                          },
                          "fileUrl": {
                            "type": "string"
                          },
                          "imageUrl": {
                            "type": "string"
                          },
                          "relativeUrl": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "showOnlyWhenEditable": {
                            "type": "boolean"
                          },
                          "securityLevelId": {
                            "type": "integer"
                          },
                          "size": {
                            "type": "integer",
                            "description": "The file size in byte"
                          },
                          "domainType": {
                            "type": "string"
                          },
                          "domainId": {
                            "type": "string"
                          }
                        },
                        "example": {
                          "id": 12,
                          "name": "Bild.png",
                          "filename": 34567890987654566000,
                          "fileUrl": "https://tets.church.tools?q=file&id=12",
                          "imageUrl": "http://churchtools.test/images/137/2d038328db90850b31f541ace2c6f13f0fbd65224728a8c99061156814cb40d7",
                          "relativeUrl": "?q=file&id=12",
                          "size": 45678,
                          "domainType": "avatar",
                          "domainId": 56,
                          "type": "file"
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete files that are matching the domainType and domainIdentifier",
        "operationId": "deleteFiles",
        "tags": [
          "File"
        ],
        "parameters": [
          {
            "name": "domainType",
            "in": "path",
            "description": "The domain type. Currently supported are 'avatar', 'groupimage', 'logo', 'attatchments', 'html_template', 'service', 'song_arrangement', 'importtable', 'person', 'familyavatar', 'wiki_.?'.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "logo"
            }
          },
          {
            "name": "domainIdentifier",
            "in": "path",
            "description": "the domain identifier",
            "required": true,
            "schema": {
              "type": "string",
              "example": 35
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/logs": {
      "get": {
        "summary": "Get all log messages",
        "description": "The response is a collection of all log messages you may see and is limited to a specific number of messages. You can use the `page` parameter to browse the list of log messages. The logs are ordered by date.",
        "operationId": "getAllLogs",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "message",
            "in": "query",
            "description": "Filter by text",
            "schema": {
              "type": "string",
              "example": "Person updated"
            }
          },
          {
            "name": "levels",
            "in": "query",
            "description": "Filter by log level",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "before",
            "in": "query",
            "description": "Filter log messages before that date. (Use ISO-Format)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2019-04-16T10:57:09Z"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "Filter log messages after that date. (Use ISO-Format)",
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2019-04-16T10:57:09Z"
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "description": "Filter by person",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show page in pagenation. If empty, start at first page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Log",
                        "type": "object",
                        "x-tags": [
                          "Admin"
                        ],
                        "description": "ChurchTools writes log messages for many events and changes. This can be an update for a person or the deletion of an event. You can use the log to debug your system and follow error messages. This is a versitile tool.",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "level": {
                            "type": "integer",
                            "description": "The log level indicates the importance. 1 = Warning, 2 = Notice, 3 = Info.",
                            "example": 1
                          },
                          "date": {
                            "type": "string",
                            "description": "Timestamp of log",
                            "format": "date-time",
                            "example": "2020-05-01T20:07:36Z"
                          },
                          "personId": {
                            "type": "integer",
                            "description": "If the person ID is `-1`, that means, no person but the system itself has logged that message.",
                            "example": 2
                          },
                          "simultePersonId": {
                            "type": "integer",
                            "description": "If a person is simulated by an administrator, we log the personId as well. This makes it possible to see if a person did the action or an admin, who simulated that person.",
                            "example": 5,
                            "nullable": true
                          },
                          "domainType": {
                            "type": "string",
                            "description": "The domain type tells us, where in ChurchTools the action was performed.",
                            "example": "mail"
                          },
                          "domainId": {
                            "type": "integer",
                            "description": "Analog to the domain type, the ID is the explicit resource.",
                            "example": 1
                          },
                          "message": {
                            "type": "string",
                            "example": "Help page called: 0:main (1)"
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/logs/{id}": {
      "get": {
        "summary": "Get a log message",
        "description": "Fetch one specific log message by its ID.",
        "operationId": "getLogById",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of log",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The log",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Log",
                      "type": "object",
                      "x-tags": [
                        "Admin"
                      ],
                      "description": "ChurchTools writes log messages for many events and changes. This can be an update for a person or the deletion of an event. You can use the log to debug your system and follow error messages. This is a versitile tool.",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "level": {
                          "type": "integer",
                          "description": "The log level indicates the importance. 1 = Warning, 2 = Notice, 3 = Info.",
                          "example": 1
                        },
                        "date": {
                          "type": "string",
                          "description": "Timestamp of log",
                          "format": "date-time",
                          "example": "2020-05-01T20:07:36Z"
                        },
                        "personId": {
                          "type": "integer",
                          "description": "If the person ID is `-1`, that means, no person but the system itself has logged that message.",
                          "example": 2
                        },
                        "simultePersonId": {
                          "type": "integer",
                          "description": "If a person is simulated by an administrator, we log the personId as well. This makes it possible to see if a person did the action or an admin, who simulated that person.",
                          "example": 5,
                          "nullable": true
                        },
                        "domainType": {
                          "type": "string",
                          "description": "The domain type tells us, where in ChurchTools the action was performed.",
                          "example": "mail"
                        },
                        "domainId": {
                          "type": "integer",
                          "description": "Analog to the domain type, the ID is the explicit resource.",
                          "example": 1
                        },
                        "message": {
                          "type": "string",
                          "example": "Help page called: 0:main (1)"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/logs/statistics/login": {
      "get": {
        "description": "Get statistics about login counts of users.",
        "operationId": "getLoginStatistics",
        "tags": [
          "Admin"
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "description": "Order the pagination result. Allowed values: `frequent` and `last`",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show page in pagenation. If empty, start at first page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "StatisticLogin",
                        "type": "object",
                        "x-tags": [
                          "Admin"
                        ],
                        "example": {
                          "totalLogins": 54,
                          "lastLogin": "2019-07-29T15:44:12Z",
                          "person": {
                            "title": "John Smith",
                            "domainType": "person",
                            "domainIdentifier": "116",
                            "apiUrl": "http://churchtools.test/api/persons/116",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "firstName": "John",
                                "lastName": "Smith"
                              }
                            ]
                          }
                        },
                        "properties": {
                          "totalLogins": {
                            "description": "Count of how many times a user has loged in.",
                            "type": "integer"
                          },
                          "lastLogin": {
                            "description": "Last time the user has logged in.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "person": {
                            "title": "Person DomainObject",
                            "type": "object",
                            "x-tags": [
                              "Person"
                            ],
                            "description": "Person as Domain Object",
                            "properties": {
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string",
                                    "description": "",
                                    "example": "Vanessa"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "example": "Fischer",
                                    "description": ""
                                  },
                                  "guid": {
                                    "type": "string",
                                    "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                    "description": "Globally Unique Identifier"
                                  }
                                }
                              },
                              "imageUrl": {
                                "type": "string",
                                "description": "Image Url",
                                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                              },
                              "frontendUrl": {
                                "type": "string",
                                "description": "Frontend link",
                                "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                              },
                              "apiUrl": {
                                "type": "string",
                                "description": "API Endpoint to calendar",
                                "example": "http://churchtools.test/api/persons/19"
                              },
                              "domainType": {
                                "type": "string",
                                "description": "ChurchTools domain type",
                                "example": "person"
                              },
                              "title": {
                                "type": "string",
                                "description": "Fullname of Person",
                                "example": "Vanessa Fischer"
                              },
                              "domainIdentifier": {
                                "type": "string",
                                "example": "19",
                                "description": "Person ID"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/calendars/appointments/templates": {
      "get": {
        "summary": "get all appointment templates",
        "operationId": "getAllTemplates",
        "tags": [
          "Calendar"
        ],
        "responses": {
          "200": {
            "description": "get all appointment templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "AppointmentTemplate",
                        "type": "object",
                        "x-tags": [
                          "Calendar"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "title": {
                            "type": "string",
                            "example": "Service"
                          },
                          "comment": {
                            "type": "string",
                            "example": "With Sacrament"
                          },
                          "startTime": {
                            "type": "string",
                            "example": "10:00"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration in seconds",
                            "example": 3600
                          },
                          "allDay": {
                            "type": "boolean",
                            "example": false
                          },
                          "note": {
                            "type": "string",
                            "example": ""
                          },
                          "isInternal": {
                            "type": "boolean",
                            "example": false
                          },
                          "categoryId": {
                            "type": "integer",
                            "example": 1
                          },
                          "repeatId": {
                            "type": "integer",
                            "example": 4
                          },
                          "repeatFrequence": {
                            "type": "integer",
                            "nullable": true,
                            "example": null
                          },
                          "repeatOptionId": {
                            "type": "integer",
                            "nullable": true,
                            "example": null
                          },
                          "repeatDuration": {
                            "type": "integer",
                            "nullable": true,
                            "example": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        }
      },
      "post": {
        "summary": "Create new appointment template",
        "operationId": "createTemplate",
        "tags": [
          "Calendar"
        ],
        "requestBody": {
          "description": "appointment template data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "startTime",
                  "duration"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Kids Service"
                  },
                  "comment": {
                    "type": "string",
                    "example": "With supervising"
                  },
                  "startTime": {
                    "type": "string",
                    "example": "10:00"
                  },
                  "duration": {
                    "type": "integer",
                    "example": 3600
                  },
                  "allDay": {
                    "type": "boolean",
                    "example": false
                  },
                  "note": {
                    "type": "string",
                    "example": ""
                  },
                  "isInternal": {
                    "type": "boolean",
                    "example": false
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 1
                  },
                  "repeatId": {
                    "type": "integer",
                    "example": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new appointment template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "AppointmentTemplate",
                        "type": "object",
                        "x-tags": [
                          "Calendar"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "title": {
                            "type": "string",
                            "example": "Service"
                          },
                          "comment": {
                            "type": "string",
                            "example": "With Sacrament"
                          },
                          "startTime": {
                            "type": "string",
                            "example": "10:00"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration in seconds",
                            "example": 3600
                          },
                          "allDay": {
                            "type": "boolean",
                            "example": false
                          },
                          "note": {
                            "type": "string",
                            "example": ""
                          },
                          "isInternal": {
                            "type": "boolean",
                            "example": false
                          },
                          "categoryId": {
                            "type": "integer",
                            "example": 1
                          },
                          "repeatId": {
                            "type": "integer",
                            "example": 4
                          },
                          "repeatFrequence": {
                            "type": "integer",
                            "nullable": true,
                            "example": null
                          },
                          "repeatOptionId": {
                            "type": "integer",
                            "nullable": true,
                            "example": null
                          },
                          "repeatDuration": {
                            "type": "integer",
                            "nullable": true,
                            "example": null
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        }
      }
    },
    "/calendars/appointments/templates/{templateId}": {
      "get": {
        "summary": "get a appointment template",
        "operationId": "getTemplateById",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "ID of appointment template",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get appointment template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "AppointmentTemplate",
                      "type": "object",
                      "x-tags": [
                        "Calendar"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Service"
                        },
                        "comment": {
                          "type": "string",
                          "example": "With Sacrament"
                        },
                        "startTime": {
                          "type": "string",
                          "example": "10:00"
                        },
                        "duration": {
                          "type": "integer",
                          "description": "Duration in seconds",
                          "example": 3600
                        },
                        "allDay": {
                          "type": "boolean",
                          "example": false
                        },
                        "note": {
                          "type": "string",
                          "example": ""
                        },
                        "isInternal": {
                          "type": "boolean",
                          "example": false
                        },
                        "categoryId": {
                          "type": "integer",
                          "example": 1
                        },
                        "repeatId": {
                          "type": "integer",
                          "example": 4
                        },
                        "repeatFrequence": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        },
                        "repeatOptionId": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        },
                        "repeatDuration": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "put": {
        "summary": "update a appointment template identified by id",
        "operationId": "updateTemplate",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "ID of appointment template",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "appointment template data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "startTime",
                  "duration"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Kids Service"
                  },
                  "comment": {
                    "type": "string",
                    "example": "With supervising"
                  },
                  "startTime": {
                    "type": "string",
                    "example": "10:00"
                  },
                  "duration": {
                    "type": "integer",
                    "example": 3600
                  },
                  "allDay": {
                    "type": "boolean",
                    "example": false
                  },
                  "note": {
                    "type": "string",
                    "example": ""
                  },
                  "isInternal": {
                    "type": "boolean",
                    "example": false
                  },
                  "categoryId": {
                    "type": "integer",
                    "example": 1
                  },
                  "repeatId": {
                    "type": "integer",
                    "example": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated appointment template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "AppointmentTemplate",
                      "type": "object",
                      "x-tags": [
                        "Calendar"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "title": {
                          "type": "string",
                          "example": "Service"
                        },
                        "comment": {
                          "type": "string",
                          "example": "With Sacrament"
                        },
                        "startTime": {
                          "type": "string",
                          "example": "10:00"
                        },
                        "duration": {
                          "type": "integer",
                          "description": "Duration in seconds",
                          "example": 3600
                        },
                        "allDay": {
                          "type": "boolean",
                          "example": false
                        },
                        "note": {
                          "type": "string",
                          "example": ""
                        },
                        "isInternal": {
                          "type": "boolean",
                          "example": false
                        },
                        "categoryId": {
                          "type": "integer",
                          "example": 1
                        },
                        "repeatId": {
                          "type": "integer",
                          "example": 4
                        },
                        "repeatFrequence": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        },
                        "repeatOptionId": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        },
                        "repeatDuration": {
                          "type": "integer",
                          "nullable": true,
                          "example": null
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a appointment template identified by id",
        "operationId": "deleteTemplate",
        "tags": [
          "Calendar"
        ],
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "ID of appointment template",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Get all events",
        "description": "Gets a list of all events with services",
        "operationId": "getAllEvents",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "Start date from when events are returned. Default value: today",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2019-08-08",
              "default": "today"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "End date until when events are returned. Default value: two month from now",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2019-08-08",
              "default": "two months from now"
            }
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "canceled",
            "description": "If true, include also canceled events"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Event",
                        "type": "object",
                        "x-tags": [
                          "Event"
                        ],
                        "description": "Schema of an Event in ChurchTools",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 10,
                            "description": "ID of Event"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-03-17T11:30:00Z",
                            "description": "Date/Time of Eventstart"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2020-03-17T10:00:00Z",
                            "description": "Date/Time of Eventend"
                          },
                          "description": {
                            "type": "string",
                            "example": "We celebrate",
                            "description": "Description of Event"
                          },
                          "name": {
                            "type": "string",
                            "example": "Sunday Service",
                            "description": "Name of Event"
                          },
                          "guid": {
                            "type": "string",
                            "example": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                            "description": "Globally Unique Identifier"
                          },
                          "calendar": {
                            "title": "Calendar DomainObject",
                            "type": "object",
                            "x-tags": [
                              "Calendar"
                            ],
                            "description": "Calendar Information as Domain Object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Sunday Service",
                                "description": "Name of calendar"
                              },
                              "domainType": {
                                "type": "string",
                                "description": "ChurchTools domain type",
                                "example": "calendar"
                              },
                              "apiUrl": {
                                "type": "string",
                                "example": "''",
                                "description": "API Endpoint to calendar"
                              },
                              "frontendUrl": {
                                "type": "string",
                                "example": "''",
                                "description": "Frontend link"
                              },
                              "imageUrl": {
                                "type": "string",
                                "example": "''",
                                "description": "Image Url"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "campus": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "Central",
                                    "description": "Name of campus if calendar is linked."
                                  }
                                }
                              },
                              "domainIdentifier": {
                                "type": "string",
                                "example": "12",
                                "description": "ID of Calendar"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "Total Count of Events in Response"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/events/{eventId}": {
      "get": {
        "summary": "Get a single event",
        "description": "Get a event by id, with services",
        "operationId": "getEvent",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event",
            "required": true,
            "schema": {
              "type": "string",
              "example": 42
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "guid": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "eventServices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "person": {
                                "nullable": true,
                                "type": "object",
                                "properties": {
                                  "titel": {
                                    "type": "string"
                                  },
                                  "domainType": {
                                    "type": "string",
                                    "enum": [
                                      "person"
                                    ]
                                  },
                                  "domainIdentifier": {
                                    "type": "string"
                                  },
                                  "apiUrl": {
                                    "type": "string"
                                  },
                                  "frontendUrl": {
                                    "type": "string"
                                  },
                                  "imageUrl": {
                                    "type": "string"
                                  },
                                  "domainAttributes": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string"
                                      },
                                      "lastName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "title": "John Smith",
                                  "domainType": "person",
                                  "domainIdentifier": "116",
                                  "apiUrl": "http://churchtools.test/api/persons/116",
                                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                  "imageUrl": "",
                                  "domainAttributes": [
                                    {
                                      "firstName": "John",
                                      "lastName": "Smith"
                                    }
                                  ]
                                }
                              },
                              "name": {
                                "type": "string"
                              },
                              "serviceId": {
                                "type": "integer"
                              },
                              "agreed": {
                                "type": "boolean"
                              },
                              "isValid": {
                                "type": "boolean"
                              },
                              "requestedDate": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "requesterPerson": {
                                "nullable": true,
                                "type": "object",
                                "properties": {
                                  "titel": {
                                    "type": "string"
                                  },
                                  "domainType": {
                                    "type": "string",
                                    "enum": [
                                      "person"
                                    ]
                                  },
                                  "domainIdentifier": {
                                    "type": "string"
                                  },
                                  "apiUrl": {
                                    "type": "string"
                                  },
                                  "frontendUrl": {
                                    "type": "string"
                                  },
                                  "imageUrl": {
                                    "type": "string"
                                  },
                                  "domainAttributes": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string"
                                      },
                                      "lastName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "title": "John Smith",
                                  "domainType": "person",
                                  "domainIdentifier": "116",
                                  "apiUrl": "http://churchtools.test/api/persons/116",
                                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                  "imageUrl": "",
                                  "domainAttributes": [
                                    {
                                      "firstName": "John",
                                      "lastName": "Smith"
                                    }
                                  ]
                                }
                              },
                              "comment": {
                                "type": "string"
                              },
                              "counter": {
                                "type": "integer"
                              },
                              "allowChat": {
                                "type": "boolean"
                              }
                            },
                            "example": {
                              "id": 77,
                              "person": {
                                "title": "John Smith",
                                "domainType": "person",
                                "domainIdentifier": "116",
                                "apiUrl": "http://churchtools.test/api/persons/116",
                                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                "imageUrl": "",
                                "domainAttributes": [
                                  {
                                    "firstName": "John",
                                    "lastName": "Smith"
                                  }
                                ]
                              },
                              "name": "John Smith",
                              "serviceId": 8,
                              "agreed": true,
                              "isValid": true,
                              "requestedDate": "2019-08-01T16:16:54Z",
                              "requesterPerson": {
                                "title": "John Smith",
                                "domainType": "person",
                                "domainIdentifier": "116",
                                "apiUrl": "http://churchtools.test/api/persons/116",
                                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                "imageUrl": "",
                                "domainAttributes": [
                                  {
                                    "firstName": "John",
                                    "lastName": "Smith"
                                  }
                                ]
                              },
                              "comment": "I\"m in",
                              "counter": 0,
                              "allowChat": true
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 10,
                        "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                        "name": "Sunday Service",
                        "description": "We celebrate",
                        "startDate": "2019-08-06T11:00:00Z",
                        "endDate": "2019-08-06T12:30:00Z",
                        "items": [
                          {
                            "id": 77,
                            "person": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            },
                            "name": "John Smith",
                            "serviceId": 8,
                            "agreed": true,
                            "isValid": true,
                            "requestedDate": "2019-08-01T16:16:54Z",
                            "requesterPerson": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            },
                            "comment": "I\"m in",
                            "counter": 0,
                            "allowChat": true
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/events/{eventId}/chat": {
      "post": {
        "summary": "Start or stop an event chat",
        "operationId": "startStopChat",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of event",
            "required": true,
            "schema": {
              "type": "string",
              "example": 42
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean"
                  },
                  "triggerChatInviteMail": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful request"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/events/{eventId}/agenda": {
      "get": {
        "summary": "Get agenda for event",
        "description": "Fetch all agenda items.",
        "operationId": "getAgendaForEvent",
        "tags": [
          "Event"
        ],
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "description": "ID of corresponding event",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 12
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Agenda",
                      "type": "object",
                      "x-tags": [
                        "Event"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 10
                        },
                        "name": {
                          "type": "string",
                          "example": "11.00 Service 25.05.2019"
                        },
                        "series": {
                          "type": "string",
                          "example": "Prophets"
                        },
                        "isFinal": {
                          "type": "boolean",
                          "example": false
                        },
                        "calendarId": {
                          "type": "integer",
                          "example": 1
                        },
                        "total": {
                          "type": "integer",
                          "description": "Total of agenda items (without headers)",
                          "example": 24
                        },
                        "items": {
                          "type": "array",
                          "items": {
                            "title": "Agenda Item",
                            "type": "object",
                            "x-tags": [
                              "Event"
                            ],
                            "description": "",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 345
                              },
                              "position": {
                                "type": "integer",
                                "example": 1
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "normal",
                                  "song",
                                  "header"
                                ],
                                "example": "song"
                              },
                              "title": {
                                "type": "string",
                                "example": "Start of Worship"
                              },
                              "note": {
                                "type": "string",
                                "example": "Praise the Lord"
                              },
                              "duration": {
                                "type": "integer",
                                "description": "Duration of agenda item in seconds.",
                                "example": 315
                              },
                              "start": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The start time of a position is dynamically calculated based on previous items and the start time of the event.",
                                "example": "2019-05-25T11:00:00Z"
                              },
                              "isBeforeEvent": {
                                "type": "boolean",
                                "example": false
                              },
                              "responsible": {
                                "type": "object",
                                "example": {
                                  "text": "[Worshipleader]",
                                  "persons": [
                                    {
                                      "service": "[Worshipleader]",
                                      "approved": true,
                                      "person": {
                                        "title": "Person DomainObject",
                                        "type": "object",
                                        "x-tags": [
                                          "Person"
                                        ],
                                        "description": "Person as Domain Object",
                                        "properties": {
                                          "domainAttributes": {
                                            "type": "object",
                                            "properties": {
                                              "firstName": {
                                                "type": "string",
                                                "description": "",
                                                "example": "Vanessa"
                                              },
                                              "lastName": {
                                                "type": "string",
                                                "example": "Fischer",
                                                "description": ""
                                              },
                                              "guid": {
                                                "type": "string",
                                                "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                                "description": "Globally Unique Identifier"
                                              }
                                            }
                                          },
                                          "imageUrl": {
                                            "type": "string",
                                            "description": "Image Url",
                                            "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                                          },
                                          "frontendUrl": {
                                            "type": "string",
                                            "description": "Frontend link",
                                            "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                                          },
                                          "apiUrl": {
                                            "type": "string",
                                            "description": "API Endpoint to calendar",
                                            "example": "http://churchtools.test/api/persons/19"
                                          },
                                          "domainType": {
                                            "type": "string",
                                            "description": "ChurchTools domain type",
                                            "example": "person"
                                          },
                                          "title": {
                                            "type": "string",
                                            "description": "Fullname of Person",
                                            "example": "Vanessa Fischer"
                                          },
                                          "domainIdentifier": {
                                            "type": "string",
                                            "example": "19",
                                            "description": "Person ID"
                                          }
                                        }
                                      }
                                    }
                                  ]
                                },
                                "properties": {
                                  "text": {
                                    "type": "string",
                                    "description": "Raw text string. You need to search-replace the placeholders yourself."
                                  },
                                  "persons": {
                                    "description": "Array of all persons, who could be resolved from the text string. If a service has multiple positions, multiple objects are in the array with the same `service` text string. If a service is not yet set the `person` object will be null.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "service": {
                                          "type": "string",
                                          "description": "Name of the service, which is also the placeholder in the raw text string."
                                        },
                                        "approved": {
                                          "type": "boolean",
                                          "description": "Flat to indicate if the person has approved the service or is requested."
                                        },
                                        "person": {
                                          "title": "Person DomainObject",
                                          "type": "object",
                                          "x-tags": [
                                            "Person"
                                          ],
                                          "description": "Person as Domain Object",
                                          "properties": {
                                            "domainAttributes": {
                                              "type": "object",
                                              "properties": {
                                                "firstName": {
                                                  "type": "string",
                                                  "description": "",
                                                  "example": "Vanessa"
                                                },
                                                "lastName": {
                                                  "type": "string",
                                                  "example": "Fischer",
                                                  "description": ""
                                                },
                                                "guid": {
                                                  "type": "string",
                                                  "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                                  "description": "Globally Unique Identifier"
                                                }
                                              }
                                            },
                                            "imageUrl": {
                                              "type": "string",
                                              "description": "Image Url",
                                              "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                                            },
                                            "frontendUrl": {
                                              "type": "string",
                                              "description": "Frontend link",
                                              "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                                            },
                                            "apiUrl": {
                                              "type": "string",
                                              "description": "API Endpoint to calendar",
                                              "example": "http://churchtools.test/api/persons/19"
                                            },
                                            "domainType": {
                                              "type": "string",
                                              "description": "ChurchTools domain type",
                                              "example": "person"
                                            },
                                            "title": {
                                              "type": "string",
                                              "description": "Fullname of Person",
                                              "example": "Vanessa Fischer"
                                            },
                                            "domainIdentifier": {
                                              "type": "string",
                                              "example": "19",
                                              "description": "Person ID"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "serviceGroupNotes": {
                                "description": "Array of notes per service group. You will only see the service groups, you are allowed to see.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "serviceGroupId": {
                                      "type": "integer",
                                      "example": 13
                                    },
                                    "note": {
                                      "type": "string",
                                      "example": "Start with synthy pad in background"
                                    }
                                  }
                                }
                              },
                              "song": {
                                "type": "object",
                                "description": "If the type is `song` the song object is added to this item. `normal` and `header` items do not include this object.",
                                "properties": {
                                  "songId": {
                                    "type": "integer",
                                    "example": 11
                                  },
                                  "arrangementId": {
                                    "type": "integer",
                                    "example": 22
                                  },
                                  "title": {
                                    "type": "string",
                                    "example": "Bless the Lord"
                                  },
                                  "arrangement": {
                                    "type": "string",
                                    "example": "For Man Voice"
                                  },
                                  "category": {
                                    "type": "string",
                                    "example": "Worship"
                                  },
                                  "key": {
                                    "type": "string",
                                    "example": "G-Major"
                                  },
                                  "bpm": {
                                    "type": "string",
                                    "example": "80"
                                  },
                                  "defaultArrangement": {
                                    "type": "string",
                                    "example": "Original"
                                  }
                                }
                              },
                              "meta": {
                                "type": "object",
                                "properties": {
                                  "modifiedDate": {
                                    "type": "string"
                                  },
                                  "modifiedPid": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  }
                                }
                              },
                              "startTimes": {
                                "type": "object",
                                "description": "List of start times if this agenda is shared between multiple events.",
                                "properties": {
                                  "eventId": {
                                    "type": [
                                      "string",
                                      "null"
                                    ],
                                    "format": "date-time",
                                    "example": "2021-03-09T13:59:00Z"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "meta": {
                          "type": "object",
                          "properties": {
                            "modifiedDate": {
                              "type": "string",
                              "description": "Last change of that agenda"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "description": "Person ID, who did the last change"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        }
      }
    },
    "/agendas/send": {
      "post": {
        "deprecated": true,
        "summary": "Send agenda email to recipients",
        "description": "A agenda can be sent to multiple people at once. Recipients can be participants of one of the events, whereby the user sending the mail MUST see the service groups, or the user can add additional recipients from the list of people the user can see. To send a mail the user MUST see the agenda.",
        "operationId": "sendAgendaEmail",
        "tags": [
          "Event"
        ],
        "requestBody": {
          "description": "E-Mail information and recipients",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "eventIds",
                  "recipients",
                  "subject",
                  "body"
                ],
                "properties": {
                  "eventIds": {
                    "description": "Array of event IDs. Multiple event IDs MUST be integrated events, i.e. all events share the same agenda.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "recipients": {
                    "description": "Array of person IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "sendCopyToMe": {
                    "description": "Flag if a mail should be send to the user sending the request.",
                    "type": "boolean",
                    "default": false
                  },
                  "subject": {
                    "description": "E-Mail subject.",
                    "type": "string"
                  },
                  "body": {
                    "description": "E-Mail body.",
                    "type": "string"
                  }
                },
                "example": {
                  "eventIds": [
                    31,
                    32
                  ],
                  "recipients": [
                    40,
                    41,
                    116
                  ],
                  "sendCopyToMe": true,
                  "subject": "Agenda Updated",
                  "body": "I have a updated the agenda for the upcoming service. Please review the changes."
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully sent mails to some recipients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "5 recipients have no eMail address. No eMail is sent to them."
                    },
                    "translatedMessage": {
                      "type": "string",
                      "example": "5 Empfänger haben keine E-Mail Adresse. Keine E-Mail wurde an sie geschickt."
                    },
                    "messageKey": {
                      "type": "string",
                      "example": "agenda.mail.missing.email"
                    },
                    "args": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 5
                        }
                      }
                    },
                    "errors": {
                      "description": "Array of DomainObjects with people, who have no eMail Addresses.",
                      "type": "array",
                      "items": {
                        "title": "Person DomainObject",
                        "type": "object",
                        "x-tags": [
                          "Person"
                        ],
                        "description": "Person as Domain Object",
                        "properties": {
                          "domainAttributes": {
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "description": "",
                                "example": "Vanessa"
                              },
                              "lastName": {
                                "type": "string",
                                "example": "Fischer",
                                "description": ""
                              },
                              "guid": {
                                "type": "string",
                                "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                "description": "Globally Unique Identifier"
                              }
                            }
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "Image Url",
                            "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                          },
                          "frontendUrl": {
                            "type": "string",
                            "description": "Frontend link",
                            "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                          },
                          "apiUrl": {
                            "type": "string",
                            "description": "API Endpoint to calendar",
                            "example": "http://churchtools.test/api/persons/19"
                          },
                          "domainType": {
                            "type": "string",
                            "description": "ChurchTools domain type",
                            "example": "person"
                          },
                          "title": {
                            "type": "string",
                            "description": "Fullname of Person",
                            "example": "Vanessa Fischer"
                          },
                          "domainIdentifier": {
                            "type": "string",
                            "example": "19",
                            "description": "Person ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Successfully sent mails to all recipients the user can see."
          },
          "400": {
            "description": "Validation errors. See response for details"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        }
      }
    },
    "/translations": {
      "get": {
        "summary": "Get all translations",
        "description": "The response is a list of the translations",
        "operationId": "getAllTranslations",
        "tags": [
          "Translation"
        ],
        "parameters": [
          {
            "name": "updated_by_church",
            "in": "query",
            "description": "Only return Translations created or updated by the church",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Translation Key",
                        "type": "object",
                        "x-tags": [
                          "Translation"
                        ],
                        "description": "Translation key object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 42
                          },
                          "key": {
                            "type": "string",
                            "example": "person.title"
                          },
                          "module": {
                            "type": "string",
                            "example": "app"
                          },
                          "updated": {
                            "type": "string",
                            "nullable": true,
                            "description": "Last updated",
                            "format": "date-time",
                            "example": "2018-05-06T19:33:00Z"
                          },
                          "translations": {
                            "type": "object",
                            "properties": {
                              "additionalProperties": {
                                "title": "Translation",
                                "type": "object",
                                "x-tags": [
                                  "Translation"
                                ],
                                "description": "Translation object",
                                "properties": {
                                  "translation": {
                                    "type": "string",
                                    "description": "The translation value for the key",
                                    "example": "Der Titel der Personen"
                                  },
                                  "updatedByChurch": {
                                    "type": "boolean",
                                    "description": "Determines if the translation was updated or created by the church",
                                    "example": true
                                  },
                                  "updated": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "Last updated",
                                    "format": "date-time",
                                    "example": "2018-05-06T19:33:00Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "description": "Total number of results.",
                              "example": 21
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current page.",
                              "example": 1
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Number of results per page.",
                              "example": 10
                            },
                            "lastPage": {
                              "type": "integer",
                              "description": "Number of last page.",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        }
      }
    },
    "/chat": {
      "get": {
        "summary": "Get all chats",
        "description": "Gets a list of all chats",
        "operationId": "getAllChats",
        "tags": [
          "Chat"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guid": {
                          "type": "string"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "domainId": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "creator": {
                          "type": "integer"
                        },
                        "roomname": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                        "prefix": "ctg",
                        "domainId": 9,
                        "status": "STARTED",
                        "creator": 1,
                        "roomname": "Technik"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "post": {
        "summary": "Start new chat",
        "operationId": "createNewChat",
        "tags": [
          "Chat"
        ],
        "requestBody": {
          "description": "Chat to start",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "guid",
                  "prefix",
                  "domainId",
                  "roomname"
                ],
                "properties": {
                  "guid": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "domainId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                  "prefix": "ctg",
                  "domainId": 9,
                  "roomname": "Technik"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfuly created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guid": {
                          "type": "string"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "domainId": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "creator": {
                          "type": "integer"
                        },
                        "roomname": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                        "prefix": "ctg",
                        "domainId": 9,
                        "status": "STARTED",
                        "creator": 1,
                        "roomname": "Technik"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/chat/{guid}": {
      "patch": {
        "summary": "Update a chat",
        "operationId": "updateChat",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "chat GUID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727"
            }
          }
        ],
        "requestBody": {
          "description": "data to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "prefix": {
                    "type": "string"
                  },
                  "domainId": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string"
                  },
                  "creator": {
                    "type": "integer"
                  },
                  "roomname": {
                    "type": "string"
                  }
                },
                "example": {
                  "prefix": "ctg",
                  "domainId": 9,
                  "status": "STARTED",
                  "creator": 1,
                  "roomname": "Technik"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfuly updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "guid": {
                          "type": "string"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "domainId": {
                          "type": "integer"
                        },
                        "status": {
                          "type": "string"
                        },
                        "creator": {
                          "type": "integer"
                        },
                        "roomname": {
                          "type": "string"
                        }
                      },
                      "example": {
                        "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
                        "prefix": "ctg",
                        "domainId": 9,
                        "status": "STARTED",
                        "creator": 1,
                        "roomname": "Technik"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete a chat",
        "tags": [
          "Chat"
        ],
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "chat GUID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/masterdata/person": {
      "get": {
        "tags": [
          "MasterData"
        ],
        "deprecated": true,
        "operationId": "fetchMasterDataPerson",
        "summary": "Fetch all master data for the module \"People & Groups\"",
        "description": "Endpoint depreacted. Please use `/person/masterdata`.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/masterdata/person/roles": {
      "get": {
        "summary": "Get all group type roles",
        "description": "This endpoint returns an array with all roles of a group type.",
        "operationId": "getAllGroupTypeRoles",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "All group type roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of this group type role."
                          },
                          "groupTypeId": {
                            "type": "integer",
                            "description": "ID of corresponding group type."
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of role."
                          },
                          "shorty": {
                            "type": "string",
                            "description": "Abbreviation of the name."
                          },
                          "sortKey": {
                            "type": "integer",
                            "description": "Number used for sorting roles."
                          },
                          "toDelete": {
                            "type": "boolean",
                            "description": "Flag, if members of this role can be deleted or removed from the group."
                          },
                          "hasRequested": {
                            "type": "boolean",
                            "description": "Flag, if group member is requesting group access."
                          },
                          "isLeader": {
                            "type": "boolean",
                            "description": "Flag, this role is a leader."
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "Indicator of default roles."
                          },
                          "isHidden": {
                            "type": "boolean",
                            "description": "Flag, if this role is hidden in groups."
                          },
                          "growPathId": {
                            "type": "integer",
                            "nullable": true,
                            "description": "ID of the grow path."
                          }
                        },
                        "example": [
                          {
                            "id": 5,
                            "groupTypeId": 2,
                            "name": "Member",
                            "shorty": "M",
                            "sortKey": 4,
                            "toDelete": false,
                            "hasRequested": false,
                            "isLeader": false,
                            "isDefault": true,
                            "isHidden": false,
                            "growPathId": null
                          },
                          {
                            "id": 6,
                            "groupTypeId": 2,
                            "name": "Leader",
                            "shorty": "L",
                            "sortKey": 2,
                            "toDelete": false,
                            "hasRequested": false,
                            "isLeader": true,
                            "isDefault": false,
                            "isHidden": false,
                            "growPathId": 2
                          }
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to see group type roles"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/masterdata/person/roles/{roleId}": {
      "get": {
        "summary": "Get a group type role",
        "tags": [
          "MasterData"
        ],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "ID of group type role",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "ID of this group type role."
                        },
                        "groupTypeId": {
                          "type": "integer",
                          "description": "ID of corresponding group type."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of role."
                        },
                        "shorty": {
                          "type": "string",
                          "description": "Abbreviation of the name."
                        },
                        "sortKey": {
                          "type": "integer",
                          "description": "Number used for sorting roles."
                        },
                        "toDelete": {
                          "type": "boolean",
                          "description": "Flag, if members of this role can be deleted or removed from the group."
                        },
                        "hasRequested": {
                          "type": "boolean",
                          "description": "Flag, if group member is requesting group access."
                        },
                        "isLeader": {
                          "type": "boolean",
                          "description": "Flag, this role is a leader."
                        },
                        "isDefault": {
                          "type": "boolean",
                          "description": "Indicator of default roles."
                        },
                        "isHidden": {
                          "type": "boolean",
                          "description": "Flag, if this role is hidden in groups."
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true,
                          "description": "ID of the grow path."
                        }
                      },
                      "example": [
                        {
                          "id": 5,
                          "groupTypeId": 2,
                          "name": "Member",
                          "shorty": "M",
                          "sortKey": 4,
                          "toDelete": false,
                          "hasRequested": false,
                          "isLeader": false,
                          "isDefault": true,
                          "isHidden": false,
                          "growPathId": null
                        },
                        {
                          "id": 6,
                          "groupTypeId": 2,
                          "name": "Leader",
                          "shorty": "L",
                          "sortKey": 2,
                          "toDelete": false,
                          "hasRequested": false,
                          "isLeader": true,
                          "isDefault": false,
                          "isHidden": false,
                          "growPathId": 2
                        }
                      ]
                    }
                  },
                  "example": {
                    "data": {
                      "id": 5,
                      "groupTypeId": 2,
                      "name": "Member",
                      "shorty": "M",
                      "sortKey": 4,
                      "toDelete": false,
                      "hasRequested": false,
                      "isLeader": false,
                      "isDefault": true,
                      "isHidden": false,
                      "growPathId": null
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see group type role"
          },
          "404": {
            "description": "Role not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/person/masterdata": {
      "get": {
        "summary": "Fetch all master data for the module \"People & Groups\"",
        "description": "The master data are the backbone of ChurchTools. You can add new db fields, or change the available countries. This endpoint returns all data for that module to work with. Different endpoints don't include the master data directly but only state the ID for this data and this endpoint provides the data with all its details.",
        "operationId": "getMasterDataPerson",
        "tags": [
          "MasterData"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "roles": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of this group type role."
                              },
                              "groupTypeId": {
                                "type": "integer",
                                "description": "ID of corresponding group type."
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of role."
                              },
                              "shorty": {
                                "type": "string",
                                "description": "Abbreviation of the name."
                              },
                              "sortKey": {
                                "type": "integer",
                                "description": "Number used for sorting roles."
                              },
                              "toDelete": {
                                "type": "boolean",
                                "description": "Flag, if members of this role can be deleted or removed from the group."
                              },
                              "hasRequested": {
                                "type": "boolean",
                                "description": "Flag, if group member is requesting group access."
                              },
                              "isLeader": {
                                "type": "boolean",
                                "description": "Flag, this role is a leader."
                              },
                              "isDefault": {
                                "type": "boolean",
                                "description": "Indicator of default roles."
                              },
                              "isHidden": {
                                "type": "boolean",
                                "description": "Flag, if this role is hidden in groups."
                              },
                              "growPathId": {
                                "type": "integer",
                                "nullable": true,
                                "description": "ID of the grow path."
                              }
                            },
                            "example": [
                              {
                                "id": 5,
                                "groupTypeId": 2,
                                "name": "Member",
                                "shorty": "M",
                                "sortKey": 4,
                                "toDelete": false,
                                "hasRequested": false,
                                "isLeader": false,
                                "isDefault": true,
                                "isHidden": false,
                                "growPathId": null
                              },
                              {
                                "id": 6,
                                "groupTypeId": 2,
                                "name": "Leader",
                                "shorty": "L",
                                "sortKey": 2,
                                "toDelete": false,
                                "hasRequested": false,
                                "isLeader": true,
                                "isDefault": false,
                                "isHidden": false,
                                "growPathId": 2
                              }
                            ]
                          }
                        },
                        "ageGroups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "start": {
                                "description": "Starting age of this age group.",
                                "type": "integer"
                              },
                              "end": {
                                "description": "End age of this age group.",
                                "type": "integer"
                              },
                              "sortKey": {
                                "type": "integer"
                              }
                            },
                            "example": {
                              "id": 2,
                              "name": "11-13",
                              "start": 11,
                              "end": 13,
                              "sortKey": 1
                            }
                          }
                        },
                        "targetGroups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              }
                            },
                            "example": {
                              "id": 3,
                              "name": "everyone",
                              "sortKey": 3
                            }
                          }
                        },
                        "groupTypes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "isLeaderNecessary": {
                                "description": "Flag if a group of this group type MUST have a leader.",
                                "type": "boolean"
                              },
                              "availableForNewPerson": {
                                "description": "Flag if this group type is available during the dialog when creating a new person.",
                                "type": "boolean"
                              },
                              "deepPermission": {
                                "type": "integer"
                              },
                              "sortKey": {
                                "type": "integer"
                              }
                            },
                            "example": {
                              "id": 3,
                              "name": "Smallgroup",
                              "isLeaderNecessary": true,
                              "availableForNewPerson": false,
                              "deepPersmission": 0,
                              "sortKey": 3
                            }
                          }
                        },
                        "groupCategories": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              }
                            },
                            "example": {
                              "id": 4,
                              "name": "Group Category 1",
                              "sortKey": 1
                            }
                          }
                        },
                        "groupStatuses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              }
                            },
                            "example": {
                              "id": 44,
                              "name": "active",
                              "sortKey": 1
                            }
                          }
                        },
                        "departments": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of department"
                              },
                              "name": {
                                "type": "string",
                                "description": "Department name"
                              },
                              "shorty": {
                                "type": "string",
                                "description": "Abbreviation"
                              },
                              "sortKey": {
                                "type": "integer",
                                "description": "Used to sort all departments"
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Gemeindeliste",
                              "shorty": "G",
                              "sortKey": 10
                            }
                          }
                        },
                        "statuses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of status"
                              },
                              "name": {
                                "type": "string",
                                "description": "Status name"
                              },
                              "shorty": {
                                "type": "string",
                                "description": "Abbreviation of name."
                              },
                              "isMember": {
                                "type": "boolean",
                                "description": "Flag if status is member of the church"
                              },
                              "isSearchable": {
                                "type": "boolean",
                                "description": "Flag if that status is searchable"
                              },
                              "sortKey": {
                                "type": "integer",
                                "description": "Used to sort all statuses"
                              },
                              "securityLevelId": {
                                "type": "integer",
                                "description": "Only persons with that securitylevel can edit/select/delete that status"
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Mitglied",
                              "shorty": "M",
                              "isMember": true,
                              "isSearchable": true,
                              "sortKey": 10,
                              "securityLevelId": 1
                            }
                          }
                        },
                        "campuses": {
                          "type": "array",
                          "items": {
                            "title": "Campus",
                            "type": "object",
                            "x-tags": [
                              "Campus"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of campus"
                              },
                              "name": {
                                "type": "string",
                                "description": "Campus name"
                              },
                              "shorty": {
                                "type": "string",
                                "description": "Abbreviation"
                              },
                              "sortKey": {
                                "type": "integer",
                                "description": "Used to sort all campuses"
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Gersthofen",
                              "shorty": "G",
                              "sortKey": 10
                            }
                          }
                        },
                        "contactLabels": {
                          "type": "array",
                          "items": {
                            "title": "Contact Label",
                            "type": "object",
                            "x-tags": [
                              "Contact Label"
                            ],
                            "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "ID of Record",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of Label",
                                "example": "Private"
                              },
                              "nameTranslated": {
                                "type": "string",
                                "description": "Translated Name of Label",
                                "example": "Privat"
                              },
                              "sortKey": {
                                "type": "number",
                                "example": 10
                              },
                              "isDefault": {
                                "type": "boolean",
                                "example": "false",
                                "description": "Indicator if label is the default. Used for new person emails"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "nameTranslated",
                              "sortKey",
                              "isDefault"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to View"
          }
        }
      }
    },
    "/finance/masterdata": {
      "get": {
        "summary": "Get a master data for finance module",
        "operationId": "getAllData",
        "tags": [
          "MasterData"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "ID of accounting period to get master data for",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all master data for finance module",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "clients": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "First Client"
                              },
                              "sortKey": {
                                "type": "integer",
                                "example": 1
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "accountingPeriods": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "clientId": {
                                "type": "integer"
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "isClosed": {
                                "type": "boolean"
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "canUseExpertMode": {
                                    "type": "boolean",
                                    "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
                                  }
                                }
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Buchungsjahr 2018",
                              "clientId": 1,
                              "startDate": "2018-01-01",
                              "endDate": "2018-12-31",
                              "isClosed": false,
                              "permissions": {
                                "canEdit": true
                              }
                            }
                          }
                        },
                        "accounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "accountGroupId": {
                                "type": "integer"
                              },
                              "accountingPeriodId": {
                                "type": "integer"
                              },
                              "isDonationAccount": {
                                "type": "boolean"
                              },
                              "isOpeningBalanceAccount": {
                                "type": "boolean"
                              },
                              "taxeRateId": {
                                "type": "integer"
                              },
                              "balance": {
                                "type": "number",
                                "format": "integer",
                                "description": "Current balance of account in cent."
                              },
                              "permissions": {
                                "type": "object",
                                "properties": {
                                  "allowPosting": {
                                    "description": "Flag, if user can use this account to post a transaction.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "number": 8200,
                              "name": "Donations",
                              "accountGroupId": 2,
                              "accountingPeriodId": 3,
                              "isDonationAccount": true,
                              "isOpeningBalanceAccount": false,
                              "taxRateId": null,
                              "balance": 20043,
                              "permissions": {
                                "allowPosting": true
                              }
                            }
                          }
                        },
                        "accountTypes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "isBalanceAccount": {
                                "type": "boolean"
                              },
                              "sortKey": {
                                "type": "integer",
                                "default": 0
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Aktiva",
                              "isBalanceAccount": true,
                              "sortKey": 0
                            }
                          }
                        },
                        "accountClasses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "accountTypeId": {
                                "type": "integer"
                              },
                              "includeProfitLoss": {
                                "type": "boolean",
                                "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
                              },
                              "sortKey": {
                                "type": "integer",
                                "default": 0
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Anlagevermögen",
                              "accountTypeId": 2,
                              "includeProfitLoss": false,
                              "sortKey": 0
                            }
                          }
                        },
                        "accountGroups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "accountClassId": {
                                "type": "integer"
                              },
                              "isCashAssetAccount": {
                                "type": "boolean"
                              },
                              "sortKey": {
                                "type": "integer",
                                "default": 0
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Sachanlagen",
                              "accountClassId": 2,
                              "isCashAssetAccount": false,
                              "sortKey": 0
                            }
                          }
                        },
                        "cashDiscounts": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "note": {
                                "type": "string"
                              },
                              "accountId": {
                                "type": "integer"
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "rate": 0.02,
                              "note": "Skonto 2%",
                              "accountId": 2
                            }
                          }
                        },
                        "costCenters": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "budget": {
                                "type": "number",
                                "format": "integer",
                                "description": "Budget is in cent."
                              },
                              "budgetBalance": {
                                "type": "number",
                                "format": "integer",
                                "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
                              },
                              "budgetSpent": {
                                "type": "number",
                                "format": "integer",
                                "description": "Cost Center Expences. (Outcome - Income). In cent"
                              },
                              "budgetLastPeriod": {
                                "type": "number",
                                "format": "integer",
                                "description": "Budget for the cost center with the same number in the previous accounting period."
                              },
                              "accountingPeriodId": {
                                "type": "integer"
                              },
                              "group": {
                                "type": "object",
                                "properties": {
                                  "titel": {
                                    "type": "string"
                                  },
                                  "domainType": {
                                    "type": "string",
                                    "enum": [
                                      "group"
                                    ]
                                  },
                                  "domainIdentifier": {
                                    "type": "string"
                                  },
                                  "apiUrl": {
                                    "type": "string"
                                  },
                                  "frontendUrl": {
                                    "type": "string"
                                  },
                                  "imageUrl": {
                                    "type": "string"
                                  },
                                  "domainAttributes": {
                                    "type": "object",
                                    "properties": {
                                      "note": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "title": "Smallgroup Smith",
                                  "domainType": "group",
                                  "domainIdentifier": "42",
                                  "apiUrl": "http://churchtools.test/api/groups/42",
                                  "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                                  "imageUrl": "",
                                  "domainAttributes": [
                                    {
                                      "note": "This group is aweasome"
                                    }
                                  ]
                                }
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "number": 802,
                              "name": "Kostenstelle Sonstige",
                              "accountId": 2,
                              "group": {
                                "title": "Smallgroup Smith",
                                "domainType": "group",
                                "domainIdentifier": "42",
                                "apiUrl": "http://churchtools.test/api/groups/42",
                                "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                                "imageUrl": "",
                                "domainAttributes": [
                                  {
                                    "note": "This group is aweasome"
                                  }
                                ]
                              },
                              "budget": 3200,
                              "budgetBalance": 144
                            }
                          }
                        },
                        "taxRates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "taxTypeId": {
                                "type": "integer"
                              },
                              "rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "note": {
                                "type": "string"
                              },
                              "accountId": {
                                "type": "integer"
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "taxTypeId": 2,
                              "rate": 0.19,
                              "note": "Ust. 19%",
                              "accountId": 3
                            }
                          }
                        },
                        "taxTypes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Umsatzsteuer",
                              "sortKey": 2
                            }
                          }
                        },
                        "transactionPurposes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "costCenterId": {
                                "type": "integer"
                              },
                              "purposeAccountId": {
                                "type": "integer",
                                "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
                              },
                              "sortKey": {
                                "type": "integer"
                              },
                              "isIncome": {
                                "type": "boolean"
                              },
                              "accountIds": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            },
                            "example": {
                              "id": 1,
                              "name": "Der Zweck heiligt die Mittel",
                              "costCenterId": 2,
                              "purposeAccountId": 3,
                              "sortKey": 4,
                              "accountIds": [
                                1,
                                2,
                                3
                              ],
                              "isIncome": true
                            }
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "object",
                      "properties": {
                        "clientsCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/clients": {
      "get": {
        "summary": "Get all clients",
        "operationId": "getAllClients",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "get available clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "example": "First Client"
                          },
                          "sortKey": {
                            "type": "integer",
                            "example": 1
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new client",
        "operationId": "createNewClient",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Client data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "sortKey"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Ein ganz neuer Mandant",
                  "sortKey": 5
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "get available clients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 2
                          },
                          "name": {
                            "type": "string",
                            "example": "First Client"
                          },
                          "sortKey": {
                            "type": "integer",
                            "example": 1
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/clients/{id}": {
      "get": {
        "summary": "Get a client",
        "operationId": "getClientById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of client",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get client",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "name": {
                          "type": "string",
                          "example": "First Client"
                        },
                        "sortKey": {
                          "type": "integer",
                          "example": 1
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update client",
        "operationId": "updateClient",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of client",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Client data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "sortKey"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Ein ganz neuer Mandant",
                  "sortKey": 5
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated client",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "name": {
                          "type": "string",
                          "example": "First Client"
                        },
                        "sortKey": {
                          "type": "integer",
                          "example": 1
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete client",
        "operationId": "deleteClient",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of client",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be delete if transactions are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accountingperiods": {
      "get": {
        "summary": "Get all accounting periods",
        "operationId": "getAllAccountingPeriods",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "Get available accounting periods, sorted by start date.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "clientId": {
                            "type": "integer"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "isClosed": {
                            "type": "boolean"
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canUseExpertMode": {
                                "type": "boolean",
                                "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Buchungsjahr 2018",
                          "clientId": 1,
                          "startDate": "2018-01-01",
                          "endDate": "2018-12-31",
                          "isClosed": false,
                          "permissions": {
                            "canEdit": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "post": {
        "summary": "Create new accounting period",
        "operationId": "createNewAccountingPeriod",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Accounting period data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "clientId",
                  "startDate",
                  "endDate",
                  "isClosed"
                ],
                "properties": {
                  "clientId": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "isClosed": {
                    "type": "boolean"
                  },
                  "copyMasterData": {
                    "type": "boolean",
                    "default": false,
                    "description": "Copy all master data from previous accounting period."
                  }
                },
                "example": {
                  "clientId": 2,
                  "startDate": "2019-01-01",
                  "endDate": "2019-12-31",
                  "isClosed": false,
                  "copyMasterData": false
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "new accounting period with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "clientId": {
                          "type": "integer"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "isClosed": {
                          "type": "boolean"
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "canUseExpertMode": {
                              "type": "boolean",
                              "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Buchungsjahr 2018",
                        "clientId": 1,
                        "startDate": "2018-01-01",
                        "endDate": "2018-12-31",
                        "isClosed": false,
                        "permissions": {
                          "canEdit": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/finance/accountingperiods/{id}": {
      "get": {
        "summary": "Get a accounting period",
        "operationId": "getAccountingPeriodById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get accounting period",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "clientId": {
                          "type": "integer"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "isClosed": {
                          "type": "boolean"
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "canUseExpertMode": {
                              "type": "boolean",
                              "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Buchungsjahr 2018",
                        "clientId": 1,
                        "startDate": "2018-01-01",
                        "endDate": "2018-12-31",
                        "isClosed": false,
                        "permissions": {
                          "canEdit": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "put": {
        "summary": "Update accounting period",
        "operationId": "updateAccountingPeriod",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Accounting period data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "clientId",
                  "startDate",
                  "endDate",
                  "isClosed"
                ],
                "properties": {
                  "clientId": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "isClosed": {
                    "type": "boolean"
                  },
                  "setImmutable": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true` all mutable transactions will be set to immutable. Hence no transaction will be editable or deletebale afterward."
                  }
                },
                "example": {
                  "clientId": 2,
                  "startDate": "2019-01-01",
                  "endDate": "2019-12-31",
                  "isClosed": false,
                  "setImmutable": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated accounting period",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "clientId": {
                          "type": "integer"
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date"
                        },
                        "isClosed": {
                          "type": "boolean"
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "canUseExpertMode": {
                              "type": "boolean",
                              "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Buchungsjahr 2018",
                        "clientId": 1,
                        "startDate": "2018-01-01",
                        "endDate": "2018-12-31",
                        "isClosed": false,
                        "permissions": {
                          "canEdit": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "delete": {
        "summary": "Delete accounting period",
        "operationId": "deleteAccountingPeriod",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Can be delete. If confirmed all linked data (Accounts, Transactions, Cost Centers, Tax Rates, Cash Discounts, Transaction Purposes) will be permantly removed! Only possible if accounting year is not locked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/finance/accountingperiods/{id}/accounts": {
      "delete": {
        "summary": "Delete accounts for accounting period",
        "operationId": "deleteAccountsForAccountingPeriod",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Cannot delete accounts with transactions"
                    },
                    "translatedMessage": {
                      "type": "string",
                      "example": "Buchungen sind noch verknüpft"
                    },
                    "messageKey": {
                      "type": "string",
                      "example": "finance.accounts.delete.transactions"
                    },
                    "args": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": []
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/finance/accounts": {
      "get": {
        "summary": "Get all accounts ordered by accounting period and number",
        "operationId": "getAllAccounts",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 2
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get available accounts ordered by number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountGroupId": {
                            "type": "integer"
                          },
                          "accountingPeriodId": {
                            "type": "integer"
                          },
                          "isDonationAccount": {
                            "type": "boolean"
                          },
                          "isOpeningBalanceAccount": {
                            "type": "boolean"
                          },
                          "taxeRateId": {
                            "type": "integer"
                          },
                          "balance": {
                            "type": "number",
                            "format": "integer",
                            "description": "Current balance of account in cent."
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "allowPosting": {
                                "description": "Flag, if user can use this account to post a transaction.",
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "number": 8200,
                          "name": "Donations",
                          "accountGroupId": 2,
                          "accountingPeriodId": 3,
                          "isDonationAccount": true,
                          "isOpeningBalanceAccount": false,
                          "taxRateId": null,
                          "balance": 20043,
                          "permissions": {
                            "allowPosting": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new account",
        "operationId": "createNewAccount",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Account data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "name",
                  "accountGroupId",
                  "accountingPeriodId"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "accountGroupId": {
                    "type": "integer"
                  },
                  "accountingPeriodId": {
                    "type": "integer"
                  },
                  "isDonationAccount": {
                    "type": "bool"
                  },
                  "isOpeningBalanceAccount": {
                    "type": "bool"
                  }
                },
                "example": {
                  "number": 8200,
                  "example": "Donations",
                  "accountGroupId": 4,
                  "accountingPeriodId": 5,
                  "isDonationAccount": false,
                  "isOpeningBalanceAccount": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountGroupId": {
                            "type": "integer"
                          },
                          "accountingPeriodId": {
                            "type": "integer"
                          },
                          "isDonationAccount": {
                            "type": "boolean"
                          },
                          "isOpeningBalanceAccount": {
                            "type": "boolean"
                          },
                          "taxeRateId": {
                            "type": "integer"
                          },
                          "balance": {
                            "type": "number",
                            "format": "integer",
                            "description": "Current balance of account in cent."
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "allowPosting": {
                                "description": "Flag, if user can use this account to post a transaction.",
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "number": 8200,
                          "name": "Donations",
                          "accountGroupId": 2,
                          "accountingPeriodId": 3,
                          "isDonationAccount": true,
                          "isOpeningBalanceAccount": false,
                          "taxRateId": null,
                          "balance": 20043,
                          "permissions": {
                            "allowPosting": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accounts/{id}": {
      "get": {
        "summary": "Get a account",
        "operationId": "getAccountById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountGroupId": {
                          "type": "integer"
                        },
                        "accountingPeriodId": {
                          "type": "integer"
                        },
                        "isDonationAccount": {
                          "type": "boolean"
                        },
                        "isOpeningBalanceAccount": {
                          "type": "boolean"
                        },
                        "taxeRateId": {
                          "type": "integer"
                        },
                        "balance": {
                          "type": "number",
                          "format": "integer",
                          "description": "Current balance of account in cent."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "allowPosting": {
                              "description": "Flag, if user can use this account to post a transaction.",
                              "type": "boolean"
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "number": 8200,
                        "name": "Donations",
                        "accountGroupId": 2,
                        "accountingPeriodId": 3,
                        "isDonationAccount": true,
                        "isOpeningBalanceAccount": false,
                        "taxRateId": null,
                        "balance": 20043,
                        "permissions": {
                          "allowPosting": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update account",
        "operationId": "updateAccount",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Account data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "name",
                  "accountGroupId",
                  "accountingPeriodId"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "accountGroupId": {
                    "type": "integer"
                  },
                  "accountingPeriodId": {
                    "type": "integer"
                  },
                  "isDonationAccount": {
                    "type": "bool"
                  },
                  "isOpeningBalanceAccount": {
                    "type": "bool"
                  }
                },
                "example": {
                  "number": 8200,
                  "example": "Donations",
                  "accountGroupId": 4,
                  "accountingPeriodId": 5,
                  "isDonationAccount": false,
                  "isOpeningBalanceAccount": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountGroupId": {
                          "type": "integer"
                        },
                        "accountingPeriodId": {
                          "type": "integer"
                        },
                        "isDonationAccount": {
                          "type": "boolean"
                        },
                        "isOpeningBalanceAccount": {
                          "type": "boolean"
                        },
                        "taxeRateId": {
                          "type": "integer"
                        },
                        "balance": {
                          "type": "number",
                          "format": "integer",
                          "description": "Current balance of account in cent."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "allowPosting": {
                              "description": "Flag, if user can use this account to post a transaction.",
                              "type": "boolean"
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "number": 8200,
                        "name": "Donations",
                        "accountGroupId": 2,
                        "accountingPeriodId": 3,
                        "isDonationAccount": true,
                        "isOpeningBalanceAccount": false,
                        "taxRateId": null,
                        "balance": 20043,
                        "permissions": {
                          "allowPosting": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete account",
        "operationId": "deleteAccount",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Accounts cannot be deleted if other data is linked to it or the accounting year is locked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accounttypes": {
      "get": {
        "summary": "Get all account types ordered by id",
        "operationId": "getAllAccountTypes",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "Get available account types ordered by sort key.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "isBalanceAccount": {
                            "type": "boolean"
                          },
                          "sortKey": {
                            "type": "integer",
                            "default": 0
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Aktiva",
                          "isBalanceAccount": true,
                          "sortKey": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new account type",
        "operationId": "createNewAccountType",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Account Type data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "isBalanceAccount"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isBalanceAccount": {
                    "type": "boolean"
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 0
                  }
                },
                "example": {
                  "name": "Aktiva",
                  "isBalanceAccount": true,
                  "sortKey": 0
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new account type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "isBalanceAccount": {
                            "type": "boolean"
                          },
                          "sortKey": {
                            "type": "integer",
                            "default": 0
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Aktiva",
                          "isBalanceAccount": true,
                          "sortKey": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accounttypes/{id}": {
      "get": {
        "summary": "Get a account type",
        "operationId": "getAccountTypeById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account type",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get account type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "isBalanceAccount": {
                          "type": "boolean"
                        },
                        "sortKey": {
                          "type": "integer",
                          "default": 0
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Aktiva",
                        "isBalanceAccount": true,
                        "sortKey": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update account type",
        "operationId": "updateAccountType",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account type",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Account Type data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "isBalanceAccount"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "isBalanceAccount": {
                    "type": "boolean"
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 0
                  }
                },
                "example": {
                  "name": "Aktiva",
                  "isBalanceAccount": true,
                  "sortKey": 0
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Account Type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "isBalanceAccount": {
                          "type": "boolean"
                        },
                        "sortKey": {
                          "type": "integer",
                          "default": 0
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Aktiva",
                        "isBalanceAccount": true,
                        "sortKey": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete account type",
        "operationId": "deleteAccountType",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account type",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be delete if account classes are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accountclasses": {
      "get": {
        "summary": "Get all account classes ordered by id",
        "operationId": "getAllAccountClasses",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "get available account classes ordered by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountTypeId": {
                            "type": "integer"
                          },
                          "includeProfitLoss": {
                            "type": "boolean",
                            "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
                          },
                          "sortKey": {
                            "type": "integer",
                            "default": 0
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Anlagevermögen",
                          "accountTypeId": 2,
                          "includeProfitLoss": false,
                          "sortKey": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new account class",
        "operationId": "createNewAccountClass",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Account classes sorted by sort key.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "accountTypeId"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountTypeId": {
                    "type": "integer"
                  },
                  "includeProfitLoss": {
                    "type": "boolean",
                    "default": false
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 0
                  }
                },
                "example": {
                  "name": "Verwaltungsvermögen",
                  "accountTypeId": 3,
                  "includeProfitLoss": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new account class",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountTypeId": {
                            "type": "integer"
                          },
                          "includeProfitLoss": {
                            "type": "boolean",
                            "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
                          },
                          "sortKey": {
                            "type": "integer",
                            "default": 0
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Anlagevermögen",
                          "accountTypeId": 2,
                          "includeProfitLoss": false,
                          "sortKey": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accountclasses/{id}": {
      "get": {
        "summary": "Get a account class",
        "operationId": "getAccountClassById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account class",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get account class",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountTypeId": {
                          "type": "integer"
                        },
                        "includeProfitLoss": {
                          "type": "boolean",
                          "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
                        },
                        "sortKey": {
                          "type": "integer",
                          "default": 0
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Anlagevermögen",
                        "accountTypeId": 2,
                        "includeProfitLoss": false,
                        "sortKey": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update account class",
        "operationId": "updateAccountClass",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account class",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Account Class data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "accountTypeId"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountTypeId": {
                    "type": "integer"
                  },
                  "includeProfitLoss": {
                    "type": "boolean",
                    "default": false
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 0
                  }
                },
                "example": {
                  "name": "Verwaltungsvermögen",
                  "accountTypeId": 3,
                  "includeProfitLoss": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Account Class",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountTypeId": {
                          "type": "integer"
                        },
                        "includeProfitLoss": {
                          "type": "boolean",
                          "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
                        },
                        "sortKey": {
                          "type": "integer",
                          "default": 0
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Anlagevermögen",
                        "accountTypeId": 2,
                        "includeProfitLoss": false,
                        "sortKey": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete account class",
        "operationId": "deleteAccountClass",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account class",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be delete if account groups are referenced.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accountgroups": {
      "get": {
        "summary": "Get all account groups ordered by id",
        "operationId": "getAllAccountGroups",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "get available account groups ordered by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountClassId": {
                            "type": "integer"
                          },
                          "isCashAssetAccount": {
                            "type": "boolean"
                          },
                          "sortKey": {
                            "type": "integer",
                            "default": 0
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Sachanlagen",
                          "accountClassId": 2,
                          "isCashAssetAccount": false,
                          "sortKey": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new account group",
        "operationId": "createNewAccountGroup",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Account groups sorted by sort key.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "accountClassId",
                  "isCashAssetAccount"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountClassId": {
                    "type": "integer"
                  },
                  "isCashAssetAccount": {
                    "type": "boolean"
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 0
                  }
                },
                "example": {
                  "name": "Neue Konto gruppe",
                  "accountClassId": 3,
                  "isCashAssetAccount": false,
                  "sortKey": 0
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "new account group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "accountClassId": {
                            "type": "integer"
                          },
                          "isCashAssetAccount": {
                            "type": "boolean"
                          },
                          "sortKey": {
                            "type": "integer",
                            "default": 0
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Sachanlagen",
                          "accountClassId": 2,
                          "isCashAssetAccount": false,
                          "sortKey": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/accountgroups/{id}": {
      "get": {
        "summary": "Get a account group",
        "operationId": "getAccountGroupById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get account group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountClassId": {
                          "type": "integer"
                        },
                        "isCashAssetAccount": {
                          "type": "boolean"
                        },
                        "sortKey": {
                          "type": "integer",
                          "default": 0
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Sachanlagen",
                        "accountClassId": 2,
                        "isCashAssetAccount": false,
                        "sortKey": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update account group",
        "operationId": "updateAccountGroup",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Account Group data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "accountClassId",
                  "isCashAssetAccount"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "accountClassId": {
                    "type": "integer"
                  },
                  "isCashAssetAccount": {
                    "type": "boolean"
                  },
                  "sortKey": {
                    "type": "integer",
                    "default": 0
                  }
                },
                "example": {
                  "name": "Neue Konto gruppe",
                  "accountClassId": 3,
                  "isCashAssetAccount": false,
                  "sortKey": 0
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Account Group",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountClassId": {
                          "type": "integer"
                        },
                        "isCashAssetAccount": {
                          "type": "boolean"
                        },
                        "sortKey": {
                          "type": "integer",
                          "default": 0
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Sachanlagen",
                        "accountClassId": 2,
                        "isCashAssetAccount": false,
                        "sortKey": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete account group",
        "operationId": "deleteAccountGroup",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of account group",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be deleted if accounts are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/cashdiscounts": {
      "get": {
        "summary": "Get all cash discounts ordered by id",
        "operationId": "getAllCashDiscounts",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get available cash discounts ordered by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "rate": {
                            "type": "number",
                            "format": "float"
                          },
                          "note": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "integer"
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "rate": 0.02,
                          "note": "Skonto 2%",
                          "accountId": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new cash discout",
        "operationId": "createCashDiscount",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Cash discount data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "rate",
                  "note",
                  "accountId"
                ],
                "properties": {
                  "rate": {
                    "type": "number",
                    "format": "float"
                  },
                  "note": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "rate": 0.03,
                  "note": "Skonto 3%",
                  "accountId": 3
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return new cash discout with ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "rate": {
                          "type": "number",
                          "format": "float"
                        },
                        "note": {
                          "type": "string"
                        },
                        "accountId": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "rate": 0.02,
                        "note": "Skonto 2%",
                        "accountId": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/cashdiscounts/{id}": {
      "get": {
        "summary": "Get a cash discount",
        "operationId": "getCashDiscount",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of cash discount",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get cash discount",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "rate": {
                          "type": "number",
                          "format": "float"
                        },
                        "note": {
                          "type": "string"
                        },
                        "accountId": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "rate": 0.02,
                        "note": "Skonto 2%",
                        "accountId": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update cash discount",
        "operationId": "updateCashDiscount",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of cash discount",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "cash discount data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "rate",
                  "note",
                  "accountId"
                ],
                "properties": {
                  "rate": {
                    "type": "number",
                    "format": "float"
                  },
                  "note": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "rate": 0.03,
                  "note": "Skonto 3%",
                  "accountId": 3
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated cash discount",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "rate": {
                          "type": "number",
                          "format": "float"
                        },
                        "note": {
                          "type": "string"
                        },
                        "accountId": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "rate": 0.02,
                        "note": "Skonto 2%",
                        "accountId": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete cash discount",
        "operationId": "deleteCashDiscount",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of cash discount",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be delete if transactions are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/costcenters": {
      "get": {
        "summary": "Get all cost centers ordered by accounting period and number ascending",
        "operationId": "getAllCostCenters",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get available cost centers ordered by accounting period and number ascending",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "budget": {
                            "type": "number",
                            "format": "integer",
                            "description": "Budget is in cent."
                          },
                          "budgetBalance": {
                            "type": "number",
                            "format": "integer",
                            "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
                          },
                          "budgetSpent": {
                            "type": "number",
                            "format": "integer",
                            "description": "Cost Center Expences. (Outcome - Income). In cent"
                          },
                          "budgetLastPeriod": {
                            "type": "number",
                            "format": "integer",
                            "description": "Budget for the cost center with the same number in the previous accounting period."
                          },
                          "accountingPeriodId": {
                            "type": "integer"
                          },
                          "group": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "group"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "note": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "Smallgroup Smith",
                              "domainType": "group",
                              "domainIdentifier": "42",
                              "apiUrl": "http://churchtools.test/api/groups/42",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "note": "This group is aweasome"
                                }
                              ]
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "number": 802,
                          "name": "Kostenstelle Sonstige",
                          "accountId": 2,
                          "group": {
                            "title": "Smallgroup Smith",
                            "domainType": "group",
                            "domainIdentifier": "42",
                            "apiUrl": "http://churchtools.test/api/groups/42",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "note": "This group is aweasome"
                              }
                            ]
                          },
                          "budget": 3200,
                          "budgetBalance": 144
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new cost center",
        "operationId": "createCostCenter",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "cost center data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "name",
                  "accountId"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "budget": {
                    "type": "number",
                    "format": "integer",
                    "description": "Provide budget in cent."
                  },
                  "accountingPeriodId": {
                    "type": "integer"
                  },
                  "groupId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "number": 803,
                  "name": "Kostenstelle Jugend",
                  "accountId": 4,
                  "groupId": 5,
                  "budget": 2300
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return new cost center with ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "budget": {
                          "type": "number",
                          "format": "integer",
                          "description": "Budget is in cent."
                        },
                        "budgetBalance": {
                          "type": "number",
                          "format": "integer",
                          "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
                        },
                        "budgetSpent": {
                          "type": "number",
                          "format": "integer",
                          "description": "Cost Center Expences. (Outcome - Income). In cent"
                        },
                        "budgetLastPeriod": {
                          "type": "number",
                          "format": "integer",
                          "description": "Budget for the cost center with the same number in the previous accounting period."
                        },
                        "accountingPeriodId": {
                          "type": "integer"
                        },
                        "group": {
                          "type": "object",
                          "properties": {
                            "titel": {
                              "type": "string"
                            },
                            "domainType": {
                              "type": "string",
                              "enum": [
                                "group"
                              ]
                            },
                            "domainIdentifier": {
                              "type": "string"
                            },
                            "apiUrl": {
                              "type": "string"
                            },
                            "frontendUrl": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "note": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "example": {
                            "title": "Smallgroup Smith",
                            "domainType": "group",
                            "domainIdentifier": "42",
                            "apiUrl": "http://churchtools.test/api/groups/42",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "note": "This group is aweasome"
                              }
                            ]
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "number": 802,
                        "name": "Kostenstelle Sonstige",
                        "accountId": 2,
                        "group": {
                          "title": "Smallgroup Smith",
                          "domainType": "group",
                          "domainIdentifier": "42",
                          "apiUrl": "http://churchtools.test/api/groups/42",
                          "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                          "imageUrl": "",
                          "domainAttributes": [
                            {
                              "note": "This group is aweasome"
                            }
                          ]
                        },
                        "budget": 3200,
                        "budgetBalance": 144
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/costcenters/{id}": {
      "get": {
        "summary": "Get a cost center",
        "operationId": "getCostCenter",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of cost center",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get cost center",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "budget": {
                          "type": "number",
                          "format": "integer",
                          "description": "Budget is in cent."
                        },
                        "budgetBalance": {
                          "type": "number",
                          "format": "integer",
                          "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
                        },
                        "budgetSpent": {
                          "type": "number",
                          "format": "integer",
                          "description": "Cost Center Expences. (Outcome - Income). In cent"
                        },
                        "budgetLastPeriod": {
                          "type": "number",
                          "format": "integer",
                          "description": "Budget for the cost center with the same number in the previous accounting period."
                        },
                        "accountingPeriodId": {
                          "type": "integer"
                        },
                        "group": {
                          "type": "object",
                          "properties": {
                            "titel": {
                              "type": "string"
                            },
                            "domainType": {
                              "type": "string",
                              "enum": [
                                "group"
                              ]
                            },
                            "domainIdentifier": {
                              "type": "string"
                            },
                            "apiUrl": {
                              "type": "string"
                            },
                            "frontendUrl": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "note": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "example": {
                            "title": "Smallgroup Smith",
                            "domainType": "group",
                            "domainIdentifier": "42",
                            "apiUrl": "http://churchtools.test/api/groups/42",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "note": "This group is aweasome"
                              }
                            ]
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "number": 802,
                        "name": "Kostenstelle Sonstige",
                        "accountId": 2,
                        "group": {
                          "title": "Smallgroup Smith",
                          "domainType": "group",
                          "domainIdentifier": "42",
                          "apiUrl": "http://churchtools.test/api/groups/42",
                          "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                          "imageUrl": "",
                          "domainAttributes": [
                            {
                              "note": "This group is aweasome"
                            }
                          ]
                        },
                        "budget": 3200,
                        "budgetBalance": 144
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update cost center",
        "operationId": "updateCostCenter",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of cost center",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "cost center data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "name",
                  "accountId"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "budget": {
                    "type": "number",
                    "format": "integer",
                    "description": "Provide budget in cent."
                  },
                  "accountingPeriodId": {
                    "type": "integer"
                  },
                  "groupId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "number": 803,
                  "name": "Kostenstelle Jugend",
                  "accountId": 4,
                  "groupId": 5,
                  "budget": 2300
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated cost center",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "budget": {
                          "type": "number",
                          "format": "integer",
                          "description": "Budget is in cent."
                        },
                        "budgetBalance": {
                          "type": "number",
                          "format": "integer",
                          "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
                        },
                        "budgetSpent": {
                          "type": "number",
                          "format": "integer",
                          "description": "Cost Center Expences. (Outcome - Income). In cent"
                        },
                        "budgetLastPeriod": {
                          "type": "number",
                          "format": "integer",
                          "description": "Budget for the cost center with the same number in the previous accounting period."
                        },
                        "accountingPeriodId": {
                          "type": "integer"
                        },
                        "group": {
                          "type": "object",
                          "properties": {
                            "titel": {
                              "type": "string"
                            },
                            "domainType": {
                              "type": "string",
                              "enum": [
                                "group"
                              ]
                            },
                            "domainIdentifier": {
                              "type": "string"
                            },
                            "apiUrl": {
                              "type": "string"
                            },
                            "frontendUrl": {
                              "type": "string"
                            },
                            "imageUrl": {
                              "type": "string"
                            },
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "note": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "example": {
                            "title": "Smallgroup Smith",
                            "domainType": "group",
                            "domainIdentifier": "42",
                            "apiUrl": "http://churchtools.test/api/groups/42",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "note": "This group is aweasome"
                              }
                            ]
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "number": 802,
                        "name": "Kostenstelle Sonstige",
                        "accountId": 2,
                        "group": {
                          "title": "Smallgroup Smith",
                          "domainType": "group",
                          "domainIdentifier": "42",
                          "apiUrl": "http://churchtools.test/api/groups/42",
                          "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                          "imageUrl": "",
                          "domainAttributes": [
                            {
                              "note": "This group is aweasome"
                            }
                          ]
                        },
                        "budget": 3200,
                        "budgetBalance": 144
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete cost center",
        "operationId": "deleteCostCenter",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of cost center",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be delete if transactions and/or transaction purposes are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/donators": {
      "get": {
        "summary": "Get all donators including their donation information (e.g. donation amount)",
        "operationId": "getAllDonators",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Default is `name`.",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "count",
                "last",
                "sum"
              ]
            }
          },
          {
            "name": "order_direction",
            "in": "query",
            "description": "Way of direction: ascending or descending",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show page in pagenation. If empty, start at first page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get available donators",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "persons": {
                            "type": "array",
                            "description": "Contains either one element (a single donator) or two elements (donator and their spouse).",
                            "items": {
                              "type": "object",
                              "properties": {
                                "titel": {
                                  "type": "string"
                                },
                                "domainType": {
                                  "type": "string",
                                  "enum": [
                                    "person"
                                  ]
                                },
                                "domainIdentifier": {
                                  "type": "string"
                                },
                                "apiUrl": {
                                  "type": "string"
                                },
                                "frontendUrl": {
                                  "type": "string"
                                },
                                "imageUrl": {
                                  "type": "string"
                                },
                                "domainAttributes": {
                                  "type": "object",
                                  "properties": {
                                    "firstName": {
                                      "type": "string"
                                    },
                                    "lastName": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "example": {
                                "title": "John Smith",
                                "domainType": "person",
                                "domainIdentifier": "116",
                                "apiUrl": "http://churchtools.test/api/persons/116",
                                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                "imageUrl": "",
                                "domainAttributes": [
                                  {
                                    "firstName": "John",
                                    "lastName": "Smith"
                                  }
                                ]
                              }
                            }
                          },
                          "count": {
                            "type": "integer",
                            "description": "Total number of donations in the specified accounting period."
                          },
                          "sum": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "lastDonationDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "lastDonationAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "Count of donators on this current page.",
                          "type": "integer",
                          "example": 10
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "description": "Total number of results.",
                              "example": 21
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current page.",
                              "example": 1
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Number of results per page.",
                              "example": 10
                            },
                            "lastPage": {
                              "type": "integer",
                              "description": "Number of last page.",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/donationreceipt": {
      "get": {
        "summary": "Get donation receipt PDFs (cover letter and attachment)",
        "operationId": "getDonationReceipt",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Accounting period to create the donation receipt for",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "donator_id",
            "in": "query",
            "description": "ID of the donator person to create the donation receipt for",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "donator_spouse_id",
            "in": "query",
            "description": "ID of the donator spouse to create the donation receipt for",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 51
            }
          }
        ],
        "responses": {
          "200": {
            "description": "URLs of the generated PDFs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "coverLetter": {
                          "description": "URL to the cover letter of the donation receipt",
                          "type": "string",
                          "example": "https://example.org/sites/default/files/downloader/t3wxiDIe00xcuXQjCbWl.pdf"
                        },
                        "attachment": {
                          "description": "URL to the attachment of the donation receipt",
                          "type": "string",
                          "example": "https://example.org/sites/default/files/downloader/4zqEyozpDElNMVYNdrr7.pdf"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/taxtypes": {
      "get": {
        "summary": "Get all tax types",
        "operationId": "getAllTaxTypes",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "get available tax types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sortKey": {
                            "type": "integer"
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Umsatzsteuer",
                          "sortKey": 2
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new tax type",
        "operationId": "createTaxType",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "tax type data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "sortKey"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Vergnügensteuer",
                  "sortKey": 3
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return new tax type with ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "sortKey": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Umsatzsteuer",
                        "sortKey": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/taxtypes/{id}": {
      "get": {
        "summary": "Get a tax type",
        "operationId": "getTaxType",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tax type",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get tax type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "sortKey": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Umsatzsteuer",
                        "sortKey": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update tax type",
        "operationId": "updateTaxType",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tax type",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "tax type data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "sortKey"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Vergnügensteuer",
                  "sortKey": 3
                }
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "sortKey"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "sortKey": {
                    "type": "integer"
                  }
                },
                "example": {
                  "name": "Vergnügensteuer",
                  "sortKey": 3
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated tax type",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "sortKey": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Umsatzsteuer",
                        "sortKey": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete tax type",
        "operationId": "deleteTaxType",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tax type",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be delete if tax rates with this type exist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/taxrates": {
      "get": {
        "summary": "Get all tax rates ordered by id",
        "operationId": "getAllTaxRates",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get available tax rates ordered by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "taxTypeId": {
                            "type": "integer"
                          },
                          "rate": {
                            "type": "number",
                            "format": "float"
                          },
                          "note": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "integer"
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "taxTypeId": 2,
                          "rate": 0.19,
                          "note": "Ust. 19%",
                          "accountId": 3
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new tax rate",
        "operationId": "createTaxRate",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Tax rate data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "taxTypeId",
                  "rate",
                  "note",
                  "accountId"
                ],
                "properties": {
                  "taxTypeId": {
                    "type": "integer"
                  },
                  "rate": {
                    "type": "number",
                    "format": "float"
                  },
                  "note": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "taxTypeId": 4,
                  "rate": 0.07,
                  "note": "Ust. 7%",
                  "accountId": 5
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "return new tax rate with ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "taxTypeId": {
                          "type": "integer"
                        },
                        "rate": {
                          "type": "number",
                          "format": "float"
                        },
                        "note": {
                          "type": "string"
                        },
                        "accountId": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "taxTypeId": 2,
                        "rate": 0.19,
                        "note": "Ust. 19%",
                        "accountId": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/taxrates/{id}": {
      "get": {
        "summary": "Get a tax rate",
        "operationId": "getTaxRate",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tax rate",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get tax rate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "taxTypeId": {
                          "type": "integer"
                        },
                        "rate": {
                          "type": "number",
                          "format": "float"
                        },
                        "note": {
                          "type": "string"
                        },
                        "accountId": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "taxTypeId": 2,
                        "rate": 0.19,
                        "note": "Ust. 19%",
                        "accountId": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update tax rate",
        "operationId": "updateTaxRate",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tax rate",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Tax rate data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "taxTypeId",
                  "rate",
                  "note",
                  "accountId"
                ],
                "properties": {
                  "taxTypeId": {
                    "type": "integer"
                  },
                  "rate": {
                    "type": "number",
                    "format": "float"
                  },
                  "note": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  }
                },
                "example": {
                  "taxTypeId": 4,
                  "rate": 0.07,
                  "note": "Ust. 7%",
                  "accountId": 5
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated tax rate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "taxTypeId": {
                          "type": "integer"
                        },
                        "rate": {
                          "type": "number",
                          "format": "float"
                        },
                        "note": {
                          "type": "string"
                        },
                        "accountId": {
                          "type": "integer"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "taxTypeId": 2,
                        "rate": 0.19,
                        "note": "Ust. 19%",
                        "accountId": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete tax rate",
        "operationId": "deleteTaxRate",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of tax rate",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be deleted if accounts or transactions are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/transactions": {
      "get": {
        "summary": "Get all transaction",
        "operationId": "getAllTransactions",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          },
          {
            "name": "created_pid",
            "in": "query",
            "description": "Filter by person ID. Get all transactions the person has created. But only show those the user can see.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "cost_center_ids",
            "in": "query",
            "description": "Filter by cost centers.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "donator_ids",
            "in": "query",
            "description": "Filter by donator or donator spouse. Provide an array of person ids.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "account_ids",
            "in": "query",
            "description": "Filter by account/contra account. All transactions match, where either account or contra account is in the list.",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          },
          {
            "name": "is_donation",
            "in": "query",
            "description": "Filter by donations. `true` = Only donations, `false` = Other than donation.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_income",
            "in": "query",
            "description": "Filter transactions by income or outcome transactions. An account group has a flag `cash asset account` to indicate accounts for income/outcome.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Show transactions after this date.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Show transactions before this date.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "is_immutable",
            "in": "query",
            "description": "Filter transactions, whether transaction is immutable.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "description": "Default is `date`. Order transactions either by document date, amount, or modified date. For `date` and `amount` a second sorting happens by modified. The order direction for modified date is the same as for date and amount.",
            "schema": {
              "type": "string",
              "enum": [
                "date",
                "amount",
                "modified"
              ]
            }
          },
          {
            "name": "order_direction",
            "in": "query",
            "description": "Way of direction: ascending or descending",
            "schema": {
              "type": "string",
              "enum": [
                "ASC",
                "DESC"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number to show page in pagenation. If empty, start at first page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results per page.",
            "schema": {
              "type": "integer",
              "example": 10,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get available transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "documentDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "documentNumber": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "integer"
                          },
                          "contraAccountId": {
                            "type": "integer"
                          },
                          "amount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "note": {
                            "type": "string"
                          },
                          "isImmutable": {
                            "type": "boolean",
                            "description": "If a transaction is immutable, no field can be change or deleted."
                          },
                          "costCenterId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "donator": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "donatorSpouse": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "splitTransactionId": {
                            "type": "integer"
                          },
                          "taxRateId": {
                            "type": "integer"
                          },
                          "taxAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "cashDiscountId": {
                            "type": "integer"
                          },
                          "cashDiscountAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "description": "Flag if user can edit this transaction",
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "documentDate": "2019-01-14T00:00:00.000Z",
                          "documentNumber": "3/4",
                          "accountId": 2,
                          "contraAccountId": 3,
                          "amount": 5678,
                          "note": "This is a transaction",
                          "isImmutable": false,
                          "costCenterId": 4,
                          "donator": {
                            "title": "John Smith",
                            "domainType": "person",
                            "domainIdentifier": "116",
                            "apiUrl": "http://churchtools.test/api/persons/116",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "firstName": "John",
                                "lastName": "Smith"
                              }
                            ]
                          },
                          "permissions": {
                            "canEdit": true
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "description": "Count of transactions on this current page.",
                          "type": "integer",
                          "example": 10
                        },
                        "all": {
                          "description": "Count of all transactions, which the user can see within that accounting period but without any special filters. I.e. if only `accounting_period_id` is given, `all` and `total` are the same number.",
                          "type": "integer",
                          "example": 144
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "integer",
                              "description": "Total number of results.",
                              "example": 21
                            },
                            "current": {
                              "type": "integer",
                              "description": "Current page.",
                              "example": 1
                            },
                            "limit": {
                              "type": "integer",
                              "description": "Number of results per page.",
                              "example": 10
                            },
                            "lastPage": {
                              "type": "integer",
                              "description": "Number of last page.",
                              "example": 3
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new transaction",
        "operationId": "createNewTransaction",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Transaction data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "documentDate",
                  "documentNumber",
                  "accountId",
                  "contraAccountId",
                  "amount",
                  "note"
                ],
                "properties": {
                  "documentDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "documentNumber": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  },
                  "contraAccountId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number",
                    "format": "integer",
                    "description": "Value is in cent."
                  },
                  "note": {
                    "type": "string"
                  },
                  "costCenterId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "donatorId": {
                    "type": "integer"
                  },
                  "donatorSpouseId": {
                    "type": "integer"
                  },
                  "splitTransactionId": {
                    "type": "integer"
                  },
                  "taxRateId": {
                    "type": "integer"
                  },
                  "taxAmount": {
                    "type": "number",
                    "format": "integer",
                    "description": "Value is in cent."
                  },
                  "cashDiscountId": {
                    "type": "integer"
                  },
                  "cashDiscountAmount": {
                    "type": "number",
                    "format": "integer",
                    "description": "Value is in cent."
                  }
                },
                "example": {
                  "documentDate": "2019-01-14T00:00:00.000Z",
                  "documentNumber": "4/4",
                  "accountId": 10,
                  "contraAccountId": 11,
                  "amount": 7812,
                  "note": "This is a transaction",
                  "costCenterId": 12,
                  "donatorId": 13,
                  "donatorSpouseId": 14
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "created transaction with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "documentDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "documentNumber": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "integer"
                          },
                          "contraAccountId": {
                            "type": "integer"
                          },
                          "amount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "note": {
                            "type": "string"
                          },
                          "isImmutable": {
                            "type": "boolean",
                            "description": "If a transaction is immutable, no field can be change or deleted."
                          },
                          "costCenterId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "donator": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "donatorSpouse": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "splitTransactionId": {
                            "type": "integer"
                          },
                          "taxRateId": {
                            "type": "integer"
                          },
                          "taxAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "cashDiscountId": {
                            "type": "integer"
                          },
                          "cashDiscountAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "description": "Flag if user can edit this transaction",
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "documentDate": "2019-01-14T00:00:00.000Z",
                          "documentNumber": "3/4",
                          "accountId": 2,
                          "contraAccountId": 3,
                          "amount": 5678,
                          "note": "This is a transaction",
                          "isImmutable": false,
                          "costCenterId": 4,
                          "donator": {
                            "title": "John Smith",
                            "domainType": "person",
                            "domainIdentifier": "116",
                            "apiUrl": "http://churchtools.test/api/persons/116",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "firstName": "John",
                                "lastName": "Smith"
                              }
                            ]
                          },
                          "permissions": {
                            "canEdit": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "patch": {
        "summary": "Transaction Batch Processing",
        "operationId": "batchTransaction",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "affectedRows": {
                          "type": "number",
                          "example": 42,
                          "description": "Number of affected rows, which could be resolved by given filters."
                        },
                        "changedRows": {
                          "type": "number",
                          "example": 21,
                          "description": "Number of database rows, which were changed."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Batch API for Transactions. The batch API needs two informations sets. Firstly the `changeset`, which holds the information for the batch command. Either a field that needs to be updated or a trigger keyword to start a command. Secondly, a set of `filters`. Filters are either transaction filters, which resolve to a list of transaction IDs, or you can explicitly state a list of IDs to include or exclude from the batch command.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "changeset": {
                    "type": "object",
                    "description": "Fields to change.",
                    "properties": {
                      "isImmutable": {
                        "type": "boolean",
                        "description": "Make All Provided Transactions (explicit or via filters) Immutable.",
                        "example": true
                      }
                    }
                  },
                  "filters": {
                    "description": "List of filters",
                    "anyOf": [
                      {
                        "description": "Transaction Filter",
                        "properties": {
                          "accountingPeriodId": {
                            "type": "integer",
                            "description": "Filter by Accounting Period",
                            "example": 1
                          },
                          "createdPid": {
                            "type": "integer",
                            "description": "Filter by person ID. Get all transactions the person has created. But only show those the user can see."
                          },
                          "costCenterIds": {
                            "type": "array",
                            "description": "Filter by Cost Centers.",
                            "items": {
                              "type": "number"
                            }
                          },
                          "donatorIds": {
                            "type": "array",
                            "description": "Filter by donator or donator spouse. Provide an array of person ids.",
                            "items": {
                              "type": "number"
                            }
                          },
                          "accountIds": {
                            "type": "array",
                            "description": "Filter by account/contra account. All transactions match, where either account or contra account is in the list.",
                            "items": {
                              "type": "number"
                            }
                          },
                          "isDonation": {
                            "type": "boolean",
                            "description": "Filter by donations. `true` = Only donations, `false` = Other than donation."
                          },
                          "isIncome": {
                            "type": "boolean",
                            "description": "Filter transactions by income or outcome transactions. An account group has a flag `cash asset account` to indicate accounts for income/outcome."
                          },
                          "startDate": {
                            "type": "string",
                            "description": "Show transactions after this date.",
                            "format": "date"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Show transactions before this date."
                          },
                          "isImmutable": {
                            "type": "boolean",
                            "description": "Filter transactions, whether transaction is immutable."
                          }
                        },
                        "required": [
                          "accountingPeriodId"
                        ]
                      },
                      {
                        "description": "Include explicit IDs",
                        "properties": {
                          "include": {
                            "type": "array",
                            "description": "List of Transaction IDs. Only those Transactions are updated.",
                            "example": [
                              21,
                              42
                            ],
                            "items": {
                              "type": "number"
                            }
                          },
                          "accountingPeriodId": {
                            "type": "number",
                            "example": 1,
                            "description": "Filter by Accounting Period"
                          }
                        },
                        "required": [
                          "include",
                          "accountingPeriodId"
                        ]
                      },
                      {
                        "description": "Exclude specific IDs",
                        "properties": {
                          "exclude": {
                            "type": "array",
                            "description": "List of Transaction IDs. All Transactions except this list of IDs are updated in the given Accouting Period.",
                            "items": {
                              "type": "number"
                            }
                          },
                          "accountingPeriodId": {
                            "type": "number",
                            "example": 1,
                            "description": "Filter by Accounting Period"
                          }
                        },
                        "required": [
                          "exclude",
                          "accountingPeriodId"
                        ]
                      }
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "changeset",
                  "filters"
                ]
              }
            }
          },
          "description": "Batch information consists of changeset and filters."
        },
        "tags": [
          "Finance"
        ]
      }
    },
    "/finance/transactions/{id}": {
      "get": {
        "summary": "Get a transaction",
        "operationId": "getTransactionById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "documentDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "documentNumber": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "integer"
                          },
                          "contraAccountId": {
                            "type": "integer"
                          },
                          "amount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "note": {
                            "type": "string"
                          },
                          "isImmutable": {
                            "type": "boolean",
                            "description": "If a transaction is immutable, no field can be change or deleted."
                          },
                          "costCenterId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "donator": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "donatorSpouse": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "splitTransactionId": {
                            "type": "integer"
                          },
                          "taxRateId": {
                            "type": "integer"
                          },
                          "taxAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "cashDiscountId": {
                            "type": "integer"
                          },
                          "cashDiscountAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "description": "Flag if user can edit this transaction",
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "documentDate": "2019-01-14T00:00:00.000Z",
                          "documentNumber": "3/4",
                          "accountId": 2,
                          "contraAccountId": 3,
                          "amount": 5678,
                          "note": "This is a transaction",
                          "isImmutable": false,
                          "costCenterId": 4,
                          "donator": {
                            "title": "John Smith",
                            "domainType": "person",
                            "domainIdentifier": "116",
                            "apiUrl": "http://churchtools.test/api/persons/116",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "firstName": "John",
                                "lastName": "Smith"
                              }
                            ]
                          },
                          "permissions": {
                            "canEdit": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update transaction",
        "operationId": "updateTransaction",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "Transaction data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "documentDate",
                  "documentNumber",
                  "accountId",
                  "contraAccountId",
                  "amount",
                  "note",
                  "costCenterId"
                ],
                "properties": {
                  "documentDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "documentNumber": {
                    "type": "string"
                  },
                  "accountId": {
                    "type": "integer"
                  },
                  "contraAccountId": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "number",
                    "format": "integer",
                    "description": "Value is in cent."
                  },
                  "note": {
                    "type": "string"
                  },
                  "costCenterId": {
                    "type": "integer"
                  },
                  "donatorId": {
                    "type": "integer"
                  },
                  "splitTransactionId": {
                    "type": "integer"
                  },
                  "taxRateId": {
                    "type": "integer"
                  },
                  "taxAmount": {
                    "type": "number",
                    "format": "integer",
                    "description": "Value is in cent."
                  },
                  "cashDiscountId": {
                    "type": "integer"
                  },
                  "cashDiscountAmount": {
                    "type": "number",
                    "format": "integer",
                    "description": "Value is in cent."
                  },
                  "isImmutable": {
                    "type": "boolean",
                    "default": false,
                    "description": "If `true` this transaction is immutable and cannot be edited or deleted."
                  }
                },
                "example": {
                  "documentDate": "2019-01-14T00:00:00.000Z",
                  "documentNumber": "4/4",
                  "accountId": 10,
                  "contraAccountId": 11,
                  "amount": 7812,
                  "note": "This is a transaction",
                  "costCenterId": 12,
                  "donatorId": 13,
                  "isImmutable": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "documentDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "documentNumber": {
                            "type": "string"
                          },
                          "accountId": {
                            "type": "integer"
                          },
                          "contraAccountId": {
                            "type": "integer"
                          },
                          "amount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "note": {
                            "type": "string"
                          },
                          "isImmutable": {
                            "type": "boolean",
                            "description": "If a transaction is immutable, no field can be change or deleted."
                          },
                          "costCenterId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "donator": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "donatorSpouse": {
                            "type": "object",
                            "properties": {
                              "titel": {
                                "type": "string"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "person"
                                ]
                              },
                              "domainIdentifier": {
                                "type": "string"
                              },
                              "apiUrl": {
                                "type": "string"
                              },
                              "frontendUrl": {
                                "type": "string"
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string"
                                  },
                                  "lastName": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "example": {
                              "title": "John Smith",
                              "domainType": "person",
                              "domainIdentifier": "116",
                              "apiUrl": "http://churchtools.test/api/persons/116",
                              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                              "imageUrl": "",
                              "domainAttributes": [
                                {
                                  "firstName": "John",
                                  "lastName": "Smith"
                                }
                              ]
                            }
                          },
                          "splitTransactionId": {
                            "type": "integer"
                          },
                          "taxRateId": {
                            "type": "integer"
                          },
                          "taxAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "cashDiscountId": {
                            "type": "integer"
                          },
                          "cashDiscountAmount": {
                            "type": "number",
                            "format": "integer",
                            "description": "Value is in cent."
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "description": "Flag if user can edit this transaction",
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "documentDate": "2019-01-14T00:00:00.000Z",
                          "documentNumber": "3/4",
                          "accountId": 2,
                          "contraAccountId": 3,
                          "amount": 5678,
                          "note": "This is a transaction",
                          "isImmutable": false,
                          "costCenterId": 4,
                          "donator": {
                            "title": "John Smith",
                            "domainType": "person",
                            "domainIdentifier": "116",
                            "apiUrl": "http://churchtools.test/api/persons/116",
                            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                            "imageUrl": "",
                            "domainAttributes": [
                              {
                                "firstName": "John",
                                "lastName": "Smith"
                              }
                            ]
                          },
                          "permissions": {
                            "canEdit": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete transaction",
        "operationId": "deleteTransaction",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/transactionpurposes": {
      "get": {
        "summary": "Get all transaction purposes",
        "operationId": "getAllTransactionPurposes",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "get available transaction purposes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "costCenterId": {
                            "type": "integer"
                          },
                          "purposeAccountId": {
                            "type": "integer",
                            "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
                          },
                          "sortKey": {
                            "type": "integer"
                          },
                          "isIncome": {
                            "type": "boolean"
                          },
                          "accountIds": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Der Zweck heiligt die Mittel",
                          "costCenterId": 2,
                          "purposeAccountId": 3,
                          "sortKey": 4,
                          "accountIds": [
                            1,
                            2,
                            3
                          ],
                          "isIncome": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "post": {
        "summary": "Create new transaction purpose",
        "operationId": "createNewTransactionPurpose",
        "tags": [
          "Finance"
        ],
        "requestBody": {
          "description": "Transaction purpose data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "costCenterId",
                  "purposeAccountId",
                  "sortKey",
                  "isIncome"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "costCenterId": {
                    "type": "integer"
                  },
                  "purposeAccountId": {
                    "type": "integer"
                  },
                  "sortKey": {
                    "type": "integer"
                  },
                  "isIncome": {
                    "type": "boolean"
                  },
                  "accountIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "name": "Für was steht der Zweck nochmal?",
                  "costCenterId": 5,
                  "purposeAccountId": 6,
                  "sortKey": 7,
                  "isIncome": true,
                  "accountIds": [
                    4,
                    5,
                    6
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "get created transaction purpose with id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "costCenterId": {
                            "type": "integer"
                          },
                          "purposeAccountId": {
                            "type": "integer",
                            "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
                          },
                          "sortKey": {
                            "type": "integer"
                          },
                          "isIncome": {
                            "type": "boolean"
                          },
                          "accountIds": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        },
                        "example": {
                          "id": 1,
                          "name": "Der Zweck heiligt die Mittel",
                          "costCenterId": 2,
                          "purposeAccountId": 3,
                          "sortKey": 4,
                          "accountIds": [
                            1,
                            2,
                            3
                          ],
                          "isIncome": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/transactionpurposes/{id}": {
      "get": {
        "summary": "Get a transaction purpose",
        "operationId": "getTransactionPurposeById",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction purpose",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get transaction purpose",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "costCenterId": {
                          "type": "integer"
                        },
                        "purposeAccountId": {
                          "type": "integer",
                          "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
                        },
                        "sortKey": {
                          "type": "integer"
                        },
                        "isIncome": {
                          "type": "boolean"
                        },
                        "accountIds": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Der Zweck heiligt die Mittel",
                        "costCenterId": 2,
                        "purposeAccountId": 3,
                        "sortKey": 4,
                        "accountIds": [
                          1,
                          2,
                          3
                        ],
                        "isIncome": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "put": {
        "summary": "Update transaction purpose",
        "operationId": "updateTransactionPurpose",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction purpose",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "requestBody": {
          "description": "transaction purpose data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "costCenterId",
                  "purposeAccountId",
                  "sortKey",
                  "isIncome"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "costCenterId": {
                    "type": "integer"
                  },
                  "purposeAccountId": {
                    "type": "integer"
                  },
                  "sortKey": {
                    "type": "integer"
                  },
                  "isIncome": {
                    "type": "boolean"
                  },
                  "accountIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                },
                "example": {
                  "name": "Für was steht der Zweck nochmal?",
                  "costCenterId": 5,
                  "purposeAccountId": 6,
                  "sortKey": 7,
                  "isIncome": true,
                  "accountIds": [
                    4,
                    5,
                    6
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated transaction purpose",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "costCenterId": {
                          "type": "integer"
                        },
                        "purposeAccountId": {
                          "type": "integer",
                          "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
                        },
                        "sortKey": {
                          "type": "integer"
                        },
                        "isIncome": {
                          "type": "boolean"
                        },
                        "accountIds": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Der Zweck heiligt die Mittel",
                        "costCenterId": 2,
                        "purposeAccountId": 3,
                        "sortKey": 4,
                        "accountIds": [
                          1,
                          2,
                          3
                        ],
                        "isIncome": true
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      },
      "delete": {
        "summary": "Delete transaction purpose",
        "operationId": "deleteTransactionPurpose",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of transaction purpose",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "dry_run",
            "in": "query",
            "description": "If set to true, the deletion is simulated but nothing will be deleted.",
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful deleted"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "409": {
            "description": "Cannot be deleted if transactions or cost centers are linked.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "deleteable": {
                          "type": "boolean"
                        },
                        "references": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tableName": {
                                "type": "string",
                                "description": "Table name, with reference / foreign key constraint."
                              },
                              "columnName": {
                                "type": "string",
                                "description": "Column name of the reference / foreign key."
                              },
                              "count": {
                                "type": "integer",
                                "description": "Number of references in that table."
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of reference. 'ENTRY' (entry links to this object) or 'REFERENCE' (this object has a foreign key to this table)"
                              },
                              "blocksDeletion": {
                                "type": "boolean",
                                "description": "Indicator if those references are blocking the deletion."
                              }
                            },
                            "example": [
                              {
                                "tableName": "cf_transactions",
                                "columnName": "account_id",
                                "count": 1,
                                "type": "ENTRY",
                                "blocksDeletion": false
                              },
                              {
                                "tableName": "cf_transactions",
                                "columnName": "contra_account_id",
                                "count": 15,
                                "type": "ENTRY",
                                "blocksDeletion": true
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/templates": {
      "get": {
        "summary": "Get all finance templates",
        "operationId": "getAllFinanceTemplates",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "get finance templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "filename": {
                        "type": "string"
                      },
                      "fileUrl": {
                        "type": "string"
                      },
                      "imageUrl": {
                        "type": "string"
                      },
                      "relativeUrl": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "showOnlyWhenEditable": {
                        "type": "boolean"
                      },
                      "securityLevelId": {
                        "type": "integer"
                      },
                      "size": {
                        "type": "integer",
                        "description": "The file size in byte"
                      },
                      "domainType": {
                        "type": "string"
                      },
                      "domainId": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "id": 12,
                      "name": "Bild.png",
                      "filename": 34567890987654566000,
                      "fileUrl": "https://tets.church.tools?q=file&id=12",
                      "imageUrl": "http://churchtools.test/images/137/2d038328db90850b31f541ace2c6f13f0fbd65224728a8c99061156814cb40d7",
                      "relativeUrl": "?q=file&id=12",
                      "size": 45678,
                      "domainType": "avatar",
                      "domainId": 56,
                      "type": "file"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/templates/{id}": {
      "post": {
        "summary": "Apply finance template",
        "operationId": "applyFinanceTemplate",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of finance template",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 1
            }
          },
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Succsessful applied"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/finance/templates/export": {
      "get": {
        "summary": "Epports a finance template based on the masterdata for a given accounting period",
        "operationId": "exportFinanceTemplate",
        "tags": [
          "Finance"
        ],
        "parameters": [
          {
            "name": "accounting_period_id",
            "in": "query",
            "description": "Filter by accounting period",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The finance template as json file."
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "login_token": []
          },
          {
            "user_id": []
          }
        ]
      }
    },
    "/publicgroups/{id}/{hash}": {
      "get": {
        "summary": "Public information of group",
        "tags": [
          "Group",
          "GroupHomepage"
        ],
        "parameters": [
          {
            "name": "hash",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "description": "Group Homepage Hash",
            "required": true
          },
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "description": "Group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "PublicGroup",
                  "type": "object",
                  "x-tags": [
                    "Group"
                  ],
                  "description": "Information about a public group, e.g. to be displayed on a group homepage.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "The public group ID."
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the group, e.g. to be displayed as title."
                    },
                    "information": {
                      "type": "object",
                      "description": "General information about the group.",
                      "properties": {
                        "meetingTime": {
                          "type": "string",
                          "description": "Free text field when group meetings take place."
                        },
                        "weekday": {
                          "type": "object",
                          "description": "Week day when group meetings take place."
                        },
                        "groupCategory": {
                          "type": "object",
                          "description": "Group category set for the group."
                        },
                        "ageGroups": {
                          "type": "array",
                          "description": "List of target age groups for this group.",
                          "items": {
                            "type": "object"
                          }
                        },
                        "targetGroup": {
                          "type": "object",
                          "description": "Target group for this group."
                        },
                        "note": {
                          "type": "string",
                          "description": "The group description."
                        },
                        "campus": {
                          "type": "object",
                          "description": "The campus this group is assigned to."
                        },
                        "imageUrl": {
                          "type": "string",
                          "description": "URL to a group image if provided."
                        },
                        "leader": {
                          "type": "array",
                          "description": "List of person objects of all group leaders if the group is set to display leaders.",
                          "items": {
                            "type": "object"
                          }
                        },
                        "groupPlaces": {
                          "type": "array",
                          "description": "List of the group's meeting places. Only returned if the group homepage is set to display a map.",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    },
                    "children": {
                      "type": "array",
                      "description": "Lists all (direct) child group IDs for the current group."
                    },
                    "autoAccept": {
                      "type": "boolean",
                      "description": "If true, group sign up requests will be accepted automatically."
                    },
                    "allowWaitinglist": {
                      "type": "boolean",
                      "description": "If true, group sign is allowed even if group is full."
                    },
                    "maxMemberCount": {
                      "type": "number",
                      "description": "Maximum number of members until the group is considered as full."
                    },
                    "currentMemberCount": {
                      "type": "number",
                      "description": "Current number of members in the group."
                    },
                    "requestedPlacesCount": {
                      "type": "number",
                      "description": "Number of member requests"
                    },
                    "requestedWaitinglistPlacesCount": {
                      "type": "number",
                      "description": "Number of member requests with waiting list position"
                    },
                    "canSignUp": {
                      "type": "boolean",
                      "description": "Indicates if the current user (either logged in or not) can sign up. This summarizes the information in signUpConditions."
                    },
                    "signUpConditions": {
                      "type": "object",
                      "required": [
                        "groupIsNotHidden",
                        "groupIsActive",
                        "groupIsOpenForMembers",
                        "groupIsNotFull",
                        "groupHasLeader",
                        "endDateNotPassed",
                        "rolesSetInGroup",
                        "groupIsPublic",
                        "canContactLeader",
                        "newPersonStationIsSet",
                        "newPersonStatusIsSet",
                        "newPersonDepartmentIsSet"
                      ],
                      "description": "Specifies conditions required to sign up in this group. Not all conditions apply to any user, e.g. some of the conditions only apply to users that are not logged in.",
                      "properties": {
                        "groupIsNotHidden": {
                          "type": "boolean",
                          "description": "If false, the group is set to hidden and nobody can sign up."
                        },
                        "groupIsActive": {
                          "type": "boolean",
                          "description": "If false, the group is not in active state and nobody can sign up."
                        },
                        "groupIsOpenForMembers": {
                          "type": "boolean",
                          "description": "If false, the group is not set to be open for members and nobody can sign up."
                        },
                        "groupIsNotFull": {
                          "type": "boolean",
                          "description": "If false, the group's max number of members is reached and nobody can sign up."
                        },
                        "groupHasLeader": {
                          "type": "boolean",
                          "description": "If false, no leader is set for the group and nobody can sign up."
                        },
                        "endDateNotPassed": {
                          "type": "boolean",
                          "description": "If false, the group's end date has passed and nobody can sign up."
                        },
                        "rolesSetInGroup": {
                          "type": "boolean",
                          "description": "If false, the standard role and requester role are not set for the group and nobody can sign up."
                        },
                        "groupIsPublic": {
                          "type": "boolean",
                          "description": "If false, the group is not public and only users already signed in are allowed to sign up."
                        },
                        "canContactLeader": {
                          "type": "boolean",
                          "description": "If false, none of the group's leaders have an email address set. Only persons already signed in can sign up."
                        },
                        "newPersonStationIsSet": {
                          "type": "boolean",
                          "description": "If false, the default station for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                        },
                        "newPersonStatusIsSet": {
                          "type": "boolean",
                          "description": "If false, the default status for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                        },
                        "newPersonDepartmentIsSet": {
                          "type": "boolean",
                          "description": "If false, the default department for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                        }
                      }
                    },
                    "signUpPersons": {
                      "type": "array",
                      "description": "Lists all persons the current user is allowed to sign up for. This includes spouses, children below the age of 16 and all persons with the same email address.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "Person Domain Object"
                          },
                          "status": {
                            "description": "Specifies whether this person is already in the group (IN_GROUP), in pending state for the group (REQUESTED), or selected by the user to be added into the group (CLICKED). Otherwise NOT_CLICKED.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "signUpHeadline": {
                      "type": "string",
                      "description": "Text which can be displayed as a headline for the sign up section"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "information",
                    "autoAccept",
                    "allowWaitinglist",
                    "maxMemberCount",
                    "currentMemberCount",
                    "requestedPlacesCount",
                    "requestedWaitinglistPlacesCount",
                    "canSignUp",
                    "signUpConditions"
                  ],
                  "x-examples": {}
                }
              }
            }
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getGroupForHomepage",
        "description": "Request a group for a group homepage. Only necessary fields for a public group homepage are returned.",
        "security": []
      }
    },
    "/publicgroups/{groupId}/token": {
      "post": {
        "summary": "Issue new sign up token.",
        "tags": [
          "GroupHomepage",
          "Group"
        ],
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "Group id of public group"
          }
        ],
        "responses": {
          "200": {
            "description": "Token created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "token": {
                          "type": "string",
                          "description": "Sign Up Token"
                        },
                        "group": {
                          "type": "object",
                          "description": "Basic Group Information"
                        },
                        "requesterId": {
                          "type": "number",
                          "nullable": true,
                          "description": "Provided PersonId"
                        },
                        "email": {
                          "type": "string",
                          "nullable": true,
                          "description": "Provide eMail"
                        },
                        "url": {
                          "type": "string",
                          "description": "Link To Sign Up Form"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Token for personId": {
                    "value": {
                      "data": {
                        "token": "sH5S4QgcnC5uAqW8Qskz",
                        "group": {
                          "id": 26,
                          "name": "<span>1</span> KG Alpha 1 Kopie",
                          "members": [],
                          "updatedAt": {
                            "date": "2020-01-23 20:49:42.000000",
                            "timezone_type": 3,
                            "timezone": "Europe/Berlin"
                          },
                          "customFields": []
                        },
                        "requesterId": 1,
                        "email": null,
                        "url": "http://churchtools.test/publicgroup/26/signup/sH5S4QgcnC5uAqW8Qskz"
                      }
                    }
                  },
                  "Token for eMail": {
                    "value": {
                      "data": {
                        "success": "Token successfully created. Mail sent with link."
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "examples": {
                  "PersonId and eMail given": {
                    "value": {
                      "message": "There are validation errors",
                      "messageKey": "validation.error",
                      "translatedMessage": "Die eingegebenen Daten waren nicht korrekt.",
                      "args": [],
                      "errors": [
                        {
                          "fieldId": "personId",
                          "message": "validation.constraint.personId.xor.email",
                          "messageKey": "validation.constraint.personId.xor.email",
                          "args": []
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "issueSignUpToken",
        "description": "The sign up token is needed to sign up to a public or open group using the form. The token can be issued by person id or for an email. If the person id is given, the token and the form url is returned. If an eMail address is given, the system checks if a user exists with that eMail, if s/he is already in the group or if the eMail is new to the system, hence a new user account would be necessary. The mail is sent with detailed information and a link to the sign up form.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "number",
                    "description": "Person Id, which issues the token."
                  },
                  "email": {
                    "type": "string",
                    "description": "eMail address of not logged in user or new user."
                  },
                  "clicked": {
                    "type": "array",
                    "description": "Array of person ids, which are clicked on group detail page. Those persons, will be also checked on the form site.\nThe `clicked` field will be saved only in combination with `personId`.",
                    "items": {}
                  },
                  "groupHomepageHash": {
                    "type": "string",
                    "description": "The hash of the group homepage. If specified, the user can return to the group homepage after the sign up was successful."
                  }
                }
              },
              "examples": {
                "Issue token for person": {
                  "value": {
                    "personId": 1,
                    "clicked": [
                      1,
                      2
                    ],
                    "groupHomepageHash": "kukiOq4WofxbacqWFEa3FgbioX0kUr6p"
                  }
                },
                "Issue token for email": {
                  "value": {
                    "email": "jean-de-martin@rau-en.fr",
                    "groupHomepageHash": "kukiOq4WofxbacqWFEa3FgbioX0kUr6p"
                  }
                }
              }
            }
          },
          "description": "You MUST provide either `personId` OR `email`. Both fields cannot be present at the same time."
        },
        "security": []
      }
    },
    "/publicgroups/{groupId}/form": {
      "get": {
        "summary": "Get a Group Sign Up Form",
        "tags": [
          "GroupHomepage",
          "Group"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "Group ID of the public group"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "token",
            "description": "Sign Up Token",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "The sign up token."
                    },
                    "group": {
                      "title": "PublicGroup",
                      "type": "object",
                      "x-tags": [
                        "Group"
                      ],
                      "description": "Information about a public group, e.g. to be displayed on a group homepage.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "The public group ID."
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the group, e.g. to be displayed as title."
                        },
                        "information": {
                          "type": "object",
                          "description": "General information about the group.",
                          "properties": {
                            "meetingTime": {
                              "type": "string",
                              "description": "Free text field when group meetings take place."
                            },
                            "weekday": {
                              "type": "object",
                              "description": "Week day when group meetings take place."
                            },
                            "groupCategory": {
                              "type": "object",
                              "description": "Group category set for the group."
                            },
                            "ageGroups": {
                              "type": "array",
                              "description": "List of target age groups for this group.",
                              "items": {
                                "type": "object"
                              }
                            },
                            "targetGroup": {
                              "type": "object",
                              "description": "Target group for this group."
                            },
                            "note": {
                              "type": "string",
                              "description": "The group description."
                            },
                            "campus": {
                              "type": "object",
                              "description": "The campus this group is assigned to."
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "URL to a group image if provided."
                            },
                            "leader": {
                              "type": "array",
                              "description": "List of person objects of all group leaders if the group is set to display leaders.",
                              "items": {
                                "type": "object"
                              }
                            },
                            "groupPlaces": {
                              "type": "array",
                              "description": "List of the group's meeting places. Only returned if the group homepage is set to display a map.",
                              "items": {
                                "type": "object"
                              }
                            }
                          }
                        },
                        "children": {
                          "type": "array",
                          "description": "Lists all (direct) child group IDs for the current group."
                        },
                        "autoAccept": {
                          "type": "boolean",
                          "description": "If true, group sign up requests will be accepted automatically."
                        },
                        "allowWaitinglist": {
                          "type": "boolean",
                          "description": "If true, group sign is allowed even if group is full."
                        },
                        "maxMemberCount": {
                          "type": "number",
                          "description": "Maximum number of members until the group is considered as full."
                        },
                        "currentMemberCount": {
                          "type": "number",
                          "description": "Current number of members in the group."
                        },
                        "requestedPlacesCount": {
                          "type": "number",
                          "description": "Number of member requests"
                        },
                        "requestedWaitinglistPlacesCount": {
                          "type": "number",
                          "description": "Number of member requests with waiting list position"
                        },
                        "canSignUp": {
                          "type": "boolean",
                          "description": "Indicates if the current user (either logged in or not) can sign up. This summarizes the information in signUpConditions."
                        },
                        "signUpConditions": {
                          "type": "object",
                          "required": [
                            "groupIsNotHidden",
                            "groupIsActive",
                            "groupIsOpenForMembers",
                            "groupIsNotFull",
                            "groupHasLeader",
                            "endDateNotPassed",
                            "rolesSetInGroup",
                            "groupIsPublic",
                            "canContactLeader",
                            "newPersonStationIsSet",
                            "newPersonStatusIsSet",
                            "newPersonDepartmentIsSet"
                          ],
                          "description": "Specifies conditions required to sign up in this group. Not all conditions apply to any user, e.g. some of the conditions only apply to users that are not logged in.",
                          "properties": {
                            "groupIsNotHidden": {
                              "type": "boolean",
                              "description": "If false, the group is set to hidden and nobody can sign up."
                            },
                            "groupIsActive": {
                              "type": "boolean",
                              "description": "If false, the group is not in active state and nobody can sign up."
                            },
                            "groupIsOpenForMembers": {
                              "type": "boolean",
                              "description": "If false, the group is not set to be open for members and nobody can sign up."
                            },
                            "groupIsNotFull": {
                              "type": "boolean",
                              "description": "If false, the group's max number of members is reached and nobody can sign up."
                            },
                            "groupHasLeader": {
                              "type": "boolean",
                              "description": "If false, no leader is set for the group and nobody can sign up."
                            },
                            "endDateNotPassed": {
                              "type": "boolean",
                              "description": "If false, the group's end date has passed and nobody can sign up."
                            },
                            "rolesSetInGroup": {
                              "type": "boolean",
                              "description": "If false, the standard role and requester role are not set for the group and nobody can sign up."
                            },
                            "groupIsPublic": {
                              "type": "boolean",
                              "description": "If false, the group is not public and only users already signed in are allowed to sign up."
                            },
                            "canContactLeader": {
                              "type": "boolean",
                              "description": "If false, none of the group's leaders have an email address set. Only persons already signed in can sign up."
                            },
                            "newPersonStationIsSet": {
                              "type": "boolean",
                              "description": "If false, the default station for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                            },
                            "newPersonStatusIsSet": {
                              "type": "boolean",
                              "description": "If false, the default status for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                            },
                            "newPersonDepartmentIsSet": {
                              "type": "boolean",
                              "description": "If false, the default department for new users is not set. When persons without an account attempt to sign up, no new user accounts will be created but the group leader will be requested by mail."
                            }
                          }
                        },
                        "signUpPersons": {
                          "type": "array",
                          "description": "Lists all persons the current user is allowed to sign up for. This includes spouses, children below the age of 16 and all persons with the same email address.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "person": {
                                "type": "object",
                                "description": "Person Domain Object"
                              },
                              "status": {
                                "description": "Specifies whether this person is already in the group (IN_GROUP), in pending state for the group (REQUESTED), or selected by the user to be added into the group (CLICKED). Otherwise NOT_CLICKED.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "signUpHeadline": {
                          "type": "string",
                          "description": "Text which can be displayed as a headline for the sign up section"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "information",
                        "autoAccept",
                        "allowWaitinglist",
                        "maxMemberCount",
                        "currentMemberCount",
                        "requestedPlacesCount",
                        "requestedWaitinglistPlacesCount",
                        "canSignUp",
                        "signUpConditions"
                      ],
                      "x-examples": {}
                    },
                    "form": {
                      "type": "array",
                      "description": "List of form fields.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "ID of the form field. Only IDs within the same form field type are unique, i.e. a form field is identified by its type and its ID."
                          },
                          "name": {
                            "type": "string",
                            "description": "The field's internal name. Not intended to be displayed."
                          },
                          "label": {
                            "type": "string",
                            "description": "A human readable label for the form field."
                          },
                          "fieldTypeCode": {
                            "type": "string",
                            "description": "One of: checkbox, date, multiselect, number, radioselect, select, text, textarea"
                          },
                          "type": {
                            "type": "string",
                            "description": "One of: \"person\" (person fields), \"custom\" (custom group member fields), \"relation\" (when new family members should be signed up, can be \"spouse\" or \"child\"), \"comment\" (general comment field), \"privacy\" (privacy agreement for new users)"
                          },
                          "options": {
                            "type": "array",
                            "description": "Provides the set of allowed options for select fields.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "default": {
                            "type": "string",
                            "description": "The default value set when the user does not set this value."
                          },
                          "sortKey": {
                            "type": "number",
                            "description": "Form fields should be sorted by this key ascending."
                          },
                          "madatory": {
                            "type": "boolean",
                            "description": "If this is true, the field is required."
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "label",
                          "fieldTypeCode",
                          "type",
                          "sortKey",
                          "madatory"
                        ]
                      }
                    },
                    "email": {
                      "type": "string",
                      "description": "If the user is not yet signed in, this specifies the email address the user has provided."
                    },
                    "requesterId": {
                      "type": "number",
                      "description": "If the user is signed in, this specifies the user ID of the requester."
                    },
                    "signUpPersons": {
                      "type": "array",
                      "description": "Lists all persons the current user is allowed to sign up for. This includes spouses, children below the age of 16 and all persons with the same email address.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "Person Domain Object"
                          },
                          "status": {
                            "type": "string",
                            "description": "Specifies whether this person is already in the group (IN_GROUP), in pending state for the group (REQUESTED), or selected by the user to be added into the group (CLICKED). Otherwise NOT_CLICKED."
                          }
                        },
                        "required": [
                          "person",
                          "status"
                        ]
                      }
                    }
                  },
                  "required": [
                    "token",
                    "group",
                    "form"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "The sign up token was not found. Use /publicgroups/{groupId}/token to get a sign up token."
          }
        },
        "operationId": "get-publicgroups-groupId-form",
        "description": "When granted a sign up token, this endpoint returns all fields to display a sign up form for the user.",
        "security": []
      }
    },
    "/publicgroups/{groupId}/mailToLeaders": {
      "post": {
        "summary": "Send a Mail to Public Group Leaders",
        "tags": [
          "Group",
          "GroupHomepage"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "Group ID of the public group"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "post-publicgroups-groupId-mailToLeaders",
        "description": "Sends a mail to each group leader of the public group who has an email address set.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the sender."
                  },
                  "email": {
                    "type": "string",
                    "description": "E-Mail Address of the sender."
                  },
                  "message": {
                    "type": "string",
                    "description": "Message to be sent."
                  }
                },
                "required": [
                  "name",
                  "email",
                  "message"
                ]
              }
            }
          }
        },
        "security": []
      }
    },
    "/publicgroups/{groupId}/signup": {
      "post": {
        "summary": "Send a Sign Up Form to Get Signed Up into a Public Group",
        "tags": [
          "Group",
          "GroupHomepage"
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "groupId",
            "in": "path",
            "required": true,
            "description": "Group ID of the public group"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "groupHomepageHash": {
                      "type": "string",
                      "description": "The hash of the group homepage. This allows the client to return to the group homepage."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "post-publicgroups-groupId-signup",
        "description": "To sign a user up into a group, the form data has to be send to this endpoint.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string",
                    "description": "The sign up token."
                  },
                  "forms": {
                    "type": "array",
                    "description": "A list of form data containing a form object for each person that should be signed up.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "personId": {
                          "type": "number",
                          "description": "The person ID the current form applies to. Can be empty if a single new user is about to sign up."
                        },
                        "form": {
                          "type": "array",
                          "description": "The form data for the current person.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the form field as returned from /publicgroups/{groupId}/form"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of the form field as returned from /publicgroups/{groupId}/form (should be one of: person, custom, relation, privacy, comment)"
                              },
                              "value": {
                                "type": "string",
                                "description": "The value the user provided."
                              }
                            },
                            "required": [
                              "id",
                              "type",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "form"
                      ]
                    }
                  }
                },
                "required": [
                  "token",
                  "forms"
                ]
              }
            }
          }
        },
        "security": []
      }
    },
    "/persons/{personId}/devices": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "personId",
          "in": "path",
          "required": true,
          "description": "ID of Person"
        }
      ],
      "get": {
        "summary": "Fetch all registered devices for person",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Device",
                        "type": "object",
                        "x-tags": [
                          "Person"
                        ],
                        "description": "A device can be a smartphone or tablet running the ChurchTools app.",
                        "x-examples": {
                          "Device": {
                            "id": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                            "type": "Android",
                            "ttl": "2020-05-07T13:24:35+02:00",
                            "createdAt": "2020-02-07T13:24:35+01:00",
                            "updatedAt": "2020-02-07T13:24:35+01:00",
                            "meta": {
                              "createdDate": "2020-02-07T12:24:35Z",
                              "createdPerson": {
                                "id": 1
                              },
                              "modifiedDate": "2020-02-07T12:24:35Z",
                              "modifiedPerson": {
                                "id": 1
                              }
                            }
                          }
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Device Type",
                            "enum": [
                              "FCN",
                              "APN"
                            ],
                            "example": "APN"
                          },
                          "meta": {
                            "type": "object",
                            "description": "Created and Modified Information",
                            "properties": {
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-02-07T12:24:35Z"
                              },
                              "createdPerson": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": "1"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-02-07T12:24:35Z"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": "1"
                                  }
                                }
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "deprecated": true,
                            "format": "date-time",
                            "example": "2020-02-07T13:24:35+01:00"
                          },
                          "createdAt": {
                            "type": "string",
                            "deprecated": true,
                            "format": "date-time",
                            "example": "2020-02-07T13:24:35+01:00"
                          },
                          "ttl": {
                            "type": "string",
                            "description": "Time To Live of Device",
                            "format": "date-time",
                            "example": "2020-05-07T13:24:35+02:00"
                          },
                          "id": {
                            "type": "string",
                            "example": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                            "description": "Device ID generated by Firebase"
                          },
                          "version": {
                            "type": "string",
                            "nullable": true,
                            "example": "0.9.0",
                            "description": "Used App Version"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "One Device": {
                    "value": {
                      "data": [
                        {
                          "id": "bar-sample-device1",
                          "type": "Android",
                          "ttl": "2020-05-07T13:24:35+02:00",
                          "createdAt": "2020-02-07T13:24:35+01:00",
                          "updatedAt": "2020-02-07T13:24:35+01:00",
                          "meta": {
                            "createdDate": "2020-02-07T12:24:35Z",
                            "createdPerson": {
                              "id": 1
                            },
                            "modifiedDate": "2020-02-07T12:24:35Z",
                            "modifiedPerson": {
                              "id": 1
                            }
                          }
                        }
                      ],
                      "meta": {
                        "count": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden to View Devices"
          }
        },
        "operationId": "getPersonDevices",
        "description": "This endpoint returns all in ChurchTools registered devices (Smartphones or Tablets with CT App) for a person.",
        "parameters": []
      }
    },
    "/persons/{personId}/devices/{deviceId}": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "personId",
          "in": "path",
          "required": true,
          "description": ""
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "deviceId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch one device",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Device",
                      "type": "object",
                      "x-tags": [
                        "Person"
                      ],
                      "description": "A device can be a smartphone or tablet running the ChurchTools app.",
                      "x-examples": {
                        "Device": {
                          "id": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                          "type": "Android",
                          "ttl": "2020-05-07T13:24:35+02:00",
                          "createdAt": "2020-02-07T13:24:35+01:00",
                          "updatedAt": "2020-02-07T13:24:35+01:00",
                          "meta": {
                            "createdDate": "2020-02-07T12:24:35Z",
                            "createdPerson": {
                              "id": 1
                            },
                            "modifiedDate": "2020-02-07T12:24:35Z",
                            "modifiedPerson": {
                              "id": 1
                            }
                          }
                        }
                      },
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Device Type",
                          "enum": [
                            "FCN",
                            "APN"
                          ],
                          "example": "APN"
                        },
                        "meta": {
                          "type": "object",
                          "description": "Created and Modified Information",
                          "properties": {
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-02-07T12:24:35Z"
                            },
                            "createdPerson": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": "1"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2020-02-07T12:24:35Z"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": "1"
                                }
                              }
                            }
                          }
                        },
                        "updatedAt": {
                          "type": "string",
                          "deprecated": true,
                          "format": "date-time",
                          "example": "2020-02-07T13:24:35+01:00"
                        },
                        "createdAt": {
                          "type": "string",
                          "deprecated": true,
                          "format": "date-time",
                          "example": "2020-02-07T13:24:35+01:00"
                        },
                        "ttl": {
                          "type": "string",
                          "description": "Time To Live of Device",
                          "format": "date-time",
                          "example": "2020-05-07T13:24:35+02:00"
                        },
                        "id": {
                          "type": "string",
                          "example": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                          "description": "Device ID generated by Firebase"
                        },
                        "version": {
                          "type": "string",
                          "nullable": true,
                          "example": "0.9.0",
                          "description": "Used App Version"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "One Device": {
                    "value": {
                      "data": {
                        "id": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                        "type": "Android",
                        "ttl": "2020-05-07T13:24:35+02:00",
                        "createdAt": "2020-02-07T13:24:35+01:00",
                        "updatedAt": "2020-02-07T13:24:35+01:00",
                        "meta": {
                          "createdDate": "2020-02-07T12:24:35Z",
                          "createdPerson": {
                            "id": 1
                          },
                          "modifiedDate": "2020-02-07T12:24:35Z",
                          "modifiedPerson": {
                            "id": 1
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getDeviceForPerson",
        "description": "If person ID and device ID are know you can fetch all information about one device using this endpoint."
      },
      "put": {
        "summary": "Create / Update new device for person",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "All currently registered devices for that person.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Device",
                        "type": "object",
                        "x-tags": [
                          "Person"
                        ],
                        "description": "A device can be a smartphone or tablet running the ChurchTools app.",
                        "x-examples": {
                          "Device": {
                            "id": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                            "type": "Android",
                            "ttl": "2020-05-07T13:24:35+02:00",
                            "createdAt": "2020-02-07T13:24:35+01:00",
                            "updatedAt": "2020-02-07T13:24:35+01:00",
                            "meta": {
                              "createdDate": "2020-02-07T12:24:35Z",
                              "createdPerson": {
                                "id": 1
                              },
                              "modifiedDate": "2020-02-07T12:24:35Z",
                              "modifiedPerson": {
                                "id": 1
                              }
                            }
                          }
                        },
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Device Type",
                            "enum": [
                              "FCN",
                              "APN"
                            ],
                            "example": "APN"
                          },
                          "meta": {
                            "type": "object",
                            "description": "Created and Modified Information",
                            "properties": {
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-02-07T12:24:35Z"
                              },
                              "createdPerson": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": "1"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2020-02-07T12:24:35Z"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": "1"
                                  }
                                }
                              }
                            }
                          },
                          "updatedAt": {
                            "type": "string",
                            "deprecated": true,
                            "format": "date-time",
                            "example": "2020-02-07T13:24:35+01:00"
                          },
                          "createdAt": {
                            "type": "string",
                            "deprecated": true,
                            "format": "date-time",
                            "example": "2020-02-07T13:24:35+01:00"
                          },
                          "ttl": {
                            "type": "string",
                            "description": "Time To Live of Device",
                            "format": "date-time",
                            "example": "2020-05-07T13:24:35+02:00"
                          },
                          "id": {
                            "type": "string",
                            "example": "cf1gGE_oBhM:APA91bFUCyqIpB70ufPXJFsbEZZfQxSlYUZ3CcIzjkW2elRjJZ9g4tQfK3i_q8CJN1lhfSwdbtJG6bHo22_-Hwcy8JEpwWV9NNNDQUjdVgWimGk7Z5OAKjNryaYorbkRfYC1xSBjiGgF",
                            "description": "Device ID generated by Firebase"
                          },
                          "version": {
                            "type": "string",
                            "nullable": true,
                            "example": "0.9.0",
                            "description": "Used App Version"
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 1,
                          "description": "Count of devices in data array"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "All devices": {
                    "value": {
                      "data": [
                        {
                          "id": "nm82ha1v1v2",
                          "type": "Android",
                          "ttl": "2020-05-07T13:24:35+02:00",
                          "createdAt": "2020-02-07T13:24:35+01:00",
                          "updatedAt": "2020-02-07T13:24:35+01:00",
                          "meta": {
                            "createdDate": "2020-02-07T12:24:35Z",
                            "createdPerson": {
                              "id": 1
                            },
                            "modifiedDate": "2020-02-07T12:24:35Z",
                            "modifiedPerson": {
                              "id": 1
                            }
                          }
                        },
                        {
                          "id": "azwkbdvq7261knbr",
                          "type": "Android",
                          "ttl": "2020-05-07T13:24:35+02:00",
                          "createdAt": "2020-02-07T13:24:35+01:00",
                          "updatedAt": "2020-02-07T13:24:35+01:00",
                          "meta": {
                            "createdDate": "2020-02-07T12:24:35Z",
                            "createdPerson": {
                              "id": 1
                            },
                            "modifiedDate": "2020-02-07T12:24:35Z",
                            "modifiedPerson": {
                              "id": 1
                            }
                          }
                        },
                        {
                          "id": "ajfugaand6g6adndf7",
                          "type": "iOS",
                          "ttl": "2020-06-13T11:10:56+02:00",
                          "createdAt": "2020-03-13T11:10:56+01:00",
                          "updatedAt": "2020-03-13T11:10:56+01:00",
                          "meta": {
                            "createdDate": "2020-03-13T10:10:56Z",
                            "createdPerson": {
                              "id": 1
                            },
                            "modifiedDate": "2020-03-13T10:10:56Z",
                            "modifiedPerson": {
                              "id": 1
                            }
                          }
                        }
                      ],
                      "meta": {
                        "count": 3
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Errors"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "UpdateDeviceForPerson",
        "description": "Save a new device or update an existing using this endpoint. This endpoint is usually used to update the TTL. If the TTL is reached the device will be removed from ChurchTools, cause of inactivity.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "Android"
                  },
                  "version": {
                    "type": "string",
                    "description": "App Version. (Semantic Versioning)",
                    "example": "0.9.0",
                    "pattern": "^[0-9]+.[0-9]+.[0-9]+([+-][^+-][0-9A-Za-z-.]*)?$"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "examples": {
                "New Android Device": {
                  "value": {
                    "type": "Android"
                  }
                }
              }
            }
          },
          "description": "Device information."
        }
      },
      "delete": {
        "summary": "Remove device for person",
        "tags": [
          "Person"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "DeleteDeviceForPerson",
        "description": "Remove a device from ChurchTools."
      }
    },
    "/sync/entitymappings": {
      "get": {
        "summary": "Fetch all registered mappings",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Sync Entity Mapping",
                        "type": "object",
                        "x-tags": [
                          "Sync"
                        ],
                        "description": "Mapping information between a ChurchTools entity and its corresponding entity in a third party system.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "ID of Entity Mapping",
                            "example": 1
                          },
                          "domainType": {
                            "type": "string",
                            "description": "ChurchTools Domain Type"
                          },
                          "domainId": {
                            "type": "string",
                            "description": "ChurchTools Internal Domain Identifier"
                          },
                          "sourceId": {
                            "type": "number",
                            "description": "Id of Source System Registered in ChurchTools",
                            "example": 1
                          },
                          "sourceEntityId": {
                            "type": "string",
                            "description": "Source Entity's Identifier"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "synced",
                              "conflict",
                              "deleted in CT"
                            ],
                            "example": "synced",
                            "description": "Status of Relationship"
                          },
                          "lastSyncedDate": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time",
                            "description": "Date of Last Sync"
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Missing `administer persons` permission. "
          }
        },
        "operationId": "getSyncMappings",
        "description": "The Sync module saved a mapping relationship for every entity. This mapping consists of a `domainType` like `person` oder `transaction` (ChurchTools domain type) and its `domainId` to identify the entity. And secondly, the corresponding entity on the third party system with its ID.",
        "parameters": [
          {
            "name": "domain_type",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "description": "Filter by Domain Types"
          },
          {
            "name": "domain_id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Filter by Domain Id"
          },
          {
            "name": "source_id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Filter by Source Id"
          }
        ]
      },
      "post": {
        "summary": "Create new mapping",
        "tags": [
          "Sync"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Sync Entity Mapping",
                  "type": "object",
                  "x-tags": [
                    "Sync"
                  ],
                  "description": "Mapping information between a ChurchTools entity and its corresponding entity in a third party system.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "ID of Entity Mapping",
                      "example": 1
                    },
                    "domainType": {
                      "type": "string",
                      "description": "ChurchTools Domain Type"
                    },
                    "domainId": {
                      "type": "string",
                      "description": "ChurchTools Internal Domain Identifier"
                    },
                    "sourceId": {
                      "type": "number",
                      "description": "Id of Source System Registered in ChurchTools",
                      "example": 1
                    },
                    "sourceEntityId": {
                      "type": "string",
                      "description": "Source Entity's Identifier"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "synced",
                        "conflict",
                        "deleted in CT"
                      ],
                      "example": "synced",
                      "description": "Status of Relationship"
                    },
                    "lastSyncedDate": {
                      "type": "string",
                      "nullable": true,
                      "format": "date-time",
                      "description": "Date of Last Sync"
                    },
                    "meta": {
                      "title": "Entity Meta Data",
                      "type": "object",
                      "description": "Created and Modified Date of an Entity",
                      "properties": {
                        "createdPerson": {
                          "type": "object",
                          "example": 1,
                          "description": "Person Id Who Created the Entity",
                          "properties": {
                            "id": {
                              "type": "number"
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-05-25T11:00:00Z",
                          "description": "Date of Creation"
                        },
                        "modifiedPerson": {
                          "type": "object",
                          "example": 1,
                          "description": "Person Id Who Modified the Entity",
                          "properties": {
                            "id": {
                              "type": "number"
                            }
                          }
                        },
                        "modifiedDate": {
                          "type": "string",
                          "example": "2019-05-25T11:00:00Z",
                          "description": "Date of Last Modification"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "createSyncMapping",
        "description": "Save new entity mapping.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "domainType": {
                    "type": "string",
                    "example": "person",
                    "description": "ChurchTools Domain Type"
                  },
                  "domainId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Identifier of ChurchTools Entity",
                    "example": "1"
                  },
                  "sourceId": {
                    "type": "number",
                    "example": 2,
                    "description": "Identifier of Synchronisation Source"
                  },
                  "sourceEntityId": {
                    "type": "string",
                    "nullable": true,
                    "example": "4",
                    "description": "Identifier of Entity in Source System"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "synced",
                      "conflict",
                      "deleted in CT"
                    ],
                    "example": "synced",
                    "description": "Status of Entity Mapping"
                  },
                  "lastSyncedDate": {
                    "type": "string",
                    "nullable": true,
                    "format": "date-time",
                    "example": "2020-04-21T22:00:00Z",
                    "description": "DateTime of Last Synchronisation in Zulu Format"
                  }
                },
                "required": [
                  "domainType",
                  "domainId",
                  "sourceId",
                  "sourceEntityId",
                  "status",
                  "lastSyncedDate"
                ]
              }
            }
          },
          "description": "New Entity Mapping of a Person."
        }
      },
      "parameters": []
    },
    "/sync/entitymappings/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "Update or Create Mapping",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "Updated or Newly Created Entity Mapping",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Sync Entity Mapping",
                  "type": "object",
                  "x-tags": [
                    "Sync"
                  ],
                  "description": "Mapping information between a ChurchTools entity and its corresponding entity in a third party system.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "ID of Entity Mapping",
                      "example": 1
                    },
                    "domainType": {
                      "type": "string",
                      "description": "ChurchTools Domain Type"
                    },
                    "domainId": {
                      "type": "string",
                      "description": "ChurchTools Internal Domain Identifier"
                    },
                    "sourceId": {
                      "type": "number",
                      "description": "Id of Source System Registered in ChurchTools",
                      "example": 1
                    },
                    "sourceEntityId": {
                      "type": "string",
                      "description": "Source Entity's Identifier"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "synced",
                        "conflict",
                        "deleted in CT"
                      ],
                      "example": "synced",
                      "description": "Status of Relationship"
                    },
                    "lastSyncedDate": {
                      "type": "string",
                      "nullable": true,
                      "format": "date-time",
                      "description": "Date of Last Sync"
                    },
                    "meta": {
                      "title": "Entity Meta Data",
                      "type": "object",
                      "description": "Created and Modified Date of an Entity",
                      "properties": {
                        "createdPerson": {
                          "type": "object",
                          "example": 1,
                          "description": "Person Id Who Created the Entity",
                          "properties": {
                            "id": {
                              "type": "number"
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-05-25T11:00:00Z",
                          "description": "Date of Creation"
                        },
                        "modifiedPerson": {
                          "type": "object",
                          "example": 1,
                          "description": "Person Id Who Modified the Entity",
                          "properties": {
                            "id": {
                              "type": "number"
                            }
                          }
                        },
                        "modifiedDate": {
                          "type": "string",
                          "example": "2019-05-25T11:00:00Z",
                          "description": "Date of Last Modification"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Missing permission `administer persons`."
          }
        },
        "operationId": "updateEntityMapping",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "sourceEntityId": {
                    "type": "string",
                    "nullable": true,
                    "description": "Identifier of Synchronisation Source",
                    "example": "2"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of Entity Mapping",
                    "enum": [
                      "synced",
                      "conflict",
                      "deleted in CT"
                    ],
                    "example": "synced"
                  },
                  "lastSyncedDate": {
                    "type": "string",
                    "description": "DateTime of Last Synchronisation in Zulu Format",
                    "format": "date-time",
                    "example": "2020-04-21T22:00:00Z"
                  },
                  "sourceId": {
                    "type": "number",
                    "example": 2,
                    "description": "Id of Source"
                  },
                  "domainType": {
                    "type": "string",
                    "example": "person",
                    "description": "ChurchTools Domain Type"
                  },
                  "domainId": {
                    "type": "string",
                    "nullable": true,
                    "example": "1",
                    "description": "Domain Id of ChurchTools Entity"
                  }
                },
                "required": [
                  "sourceEntityId",
                  "status",
                  "lastSyncedDate"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Update or Create New Entity Mapping."
      },
      "delete": {
        "summary": "Delete Mapping from Database.",
        "tags": [
          "Sync"
        ],
        "responses": {
          "204": {
            "description": "Successfully Deleted"
          },
          "400": {
            "description": "Bad Request. Validation Errors."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Missing permission `administer persons`."
          }
        },
        "operationId": "deleteEntityMapping",
        "description": "Delete one entity mapping from database. The mapping will be delete but the entity, for example the person object, will remain as it is. This will break the relationship to an external system.\n\nIf no entity mapping is found the endpoint will also return 204 No Content."
      },
      "get": {
        "summary": "Get One Entity Mapping",
        "operationId": "getEntityMapping",
        "responses": {
          "200": {
            "description": "Requested Entity Mapping",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Sync Entity Mapping",
                  "type": "object",
                  "x-tags": [
                    "Sync"
                  ],
                  "description": "Mapping information between a ChurchTools entity and its corresponding entity in a third party system.",
                  "properties": {
                    "id": {
                      "type": "number",
                      "description": "ID of Entity Mapping",
                      "example": 1
                    },
                    "domainType": {
                      "type": "string",
                      "description": "ChurchTools Domain Type"
                    },
                    "domainId": {
                      "type": "string",
                      "description": "ChurchTools Internal Domain Identifier"
                    },
                    "sourceId": {
                      "type": "number",
                      "description": "Id of Source System Registered in ChurchTools",
                      "example": 1
                    },
                    "sourceEntityId": {
                      "type": "string",
                      "description": "Source Entity's Identifier"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "synced",
                        "conflict",
                        "deleted in CT"
                      ],
                      "example": "synced",
                      "description": "Status of Relationship"
                    },
                    "lastSyncedDate": {
                      "type": "string",
                      "nullable": true,
                      "format": "date-time",
                      "description": "Date of Last Sync"
                    },
                    "meta": {
                      "title": "Entity Meta Data",
                      "type": "object",
                      "description": "Created and Modified Date of an Entity",
                      "properties": {
                        "createdPerson": {
                          "type": "object",
                          "example": 1,
                          "description": "Person Id Who Created the Entity",
                          "properties": {
                            "id": {
                              "type": "number"
                            }
                          }
                        },
                        "createdDate": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2019-05-25T11:00:00Z",
                          "description": "Date of Creation"
                        },
                        "modifiedPerson": {
                          "type": "object",
                          "example": 1,
                          "description": "Person Id Who Modified the Entity",
                          "properties": {
                            "id": {
                              "type": "number"
                            }
                          }
                        },
                        "modifiedDate": {
                          "type": "string",
                          "example": "2019-05-25T11:00:00Z",
                          "description": "Date of Last Modification"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Missing permission `administer persons`."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Fetch one entity mapping form database.",
        "tags": [
          "Sync"
        ]
      }
    },
    "/queues/{queue}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Start Worker For Queue",
        "tags": [
          "Queue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "queue": {
                          "type": "string",
                          "example": "default",
                          "description": "Name of Queue"
                        },
                        "messages": {
                          "type": "array",
                          "description": "Messages from Worker",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": {
                        "queue": "default",
                        "message": [
                          "11,9MB memory usage",
                          "2 jobs processed",
                          "Queue is empty"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "startQueueWorker",
        "description": "ChurchTools utilizes a queueing system to offload time-intensive or processing-intensive work. Calling this endpoint will start a worker, which grabs pending jobs and processing them. If the queue has still jobs pending the worker starts a new worker to continue the work.\n\nExisting Queues:\n\n* `default`",
        "parameters": [],
        "security": []
      }
    },
    "/queues/{queue}/jobgroups/status": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "queue",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Status Information About Job Groups in Queue",
        "tags": [
          "Queue"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "donation_receipt-1",
                            "description": "Name of Job Group. `__single__` is For Jobs Which don't Belong to a Group"
                          },
                          "total": {
                            "type": "number",
                            "example": 4,
                            "description": "Total Jobs in Queue of This Job Group"
                          },
                          "jobs": {
                            "type": "object",
                            "properties": {
                              "pending": {
                                "type": "number",
                                "example": 1,
                                "description": "Number of Pending Jobs"
                              },
                              "running": {
                                "type": "number",
                                "description": "Number of Running Jobs",
                                "example": 1
                              },
                              "deleted": {
                                "type": "number",
                                "description": "Number of Deleted Jobs (but still in Queue listed)",
                                "example": 1
                              },
                              "buried": {
                                "type": "number",
                                "description": "Number of Buried Jobs",
                                "example": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "Count of Listed Groups",
                          "example": 2
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "data": [
                        {
                          "name": "__single__",
                          "total": 2,
                          "jobs": {
                            "pending": 1,
                            "running": 1,
                            "deleted": 0,
                            "buried": 0
                          }
                        },
                        {
                          "name": "accounting_period-1",
                          "total": 9,
                          "jobs": {
                            "pending": 5,
                            "running": 2,
                            "deleted": 2,
                            "buried": 0
                          }
                        }
                      ],
                      "meta": {
                        "count": 2
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getQueueJobGroupsStatus",
        "description": "Job in a queue can belong to a job group to categorize a job. This endpoint counts jobs in queue and groups them by they status.\n\nUse this endpoint to check if all jobs are processed or if still jobs are pending and wait to be processed.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "description": "Limit result to this job group.",
            "name": "job_groups"
          }
        ]
      }
    },
    "/sync/conflicts": {
      "get": {
        "summary": "Fetch all conflicts",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Sync Conflicts",
                        "type": "object",
                        "x-tags": [
                          "Sync"
                        ],
                        "description": "A sync conflict object holds information about the type of conflict, the corresponding source and the entity mapping.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "Conflict Id",
                            "example": 1
                          },
                          "jobId": {
                            "type": "string",
                            "description": "Job Id, where conflict appeared",
                            "example": "7E31C399-91B1-4148-BFDD-6C05B557A25C"
                          },
                          "type": {
                            "type": "string",
                            "description": "Conflict Type",
                            "enum": [
                              "duplicate in CT",
                              "duplicate in source",
                              "link and update",
                              "update",
                              "delete or create",
                              "create"
                            ],
                            "example": "created"
                          },
                          "entityMappingId": {
                            "type": "number",
                            "example": 1,
                            "description": "Entity Mapping Id"
                          },
                          "data": {
                            "type": "array",
                            "description": "Array of relevant meta information",
                            "items": {
                              "type": "object",
                              "description": "A Conflict Can Have Multiple Key-Value Pairs as Additional Data",
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "key": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Permission `administer persons` needed."
          }
        },
        "operationId": "getSyncConflicts",
        "description": "When synchronizing two systems conflicts may appear. You can fetch know conflicts using this endpoint.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "create",
                  "update",
                  "duplicate in CT",
                  "link and update",
                  "delete or create",
                  "duplicate in source"
                ]
              },
              "deprecated": false,
              "uniqueItems": false
            },
            "in": "query",
            "name": "types",
            "style": "deepObject",
            "description": "Filter Response by Conflict Type"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "name": "domain_types",
            "style": "deepObject",
            "description": "Filter Response by Domain Types of Related Entity Mappings"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "source_ids",
            "style": "deepObject",
            "description": "Filter Response by Source Ids of Related Entity Mappings"
          }
        ]
      },
      "post": {
        "summary": "Save new detected conflict",
        "tags": [
          "Sync"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Sync Conflicts",
                      "type": "object",
                      "x-tags": [
                        "Sync"
                      ],
                      "description": "A sync conflict object holds information about the type of conflict, the corresponding source and the entity mapping.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Conflict Id",
                          "example": 1
                        },
                        "jobId": {
                          "type": "string",
                          "description": "Job Id, where conflict appeared",
                          "example": "7E31C399-91B1-4148-BFDD-6C05B557A25C"
                        },
                        "type": {
                          "type": "string",
                          "description": "Conflict Type",
                          "enum": [
                            "duplicate in CT",
                            "duplicate in source",
                            "link and update",
                            "update",
                            "delete or create",
                            "create"
                          ],
                          "example": "created"
                        },
                        "entityMappingId": {
                          "type": "number",
                          "example": 1,
                          "description": "Entity Mapping Id"
                        },
                        "data": {
                          "type": "array",
                          "description": "Array of relevant meta information",
                          "items": {
                            "type": "object",
                            "description": "A Conflict Can Have Multiple Key-Value Pairs as Additional Data",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "key": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Permission `administer persons` needed."
          }
        },
        "operationId": "saveSyncConflict",
        "description": "Save new sync conflict in ChurchTools.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jobId": {
                    "type": "string",
                    "example": "7E31C399-91B1-4148-BFDD-6C05B557A25C",
                    "description": "Job Identifier (usually GUID)"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "create",
                      "update",
                      "duplicate in CT",
                      "link and update",
                      "delete or create",
                      "duplicate in source"
                    ],
                    "example": "create",
                    "description": "Type of Conflict"
                  },
                  "entityMappingId": {
                    "type": "number",
                    "example": 1,
                    "description": "Entity Mapping Id"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "jobId",
                  "type",
                  "entityMappingId"
                ]
              }
            }
          },
          "description": " "
        }
      }
    },
    "/sync/conflicts/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch One Conflict",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Sync Conflicts",
                      "type": "object",
                      "x-tags": [
                        "Sync"
                      ],
                      "description": "A sync conflict object holds information about the type of conflict, the corresponding source and the entity mapping.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Conflict Id",
                          "example": 1
                        },
                        "jobId": {
                          "type": "string",
                          "description": "Job Id, where conflict appeared",
                          "example": "7E31C399-91B1-4148-BFDD-6C05B557A25C"
                        },
                        "type": {
                          "type": "string",
                          "description": "Conflict Type",
                          "enum": [
                            "duplicate in CT",
                            "duplicate in source",
                            "link and update",
                            "update",
                            "delete or create",
                            "create"
                          ],
                          "example": "created"
                        },
                        "entityMappingId": {
                          "type": "number",
                          "example": 1,
                          "description": "Entity Mapping Id"
                        },
                        "data": {
                          "type": "array",
                          "description": "Array of relevant meta information",
                          "items": {
                            "type": "object",
                            "description": "A Conflict Can Have Multiple Key-Value Pairs as Additional Data",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "key": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "getSyncConflict",
        "description": "Fetch one specific conflict."
      },
      "put": {
        "summary": "Update Conflict",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Sync Conflicts",
                      "type": "object",
                      "x-tags": [
                        "Sync"
                      ],
                      "description": "A sync conflict object holds information about the type of conflict, the corresponding source and the entity mapping.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "Conflict Id",
                          "example": 1
                        },
                        "jobId": {
                          "type": "string",
                          "description": "Job Id, where conflict appeared",
                          "example": "7E31C399-91B1-4148-BFDD-6C05B557A25C"
                        },
                        "type": {
                          "type": "string",
                          "description": "Conflict Type",
                          "enum": [
                            "duplicate in CT",
                            "duplicate in source",
                            "link and update",
                            "update",
                            "delete or create",
                            "create"
                          ],
                          "example": "created"
                        },
                        "entityMappingId": {
                          "type": "number",
                          "example": 1,
                          "description": "Entity Mapping Id"
                        },
                        "data": {
                          "type": "array",
                          "description": "Array of relevant meta information",
                          "items": {
                            "type": "object",
                            "description": "A Conflict Can Have Multiple Key-Value Pairs as Additional Data",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "key": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Permission `administer persons` needed."
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "updateSyncConflict",
        "description": "Depending on the conflicting situation, a conflict needs to be updated.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jobId": {
                    "type": "string",
                    "example": "7E31C399-91B1-4148-BFDD-6C05B557A25C",
                    "description": "GUID of Job"
                  },
                  "type": {
                    "type": "string",
                    "example": "create",
                    "enum": [
                      "create",
                      "update",
                      "duplicate in CT",
                      "link an dupdate",
                      "delete or create",
                      "duplicate in source"
                    ],
                    "description": "Type of Conflict"
                  },
                  "entityMappingId": {
                    "type": "number",
                    "example": 1,
                    "description": "Entity Mapping Id"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "jobId",
                  "type",
                  "entityMappingId"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Conflict",
        "tags": [
          "Sync"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "operationId": "deleteSyncConflict",
        "description": "Delete Conflict from Database."
      }
    },
    "/permissions/global": {
      "get": {
        "summary": "All Permissions for the Current User",
        "tags": [
          "Permission"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "churchcore": {
                          "type": "object",
                          "description": "Global ChurchTools Permissions",
                          "properties": {
                            "administer settings": {
                              "type": "boolean",
                              "example": false
                            },
                            "invite persons": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "churchcheckin": {
                          "type": "object",
                          "description": "Permissions for Checkin Module",
                          "properties": {
                            "view": {
                              "type": "boolean",
                              "example": true
                            },
                            "create person": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "churchdb": {
                          "type": "object",
                          "description": "Permissions for Person & Groups Module",
                          "properties": {
                            "view birthdaylist": {
                              "type": "boolean",
                              "example": true
                            },
                            "security level person": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "example": 0
                              }
                            }
                          }
                        },
                        "churchcal": {
                          "type": "object",
                          "description": "Permissions for Calendar Module",
                          "properties": {
                            "view category": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            },
                            "create personal category": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "churchresource": {
                          "type": "object",
                          "description": "Permissions for Resource Module",
                          "properties": {
                            "view resource": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            },
                            "create bookings": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "churchservice": {
                          "type": "object",
                          "description": "Permissions for Events Module",
                          "properties": {
                            "view history": {
                              "type": "boolean",
                              "example": false
                            },
                            "view fact": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "churchwiki": {
                          "type": "object",
                          "description": "Permissions for Wiki Module",
                          "properties": {
                            "view": {
                              "type": "boolean",
                              "example": true
                            },
                            "view category": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "churchfinance": {
                          "type": "object",
                          "description": "Permissions for ChurchFinance (Old) Module",
                          "properties": {
                            "view": {
                              "type": "boolean",
                              "example": true
                            },
                            "edit masterdata": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "finance": {
                          "type": "object",
                          "description": "Permissions for Finance Module",
                          "properties": {
                            "view": {
                              "type": "boolean",
                              "example": true
                            },
                            "view accounting period": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        },
                        "churchreport": {
                          "type": "object",
                          "description": "Permissions for Report Module",
                          "properties": {
                            "view": {
                              "type": "boolean",
                              "example": true
                            },
                            "view query": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Permissions for a User": {
                    "value": {
                      "data": {
                        "churchcore": {
                          "administer settings": false,
                          "administer persons": false,
                          "invite persons": false,
                          "simulate persons": false,
                          "view logfile": false,
                          "view whoisonline": false,
                          "edit translations": false
                        },
                        "churchcheckin": {
                          "view": false,
                          "create person": false,
                          "edit masterdata": false
                        },
                        "churchdb": {
                          "view birthdaylist": false,
                          "view memberliste": false,
                          "view": false,
                          "security level person": [],
                          "security level group": [],
                          "security level view own data": [],
                          "security level edit own data": [],
                          "view grouptype": [],
                          "view statistics": false,
                          "view tags": false,
                          "view history": false,
                          "view comments": [],
                          "view archive": false,
                          "complex filter": false,
                          "administer global filters": false,
                          "push/pull archive": false,
                          "edit relations": false,
                          "edit groups": false,
                          "create person": false,
                          "delete persons": false,
                          "export data": false,
                          "write access": false,
                          "view alldata": [],
                          "send sms": false,
                          "view station": [],
                          "edit bulkletter": false,
                          "create print labels": false,
                          "view group": [],
                          "administer groups": false,
                          "edit masterdata": false
                        },
                        "churchcal": {
                          "view": true,
                          "view category": [
                            2,
                            3
                          ],
                          "edit category": [],
                          "edit calendar entry template": [],
                          "assistance mode": false,
                          "create personal category": false,
                          "admin personal category": false,
                          "create group category": false,
                          "admin group category": false,
                          "admin church category": true
                        },
                        "churchresource": {
                          "view": false,
                          "view resource": [],
                          "create bookings": [],
                          "create virtual bookings": false,
                          "administer bookings": [],
                          "assistance mode": false,
                          "edit masterdata": false
                        },
                        "churchservice": {
                          "view": false,
                          "view servicegroup": [],
                          "edit servicegroup": [],
                          "view history": false,
                          "view events": [],
                          "edit events": [],
                          "edit template": false,
                          "manage absent": false,
                          "view fact": [],
                          "edit fact": [],
                          "export facts": false,
                          "view agenda": [],
                          "edit agenda": [],
                          "edit agenda templates": [],
                          "view songcategory": [],
                          "edit songcategory": [],
                          "view song statistics": false,
                          "use ccli": false,
                          "edit masterdata": false
                        },
                        "churchwiki": {
                          "view": true,
                          "view category": [],
                          "edit category": [],
                          "edit masterdata": false
                        },
                        "churchfinance": {
                          "view": false,
                          "edit masterdata": false
                        },
                        "finance": {
                          "view": false,
                          "view accounting period": [],
                          "edit accounting period": [],
                          "edit masterdata": false
                        },
                        "churchreport": {
                          "view": false,
                          "view query": [],
                          "edit masterdata": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getGlobalPermissions",
        "description": "This endpoint returns a set of all permissions grouped by modulename for the current user. Use this endpoint to check if the user has a specific permission set or is allowed to perform an action based on global permissions.\n\nIf a module is deactivated its permissions are not returned by the API."
      }
    },
    "/permissions/internal/persons/{personId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "personId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lookup Person-Related Group Internal Permissions",
        "tags": [
          "Permission"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "churchdb": {
                          "type": "object",
                          "description": "Group Internal Permission, which Affect a Person",
                          "properties": {
                            "+see persons": {
                              "type": "integer",
                              "description": "Security Level to View Person"
                            },
                            "+invite person": {
                              "type": "boolean"
                            },
                            "+see tags": {
                              "type": "boolean"
                            },
                            "+edit persons": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "Group Internal Permissions": {
                    "value": {
                      "data": {
                        "churchdb": {
                          "+see persons": 3,
                          "+invite person": true,
                          "+see tags": true,
                          "+edit persons": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "getInternalPermissionsForPerson",
        "description": "Group internal permissions can affect different entities in ChurchTools such as `Person`. This endpoint calculates the result of all group internal permissions with regard to a person. That mean, the response is the result for the current user, to find out if s/he can do certain actions based on group internal permissions.\n\nExample: The API response has `+invite persons: true`. This means, the current user can invite the person with `{personId}` to ChurchTools based on this group internal permissions. That could mean, the user can the person are in the same group or the user is in an superior groups, which inherits permissions."
      }
    },
    "/persons/{personId}/invite": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "personId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Invite Person to ChurchTools",
        "tags": [
          "Person"
        ],
        "responses": {
          "204": {
            "description": "Person successfully invited."
          },
          "400": {
            "description": "Bad Request. Person has no eMail Adress."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden. Permissions missing: global `invite person` or group internal `+invite persons`"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "invitePerson",
        "description": "Invite person to ChurchTools. Calling this API will send an invitation Mail to that person."
      }
    },
    "/events/send": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Send Mail to Event Participants",
        "description": "A agenda can be sent to multiple people at once. Recipients can be participants of one of the events, whereby the user sending the mail MUST see the service groups, or the user can add additional recipients from the list of people the user can see. To send a mail the user MUST see the agenda.",
        "operationId": "send-event-email",
        "requestBody": {
          "description": "E-Mail information and recipients",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "eventIds": [
                    31,
                    32
                  ],
                  "recipients": [
                    40,
                    41,
                    116
                  ],
                  "sendCopyToMe": true,
                  "subject": "Agenda Updated",
                  "body": "I have a updated the agenda for the upcoming service. Please review the changes."
                },
                "properties": {
                  "eventIds": {
                    "description": "Array of event IDs. Multiple event IDs MUST be integrated events, i.e. all events share the same agenda.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "recipients": {
                    "description": "Array of person IDs.",
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  },
                  "sendCopyToMe": {
                    "description": "Flag if a mail should be send to the user sending the request.",
                    "type": "boolean",
                    "default": false
                  },
                  "subject": {
                    "description": "E-Mail subject.",
                    "type": "string"
                  },
                  "body": {
                    "description": "E-Mail body.",
                    "type": "string"
                  },
                  "appendAgendaButton": {
                    "type": "boolean",
                    "example": "true",
                    "description": "If an agenda exists for the event, a button with a link to that agenda is added to the mail body."
                  },
                  "files": {
                    "type": "array",
                    "description": "List of file Ids. If the file is attached to the event it is added to the mail body.",
                    "items": {
                      "type": "integer",
                      "example": 0
                    }
                  }
                },
                "required": [
                  "eventIds",
                  "recipients",
                  "subject",
                  "body",
                  "appendAgendaButton",
                  "files"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully sent mails to some recipients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "5 recipients have no eMail address. No eMail is sent to them."
                    },
                    "translatedMessage": {
                      "type": "string",
                      "example": "5 Empfänger haben keine E-Mail Adresse. Keine E-Mail wurde an sie geschickt."
                    },
                    "messageKey": {
                      "type": "string",
                      "example": "agenda.mail.missing.email"
                    },
                    "args": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "example": 5
                        }
                      }
                    },
                    "errors": {
                      "description": "Array of DomainObjects with people, who have no eMail Addresses.",
                      "type": "array",
                      "items": {
                        "title": "Person DomainObject",
                        "type": "object",
                        "x-tags": [
                          "Person"
                        ],
                        "description": "Person as Domain Object",
                        "properties": {
                          "domainAttributes": {
                            "type": "object",
                            "properties": {
                              "firstName": {
                                "type": "string",
                                "description": "",
                                "example": "Vanessa"
                              },
                              "lastName": {
                                "type": "string",
                                "example": "Fischer",
                                "description": ""
                              },
                              "guid": {
                                "type": "string",
                                "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                "description": "Globally Unique Identifier"
                              }
                            }
                          },
                          "imageUrl": {
                            "type": "string",
                            "description": "Image Url",
                            "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                          },
                          "frontendUrl": {
                            "type": "string",
                            "description": "Frontend link",
                            "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                          },
                          "apiUrl": {
                            "type": "string",
                            "description": "API Endpoint to calendar",
                            "example": "http://churchtools.test/api/persons/19"
                          },
                          "domainType": {
                            "type": "string",
                            "description": "ChurchTools domain type",
                            "example": "person"
                          },
                          "title": {
                            "type": "string",
                            "description": "Fullname of Person",
                            "example": "Vanessa Fischer"
                          },
                          "domainIdentifier": {
                            "type": "string",
                            "example": "19",
                            "description": "Person ID"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Successfully sent mails to all recipients the user can see."
          },
          "400": {
            "description": "Validation errors. See response for details"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Session expired!"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden to see, create, update, or delete resource"
          }
        }
      }
    },
    "/wiki/categories": {
      "get": {
        "summary": "Get all wiki categories.",
        "tags": [
          "Wiki"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "WikiCategory",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "id": 0,
                            "name": "Informationen und Dokumente",
                            "nameTranslated": "Informationen und Dokumente",
                            "sortKey": 30,
                            "campusId": null,
                            "inMenu": true,
                            "fileAccessWithoutPermission": true
                          }
                        },
                        "description": "",
                        "x-tags": [
                          "Wiki"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "sortKey": {
                            "type": "integer"
                          },
                          "campusId": {
                            "type": "integer",
                            "nullable": true
                          },
                          "inMenu": {
                            "type": "boolean"
                          },
                          "fileAccessWithoutPermission": {
                            "type": "boolean"
                          },
                          "nameTranslated": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "sortKey",
                          "campusId",
                          "inMenu",
                          "fileAccessWithoutPermission"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    },
                    "permissions": {
                      "type": "object",
                      "properties": {
                        "editMasterData": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wiki-categories",
        "description": "Get all wiki categories."
      }
    },
    "/wiki/categories/{wikiCategoryId}/pages/{identifier}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "wikiCategoryId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "identifier",
          "in": "path",
          "required": true,
          "description": "Can either be the pages identifier or its title"
        }
      ],
      "get": {
        "summary": "Returns the latest version of the wiki page with the given identifier.",
        "tags": [
          "Wiki"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "WikiPage",
                        "type": "object",
                        "description": "",
                        "x-examples": {
                          "example-1": {
                            "identifier": "a01cc6dd-2ee6-4612-bf92-6ee14e6bb72c",
                            "title": "Protokoll Gemeindeversammlung 02.02.2020",
                            "wikiCategory": {
                              "id": 5,
                              "name": "Protokolle",
                              "nameTranslated": "Protokolle",
                              "sortKey": 1,
                              "campusId": null,
                              "inMenu": true,
                              "fileAccessWithoutPermission": false
                            },
                            "version": 3,
                            "text": "Punkt 1: Wasserspender in der Gemeinde",
                            "onStartpage": false,
                            "redirectTo": null,
                            "permissions": {
                              "canEdit": true
                            },
                            "meta": {
                              "createdDate": "2020-07-17T14:35:30Z",
                              "createdPerson": {
                                "id": 1
                              },
                              "modifiedDate": "2020-07-17T14:35:30Z",
                              "modifiedPerson": {
                                "id": 1
                              }
                            }
                          }
                        },
                        "x-tags": [
                          "Wiki"
                        ],
                        "properties": {
                          "identifier": {
                            "type": "string"
                          },
                          "wikiCategory": {
                            "title": "WikiCategory",
                            "type": "object",
                            "x-examples": {
                              "example-1": {
                                "id": 0,
                                "name": "Informationen und Dokumente",
                                "nameTranslated": "Informationen und Dokumente",
                                "sortKey": 30,
                                "campusId": null,
                                "inMenu": true,
                                "fileAccessWithoutPermission": true
                              }
                            },
                            "description": "",
                            "x-tags": [
                              "Wiki"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              },
                              "campusId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "inMenu": {
                                "type": "boolean"
                              },
                              "fileAccessWithoutPermission": {
                                "type": "boolean"
                              },
                              "nameTranslated": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "sortKey",
                              "campusId",
                              "inMenu",
                              "fileAccessWithoutPermission"
                            ]
                          },
                          "title": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer"
                          },
                          "text": {
                            "type": "string"
                          },
                          "onStartpage": {
                            "type": "boolean"
                          },
                          "redirectTo": {
                            "type": "string"
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          },
                          "isMarkdown": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "identifier"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wiki-categories-wikiCategoryId-pages-identifier",
        "description": "Returns the latest version of the wiki page with the given identifier."
      }
    },
    "/wiki/categories/{wikiCategoryId}/pages/{identifier}/versions/{version}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "wikiCategoryId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "version",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "identifier",
          "in": "path",
          "required": true,
          "description": "Can either be the pages identifier or its title"
        }
      ],
      "get": {
        "summary": "Returns the wiki page with the given identifier and version.",
        "tags": [
          "Wiki"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "WikiPage",
                      "type": "object",
                      "description": "",
                      "x-examples": {
                        "example-1": {
                          "identifier": "a01cc6dd-2ee6-4612-bf92-6ee14e6bb72c",
                          "title": "Protokoll Gemeindeversammlung 02.02.2020",
                          "wikiCategory": {
                            "id": 5,
                            "name": "Protokolle",
                            "nameTranslated": "Protokolle",
                            "sortKey": 1,
                            "campusId": null,
                            "inMenu": true,
                            "fileAccessWithoutPermission": false
                          },
                          "version": 3,
                          "text": "Punkt 1: Wasserspender in der Gemeinde",
                          "onStartpage": false,
                          "redirectTo": null,
                          "permissions": {
                            "canEdit": true
                          },
                          "meta": {
                            "createdDate": "2020-07-17T14:35:30Z",
                            "createdPerson": {
                              "id": 1
                            },
                            "modifiedDate": "2020-07-17T14:35:30Z",
                            "modifiedPerson": {
                              "id": 1
                            }
                          }
                        }
                      },
                      "x-tags": [
                        "Wiki"
                      ],
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "wikiCategory": {
                          "title": "WikiCategory",
                          "type": "object",
                          "x-examples": {
                            "example-1": {
                              "id": 0,
                              "name": "Informationen und Dokumente",
                              "nameTranslated": "Informationen und Dokumente",
                              "sortKey": 30,
                              "campusId": null,
                              "inMenu": true,
                              "fileAccessWithoutPermission": true
                            }
                          },
                          "description": "",
                          "x-tags": [
                            "Wiki"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "name": {
                              "type": "string"
                            },
                            "sortKey": {
                              "type": "integer"
                            },
                            "campusId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "inMenu": {
                              "type": "boolean"
                            },
                            "fileAccessWithoutPermission": {
                              "type": "boolean"
                            },
                            "nameTranslated": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "sortKey",
                            "campusId",
                            "inMenu",
                            "fileAccessWithoutPermission"
                          ]
                        },
                        "title": {
                          "type": "string"
                        },
                        "version": {
                          "type": "integer"
                        },
                        "text": {
                          "type": "string"
                        },
                        "onStartpage": {
                          "type": "boolean"
                        },
                        "redirectTo": {
                          "type": "string"
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "canEdit": {
                              "type": "boolean"
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        },
                        "isMarkdown": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "identifier"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wiki-categories-wikiCategoryId-pages-versions-version",
        "description": "Returns the wiki page with the given identifier and version."
      }
    },
    "/wiki/categories/{wikiCategoryId}/pages/{identifier}/versions": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "wikiCategoryId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "identifier",
          "in": "path",
          "required": true,
          "description": "Can either be the pages identifier or its title"
        }
      ],
      "get": {
        "summary": "Returns all version of the wiki page for the given",
        "tags": [
          "Wiki"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "WikiPage",
                        "type": "object",
                        "description": "",
                        "x-examples": {
                          "example-1": {
                            "identifier": "a01cc6dd-2ee6-4612-bf92-6ee14e6bb72c",
                            "title": "Protokoll Gemeindeversammlung 02.02.2020",
                            "wikiCategory": {
                              "id": 5,
                              "name": "Protokolle",
                              "nameTranslated": "Protokolle",
                              "sortKey": 1,
                              "campusId": null,
                              "inMenu": true,
                              "fileAccessWithoutPermission": false
                            },
                            "version": 3,
                            "text": "Punkt 1: Wasserspender in der Gemeinde",
                            "onStartpage": false,
                            "redirectTo": null,
                            "permissions": {
                              "canEdit": true
                            },
                            "meta": {
                              "createdDate": "2020-07-17T14:35:30Z",
                              "createdPerson": {
                                "id": 1
                              },
                              "modifiedDate": "2020-07-17T14:35:30Z",
                              "modifiedPerson": {
                                "id": 1
                              }
                            }
                          }
                        },
                        "x-tags": [
                          "Wiki"
                        ],
                        "properties": {
                          "identifier": {
                            "type": "string"
                          },
                          "wikiCategory": {
                            "title": "WikiCategory",
                            "type": "object",
                            "x-examples": {
                              "example-1": {
                                "id": 0,
                                "name": "Informationen und Dokumente",
                                "nameTranslated": "Informationen und Dokumente",
                                "sortKey": 30,
                                "campusId": null,
                                "inMenu": true,
                                "fileAccessWithoutPermission": true
                              }
                            },
                            "description": "",
                            "x-tags": [
                              "Wiki"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              },
                              "campusId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "inMenu": {
                                "type": "boolean"
                              },
                              "fileAccessWithoutPermission": {
                                "type": "boolean"
                              },
                              "nameTranslated": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "sortKey",
                              "campusId",
                              "inMenu",
                              "fileAccessWithoutPermission"
                            ]
                          },
                          "title": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer"
                          },
                          "text": {
                            "type": "string"
                          },
                          "onStartpage": {
                            "type": "boolean"
                          },
                          "redirectTo": {
                            "type": "string"
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          },
                          "isMarkdown": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "identifier"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wiki-categories-wikiCategoryId-pages-identifier-versions",
        "description": "Returns all version of the wiki page for the given identifier."
      }
    },
    "/wiki/categories/{wikiCategoryId}/pages": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "wikiCategoryId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Returns all Wiki Pages in the given Category.",
        "tags": [
          "Wiki"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "WikiPage",
                        "type": "object",
                        "description": "",
                        "x-examples": {
                          "example-1": {
                            "identifier": "a01cc6dd-2ee6-4612-bf92-6ee14e6bb72c",
                            "title": "Protokoll Gemeindeversammlung 02.02.2020",
                            "wikiCategory": {
                              "id": 5,
                              "name": "Protokolle",
                              "nameTranslated": "Protokolle",
                              "sortKey": 1,
                              "campusId": null,
                              "inMenu": true,
                              "fileAccessWithoutPermission": false
                            },
                            "version": 3,
                            "onStartpage": false,
                            "redirectTo": null,
                            "permissions": {
                              "canEdit": true
                            },
                            "meta": {
                              "createdDate": "2020-07-17T14:35:30Z",
                              "createdPerson": {
                                "id": 1
                              },
                              "modifiedDate": "2020-07-17T14:35:30Z",
                              "modifiedPerson": {
                                "id": 1
                              }
                            }
                          }
                        },
                        "x-tags": [
                          "Wiki"
                        ],
                        "properties": {
                          "identifier": {
                            "type": "string"
                          },
                          "wikiCategory": {
                            "title": "WikiCategory",
                            "type": "object",
                            "x-examples": {
                              "example-1": {
                                "id": 0,
                                "name": "Informationen und Dokumente",
                                "nameTranslated": "Informationen und Dokumente",
                                "sortKey": 30,
                                "campusId": null,
                                "inMenu": true,
                                "fileAccessWithoutPermission": true
                              }
                            },
                            "description": "",
                            "x-tags": [
                              "Wiki"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "integer"
                              },
                              "campusId": {
                                "type": "integer",
                                "nullable": true
                              },
                              "inMenu": {
                                "type": "boolean"
                              },
                              "fileAccessWithoutPermission": {
                                "type": "boolean"
                              },
                              "nameTranslated": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "sortKey",
                              "campusId",
                              "inMenu",
                              "fileAccessWithoutPermission"
                            ]
                          },
                          "title": {
                            "type": "string"
                          },
                          "version": {
                            "type": "integer"
                          },
                          "onStartpage": {
                            "type": "boolean"
                          },
                          "redirectTo": {
                            "type": "string"
                          },
                          "permissions": {
                            "type": "object",
                            "properties": {
                              "canEdit": {
                                "type": "boolean"
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          },
                          "isMarkdown": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "identifier"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wiki-categories-wikiCategoryId-pages",
        "description": "Returns all Wiki Pages in the given Category. Only the latest version of each page is returned."
      }
    },
    "/wiki/search": {
      "parameters": [],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Wiki"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "SearchResult",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "title": "main",
                            "domainType": "wiki_page",
                            "domainIdentifier": "014CE18E-B72D-4511-81D4-ED12B6DD5770",
                            "apiUrl": "http://churchtools.test/api/wiki/categories/0/pages/014CE18E-B72D-4511-81D4-ED12B6DD5770/versions/7",
                            "frontendUrl": "http://churchtools.test/?q=churchwiki#WikiView/filterWikicategory_id:0/doc:main",
                            "imageUrl": null,
                            "domainAttributes": [],
                            "preview": "Was ist das **Wiki**? Das Wiki soll als Dokumentation, Informations- und Arbeitsgrundlage für die verschiedenen Dienstb…"
                          }
                        },
                        "description": "",
                        "properties": {
                          "title": {
                            "type": "string",
                            "example": "main"
                          },
                          "domainType": {
                            "type": "string",
                            "example": "wiki_page"
                          },
                          "domainIdentifier": {
                            "type": "string",
                            "example": "014CE18E-B72D-4511-81D4-ED12B6DD5770"
                          },
                          "apiUrl": {
                            "type": "string",
                            "example": "http://churchtools.test/api/wiki/categories/0/pages/014CE18E-B72D-4511-81D4-ED12B6DD5770/versions/7"
                          },
                          "frontendUrl": {
                            "type": "string",
                            "example": "http://churchtools.test/?q=churchwiki#WikiView/filterWikicategory_id:0/doc:main"
                          },
                          "imageUrl": {
                            "type": "string",
                            "nullable": true
                          },
                          "domainAttributes": {
                            "type": "object"
                          },
                          "preview": {
                            "type": "string",
                            "nullable": true,
                            "example": "Was ist das **Wiki**? Das Wiki soll als Dokumentation, Informations- und Arbeitsgrundlage für die verschiedenen Dienstb…"
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-wiki-categories-wikiCategoryId-search",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "query"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "wiki_category_ids",
            "description": "wiki categories that should be searched. if noone is given all categories are searched"
          }
        ],
        "description": "Full text search in all wiki pages"
      }
    },
    "/groups/{groupId}/memberfields": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "groupId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Group member fields",
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "field": {
                          "oneOf": [
                            {
                              "title": "GroupMemberField",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "groupId": {
                                  "type": "integer"
                                },
                                "fieldName": {
                                  "type": "string"
                                },
                                "sortKey": {
                                  "type": "integer"
                                },
                                "fieldTypeId": {
                                  "type": "integer"
                                },
                                "securityLevel": {
                                  "type": "integer"
                                },
                                "defaultValue": {
                                  "type": "string"
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "useInRegistrationForm": {
                                  "type": "boolean"
                                },
                                "requiredInRegistrationForm": {
                                  "type": "boolean"
                                }
                              },
                              "x-tags": [
                                "Group"
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-groups-groupId-memberfields",
        "description": "Returns the configured group member fields for the given group"
      }
    },
    "/permissions/internal/groups/{groupId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "groupId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Lookup Group-Related Group Internal Permissions",
        "tags": [
          "Permission"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "churchdb": {
                          "type": "object",
                          "properties": {
                            "+see persons": {
                              "type": "integer"
                            },
                            "+see group": {
                              "type": "integer"
                            },
                            "+see group tags": {
                              "type": "boolean"
                            },
                            "+add person": {
                              "type": "boolean"
                            },
                            "+edit groupmemberstatus": {
                              "type": "boolean"
                            },
                            "+get emails": {
                              "type": "boolean"
                            },
                            "+do followup": {
                              "type": "boolean"
                            },
                            "+do group meeting": {
                              "type": "boolean"
                            },
                            "+export group members": {
                              "type": "boolean"
                            },
                            "+edit group hierachy": {
                              "type": "boolean"
                            },
                            "+see hidden group": {
                              "type": "boolean"
                            },
                            "+edit group": {
                              "type": "boolean"
                            },
                            "+admin group fields": {
                              "type": "boolean"
                            },
                            "+admin automatic emails": {
                              "type": "boolean"
                            },
                            "+remove from group": {
                              "type": "boolean"
                            },
                            "+admin group chat": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-permissions-internal-groups-groupId",
        "description": "Group internal permissions can affect different entities in ChurchTools such as `Group`. This endpoint calculates the result of all group internal permissions with regard to a group. That means, the response is the result for the current user, to find out if s/he can do certain actions based on group internal permissions.\n\nExample: The API response has `+add person: true`. This means, the current user can add persons to this group based on this group internal permissions on that group or superior groups through inheritance."
      }
    },
    "/finance/reports/{reportType}": {
      "post": {
        "summary": "Issue new Finance Report",
        "tags": [
          "Finance"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "example": "https://churchtools.test/sites/default/files/downloader/finance-report.pdf",
                      "description": "URI of PDF"
                    }
                  },
                  "required": [
                    "url"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post-finance-reports",
        "description": "Issue new finance report. _Balance_ and _Profit-Loss_ reports are available. The result provides the URI to the generated PDF file.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountingPerdiodId": {
                    "type": "number",
                    "example": 1,
                    "description": "ID of Accounting Period"
                  },
                  "startDate": {
                    "type": "string",
                    "description": "Respect Transactions From This Date On",
                    "format": "date",
                    "example": "2020-01-01"
                  },
                  "endDate": {
                    "type": "string",
                    "description": "Respect Transactions Before This Date",
                    "format": "date",
                    "example": "2020-12-31"
                  },
                  "showEmptyAccounts": {
                    "type": "boolean",
                    "example": "true",
                    "description": "Show Accounts With No Transactions",
                    "default": "true"
                  }
                },
                "required": [
                  "accountingPerdiodId",
                  "startDate",
                  "endDate"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string",
            "enum": [
              "balance",
              "profit-loss"
            ],
            "example": "balance"
          },
          "name": "reportType",
          "in": "path",
          "required": true,
          "description": "Report Key"
        }
      ]
    },
    "/finance/accounts/csv": {
      "get": {
        "summary": "Your GET endpoint",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "operationId": "get-finance-accounts-csv",
        "description": "Exports all Accounts for the given acounting period as csv",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "accounting_period_id",
            "description": "The accounting period to get the result set from"
          }
        ],
        "tags": [
          "Finance"
        ]
      }
    },
    "/groups/hierarchies": {
      "get": {
        "summary": "Get all group hierarchies",
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "GroupHierarchy",
                        "type": "object",
                        "description": "The hierarchy of one group",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "group": {
                            "title": "GroupDomainObject",
                            "type": "object",
                            "properties": {
                              "imageUrl": {
                                "type": "string",
                                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                              },
                              "frontendUrl": {
                                "type": "string",
                                "example": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%236/"
                              },
                              "apiUrl": {
                                "type": "string",
                                "example": "http://churchtools.test/api/groups/6"
                              },
                              "domainType": {
                                "type": "string",
                                "enum": [
                                  "group"
                                ]
                              },
                              "title": {
                                "type": "string",
                                "example": "Technik"
                              },
                              "domainIdentifier": {
                                "type": "string",
                                "example": "6"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "note": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "required": [
                              "frontendUrl",
                              "apiUrl",
                              "title"
                            ]
                          },
                          "parents": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "children": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          }
                        },
                        "x-tags": [
                          "Group"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-groups-hierarchies",
        "description": "Returns all group hierarchies. The groups not visible for the user only show ids",
        "parameters": [
          {
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "style": "deepObject",
            "description": "Array of group ids"
          },
          {
            "name": "campus_ids",
            "in": "query",
            "description": "Array of campus ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "agegroup_ids",
            "in": "query",
            "description": "Array of age group ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "group_status_ids",
            "in": "query",
            "description": "Array of group status ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "group_category_ids",
            "in": "query",
            "description": "Array of group category ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "target_group_ids",
            "in": "query",
            "description": "Array of target group ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "weekday",
            "in": "query",
            "description": "Array of weekdays to filter the groups. Sunday = 0, Monday = 1 ...",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "group_type_ids",
            "in": "query",
            "description": "Array of group type ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "is_open_for_members",
            "in": "query",
            "description": "Filters groups by its open status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "description": "Filters groups by its public status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_overdue_groups",
            "in": "query",
            "description": "Determines if groups with overdue enddate should still be shown. To the enddate x dates are added specified by the admin settings for person & groups",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_inactive_groups",
            "in": "query",
            "description": "Determines if inactive groups should be returned",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "without_my_groups",
            "in": "query",
            "description": "Determines if groups should be omitted where I am in",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "schema": {
              "type": "string",
              "minLength": 2
            },
            "in": "query",
            "name": "query"
          }
        ]
      }
    },
    "/groups/members": {
      "get": {
        "summary": "Get all group members",
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "personId": {
                            "type": "integer"
                          },
                          "groupId": {
                            "type": "integer"
                          },
                          "groupTypeRoleId": {
                            "type": "integer"
                          },
                          "lastChange": {
                            "type": "string",
                            "format": "date"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-groups-members",
        "description": "Returns all group members. Only accessible for users with right \"administer persons\"",
        "parameters": [
          {
            "name": "ids",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "style": "deepObject",
            "description": "Array of group ids"
          },
          {
            "name": "with_deleted",
            "in": "query",
            "description": "If true, return also deleted group members",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false
            }
          }
        ]
      }
    },
    "/groups": {
      "get": {
        "summary": "Get all groups",
        "tags": [
          "Group"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title" : "Groups",
                        "type": "object",
                        "x-tags" : ["Group"],
                        "description": "The group model structures all information in different objects: `information`, `settings`, `followUp`, and `roles`. Custom group fields are added to the root level of this model.",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 42
                          },
                          "guid": {
                            "type": "string",
                            "example": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727"
                          },
                          "name": {
                            "type": "string",
                            "example": "Smallgroup West"
                          },
                          "securityLevelForGroup": {
                            "type": "integer",
                            "description": "You can see group fields up to this security level.",
                            "example": 3
                          },
                          "information": {
                            "type": "object",
                            "properties": {
                              "imageUrl": {
                                "default": null,
                                "nullable": true,
                                "type": "string"
                              },
                              "dateOfFoundation": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date",
                                "nullable": true
                              },
                              "meetingTime": {
                                "type": "string",
                                "nullable": true
                              },
                              "weekday": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The number of the weekday. Starting with 0 = Sunday, 1 = Monday, ..."
                              },
                              "groupCategoryId": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "ageGroups": {
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                },
                                "example": [
                                  1,
                                  2
                                ]
                              },
                              "targetGroupId": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "maxMembers": {
                                "type": "integer",
                                "nullable": true
                              },
                              "groupTypeId": {
                                "type": "integer"
                              },
                              "groupStatusId": {
                                "type": "integer"
                              },
                              "note": {
                                "type": "string"
                              },
                              "campusId": {
                                "nullable": true,
                                "type": "integer"
                              },
                              "chatStatus": {
                                "description": "status of group chat",
                                "type": "string",
                                "example": "STARTED"
                              }
                            }
                          },
                          "settings": {
                            "type": "object",
                            "properties": {
                              "isHidden": {
                                "type": "boolean"
                              },
                              "isOpenForMembers": {
                                "description": "Indicator if people can apply for participation.",
                                "type": "boolean"
                              },
                              "autoAccept": {
                                "description": "Indicator if applications are accepted automatically.",
                                "type": "boolean"
                              },
                              "isPublic": {
                                "type": "boolean"
                              },
                              "inStatistic": {
                                "description": "Show in statistics.",
                                "type": "boolean"
                              },
                              "groupMeeting": {
                                "type": "object",
                                "properties": {
                                  "autoCreate": {
                                    "description": "Create weekly group meetings.",
                                    "type": "boolean"
                                  },
                                  "templateId": {
                                    "description": "Group template used for meetings.",
                                    "type": "integer",
                                    "nullable": true
                                  }
                                }
                              },
                              "informLeader": {
                                "description": "Inform leader via e-mail about changes.",
                                "type": "boolean"
                              },
                              "newMember": {
                                "description": "Campus, Status, Department for newly created persons.",
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "campusId": {
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "statusId": {
                                    "nullable": true,
                                    "type": "integer"
                                  },
                                  "departmentId": {
                                    "nullable": true,
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "followUp": {
                            "type": "object",
                            "properties": {
                              "typeId": {
                                "type": "integer",
                                "example": 1
                              },
                              "targetTypeId": {
                                "type": "integer",
                                "example": 0
                              },
                              "targetObjectId": {
                                "type": "integer",
                                "nullable": true,
                                "example": null
                              },
                              "targetGroupMemberStatusId": {
                                "type": "integer",
                                "nullable": true,
                                "example": null
                              },
                              "sendReminderMails": {
                                "type": "boolean",
                                "example": true
                              }
                            }
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "ID of this group role."
                                },
                                "groupTypeRoleId": {
                                  "type": "integer",
                                  "description": "ID of the corresponding group type role."
                                },
                                "groupTypeId": {
                                  "type": "integer",
                                  "description": "ID of corresponding group type."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of role."
                                },
                                "shorty": {
                                  "type": "string",
                                  "description": "Abbreviation of the name."
                                },
                                "sortKey": {
                                  "type": "integer",
                                  "description": "Number used for sorting roles."
                                },
                                "toDelete": {
                                  "type": "boolean",
                                  "description": "Flag, if members of this role can be deleted or removed from the group."
                                },
                                "hasRequested": {
                                  "type": "boolean",
                                  "description": "Flag, if group member is requesting group access."
                                },
                                "isLeader": {
                                  "type": "boolean",
                                  "description": "Flag, this role is a leader."
                                },
                                "isDefault": {
                                  "type": "boolean",
                                  "description": "Indicator of default roles."
                                },
                                "isHidden": {
                                  "type": "boolean",
                                  "description": "Flag, if this role is hidden in groups."
                                },
                                "growPathId": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "ID of the grow path. The id is either given from the group type role. But a group can override the grow path. In this case the group role specific ID is used."
                                },
                                "forceTwoFactorAuth": {
                                  "type": "boolean",
                                  "description": "Flag, if members with this role have to use two factor authentication."
                                },
                                "isActive": {
                                  "type": "boolean",
                                  "description": "Flag, if this role is active in this group."
                                }
                              },
                              "example": [
                                {
                                  "id": 5,
                                  "groupTypeRoleId": 3,
                                  "groupTypeId": 2,
                                  "name": "Member",
                                  "shorty": "M",
                                  "sortKey": 4,
                                  "toDelete": false,
                                  "hasRequested": false,
                                  "isLeader": false,
                                  "isDefault": true,
                                  "isHidden": false,
                                  "growPathId": null,
                                  "forceTwoFactorAuth": false,
                                  "isActive": true
                                },
                                {
                                  "id": 6,
                                  "groupTypeRoleId": 4,
                                  "groupTypeId": 2,
                                  "name": "Leader",
                                  "shorty": "L",
                                  "sortKey": 2,
                                  "toDelete": false,
                                  "hasRequested": false,
                                  "isLeader": true,
                                  "isDefault": false,
                                  "isHidden": false,
                                  "growPathId": 2,
                                  "forceTwoFactorAuth": true,
                                  "isActive": true
                                }
                              ]
                            },
                            "example": [
                              {
                                "id": 5,
                                "groupTypeRoleId": 3,
                                "groupTypeId": 2,
                                "name": "Member",
                                "shorty": "M",
                                "sortKey": 4,
                                "toDelete": false,
                                "hasRequested": false,
                                "isLeader": false,
                                "isDefault": true,
                                "isHidden": false,
                                "growPathId": null,
                                "forceTwoFactorAuth": false,
                                "isActive": true
                              },
                              {
                                "id": 6,
                                "groupTypeRoleId": 4,
                                "groupTypeId": 2,
                                "name": "Leader",
                                "shorty": "L",
                                "sortKey": 2,
                                "toDelete": false,
                                "hasRequested": false,
                                "isLeader": true,
                                "isDefault": false,
                                "isHidden": false,
                                "growPathId": 2,
                                "forceTwoFactorAuth": true,
                                "isActive": true
                              }
                            ]
                          }
                        }
                      }
                    },
                    "ref": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-groups",
        "description": "This endpoint returns an array with all groups the user can see. This includes groups the user\n    is a member of as well as subordinate groups the user is allowed to see.",
        "parameters": [
          {
            "name": "ids[]",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "style": "deepObject",
            "explode":  true,
            "description": "Array of group ids"
          },
          {
            "name": "campus_ids[]",
            "in": "query",
            "description": "Array of campus ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "form",
            "explode":  true
          },
          {
            "name": "agegroup_ids[]",
            "in": "query",
            "description": "Array of age group ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject",
            "explode":  true
          },
          {
            "name": "group_status_ids[]",
            "in": "query",
            "description": "Array of group status ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject",
            "explode":  true
          },
          {
            "name": "group_category_ids[]",
            "in": "query",
            "description": "Array of group category ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject",
            "explode":  true
          },
          {
            "name": "target_group_ids[]",
            "in": "query",
            "description": "Array of target group ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject",
            "explode":  true
          },
          {
            "name": "weekdays",
            "in": "query",
            "description": "Array of weekdays to filter the groups. Sunday = 0, Monday = 1 ...",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "group_type_ids[]",
            "in": "query",
            "description": "Array of group type ids to filter the groups",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "style": "deepObject"
          },
          {
            "name": "is_open_for_members",
            "in": "query",
            "description": "Filters groups by its open status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "is_public",
            "in": "query",
            "description": "Filters groups by its public status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_overdue_groups",
            "in": "query",
            "description": "Determines if groups with overdue enddate should still be shown. To the enddate x dates are added specified by the admin settings for person & groups",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "show_inactive_groups",
            "in": "query",
            "description": "Determines if inactive groups should be returned",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "without_my_groups",
            "in": "query",
            "description": "Determines if groups should be omitted where I am in",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "schema": {
              "type": "string",
              "minLength": 2
            },
            "in": "query",
            "name": "query"
          },
          {
            "schema": {
              "type": "number",
              "default": 10
            },
            "in": "query",
            "name": "page",
            "description": "Page number to show page in pagenation. If empty, start at first page."
          },
          {
            "schema": {
              "type": "number",
              "default": 10
            },
            "in": "query",
            "name": "limit",
            "description": "Number of results per page."
          }
        ]
      }
    },
    "/sync/adapters": {
      "get": {
        "summary": "GET Sync Adapters",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "SyncAdapter",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "churchtools"
                          },
                          "url": {
                            "type": "string",
                            "example": "http://localhost:8090"
                          },
                          "token": {
                            "type": "string",
                            "example": "kfghsjdlkfigblszurglizeifuz4"
                          }
                        },
                        "x-tags": [
                          "Hidden"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sync-adapters",
        "description": "Returns the available sync adapters",
        "tags": [
          "Hidden"
        ]
      }
    },
    "/sync/externalsystems": {
      "get": {
        "summary": "GET External Systems",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "ExternalSystem",
                        "type": "object",
                        "x-tags": [
                          "Sync"
                        ],
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "adapter": {
                            "type": "string"
                          },
                          "jobConfigsCount": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sync-externalsystems",
        "description": "Returns all external systems",
        "tags": [
          "Hidden"
        ]
      },
      "post": {
        "summary": "Create external system",
        "operationId": "post-sync-externalsystems",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Create an external system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ExternalSystem",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "adapter": {
                    "type": "string"
                  },
                  "accessHeaderValues": {
                    "type": "object",
                    "description": "Key Value Pairs that define the access to the external system"
                  },
                  "id": {
                    "type": "number",
                    "description": "Not necessary when creating a new external system"
                  }
                },
                "required": [
                  "name",
                  "adapter",
                  "accessHeaderValues"
                ],
                "x-tags": [
                  "Sync"
                ]
              }
            }
          }
        },
        "tags": [
          "Sync"
        ]
      }
    },
    "/sync/externalsystems/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "The id of the external system"
        }
      ],
      "get": {
        "summary": "GET an external system by id",
        "tags": [
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "ExternalSystem",
                      "type": "object",
                      "x-tags": [
                        "Sync"
                      ],
                      "properties": {
                        "id": {
                          "type": "number"
                        },
                        "name": {
                          "type": "string"
                        },
                        "adapter": {
                          "type": "string"
                        },
                        "jobConfigsCount": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sync-externalsystems-id",
        "description": "Returns an external system by id"
      },
      "put": {
        "summary": "Update external system",
        "operationId": "put-sync-externalsystems-id",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "description": "Update an external system",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "ExternalSystem",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "adapter": {
                    "type": "string"
                  },
                  "accessHeaderValues": {
                    "type": "object",
                    "description": "Key Value Pairs that define the access to the external system"
                  },
                  "id": {
                    "type": "number",
                    "description": "Not necessary when creating a new external system"
                  }
                },
                "required": [
                  "name",
                  "adapter",
                  "accessHeaderValues"
                ],
                "x-tags": [
                  "Sync"
                ]
              }
            }
          }
        },
        "tags": [
          "Hidden"
        ]
      },
      "delete": {
        "summary": "DELETE external system",
        "operationId": "delete-sync-externalsystems-id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete an external system",
        "tags": [
          "Hidden"
        ]
      }
    },
    "/sync/externalsystems/{id}/test": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Hidden"
        ],
        "responses": {},
        "operationId": "get-sync-externalsystems-id-test",
        "description": ""
      },
      "post": {
        "summary": "Test the external system",
        "operationId": "post-sync-externalsystems-id-test",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Tests if the external system is configured correctly",
        "tags": [
          "Hidden"
        ]
      }
    },
    "/sync/externalsystems/{externalSystemId}/jobconfigs": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "externalSystemId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "GET Job configurations",
        "tags": [
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "JobConfigurationReturn",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "externalSystem": {
                            "title": "ExternalSystem",
                            "type": "object",
                            "x-tags": [
                              "Sync"
                            ],
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "adapter": {
                                "type": "string"
                              },
                              "jobConfigsCount": {
                                "type": "integer"
                              }
                            }
                          },
                          "domainType": {
                            "type": "string"
                          },
                          "autoScheduleEnabled": {
                            "type": "boolean"
                          },
                          "createBehaviorMaster": {
                            "type": "string"
                          },
                          "createBehaviorES": {
                            "type": "string"
                          },
                          "createDefaultsMaster": {
                            "type": "object"
                          },
                          "createDefaultsES": {
                            "type": "object"
                          },
                          "linkBehavior": {
                            "type": "string"
                          },
                          "linkData": {
                            "type": "string"
                          },
                          "updateBehavior": {
                            "type": "string"
                          },
                          "updateData": {
                            "type": "string"
                          },
                          "deleteBehaviorMaster": {
                            "type": "string"
                          },
                          "deleteBehaviorES": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "domainType",
                          "autoScheduleEnabled"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sync-externalsystems-externalSystemId-jobconfigurations",
        "description": "Get all job configurations for an external system"
      },
      "post": {
        "summary": "Create job configuration",
        "operationId": "post-sync-externalsystems-externalSystemId-jobconfigs",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "JobConfigurationReturn",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "x-tags": [
                            "Sync"
                          ],
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "jobConfigsCount": {
                              "type": "integer"
                            }
                          }
                        },
                        "domainType": {
                          "type": "string"
                        },
                        "autoScheduleEnabled": {
                          "type": "boolean"
                        },
                        "createBehaviorMaster": {
                          "type": "string"
                        },
                        "createBehaviorES": {
                          "type": "string"
                        },
                        "createDefaultsMaster": {
                          "type": "object"
                        },
                        "createDefaultsES": {
                          "type": "object"
                        },
                        "linkBehavior": {
                          "type": "string"
                        },
                        "linkData": {
                          "type": "string"
                        },
                        "updateBehavior": {
                          "type": "string"
                        },
                        "updateData": {
                          "type": "string"
                        },
                        "deleteBehaviorMaster": {
                          "type": "string"
                        },
                        "deleteBehaviorES": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "domainType",
                        "autoScheduleEnabled"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Create job configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "JobConfiguration",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "externalSystemId": {
                    "type": "integer"
                  },
                  "domainType": {
                    "type": "string"
                  },
                  "autoScheduleEnabled": {
                    "type": "boolean"
                  },
                  "createBehaviorMaster": {
                    "type": "string"
                  },
                  "createBehaviorES": {
                    "type": "string"
                  },
                  "createDefaultsMaster": {
                    "type": "object"
                  },
                  "createDefaultsES": {
                    "type": "object"
                  },
                  "linkBehavior": {
                    "type": "string"
                  },
                  "linkData": {
                    "type": "string"
                  },
                  "updateBehavior": {
                    "type": "string"
                  },
                  "updateData": {
                    "type": "string"
                  },
                  "deleteBehaviorMaster": {
                    "type": "string"
                  },
                  "deleteBehaviorES": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "externalSystemId",
                  "domainType",
                  "autoScheduleEnabled"
                ],
                "x-examples": {
                  "example-1": {}
                }
              }
            }
          }
        },
        "tags": [
          "Hidden"
        ]
      }
    },
    "/sync/externalsystems/{externalSystemId}/jobconfigs/{jobId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "externalSystemId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "jobId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Your Job Configuration",
        "tags": [
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "JobConfigurationReturn",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "x-tags": [
                            "Sync"
                          ],
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "jobConfigsCount": {
                              "type": "integer"
                            }
                          }
                        },
                        "domainType": {
                          "type": "string"
                        },
                        "autoScheduleEnabled": {
                          "type": "boolean"
                        },
                        "createBehaviorMaster": {
                          "type": "string"
                        },
                        "createBehaviorES": {
                          "type": "string"
                        },
                        "createDefaultsMaster": {
                          "type": "object"
                        },
                        "createDefaultsES": {
                          "type": "object"
                        },
                        "linkBehavior": {
                          "type": "string"
                        },
                        "linkData": {
                          "type": "string"
                        },
                        "updateBehavior": {
                          "type": "string"
                        },
                        "updateData": {
                          "type": "string"
                        },
                        "deleteBehaviorMaster": {
                          "type": "string"
                        },
                        "deleteBehaviorES": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "domainType",
                        "autoScheduleEnabled"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sync-externalsystems-externalSystemId-jobconfigs-jobId",
        "description": "Get the configuration for a sync job"
      },
      "put": {
        "summary": "Update job configuration",
        "operationId": "put-sync-externalsystems-externalSystemId-jobconfigs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "": {
                      "title": "JobConfigurationReturn",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "x-tags": [
                            "Sync"
                          ],
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "jobConfigsCount": {
                              "type": "integer"
                            }
                          }
                        },
                        "domainType": {
                          "type": "string"
                        },
                        "autoScheduleEnabled": {
                          "type": "boolean"
                        },
                        "createBehaviorMaster": {
                          "type": "string"
                        },
                        "createBehaviorES": {
                          "type": "string"
                        },
                        "createDefaultsMaster": {
                          "type": "object"
                        },
                        "createDefaultsES": {
                          "type": "object"
                        },
                        "linkBehavior": {
                          "type": "string"
                        },
                        "linkData": {
                          "type": "string"
                        },
                        "updateBehavior": {
                          "type": "string"
                        },
                        "updateData": {
                          "type": "string"
                        },
                        "deleteBehaviorMaster": {
                          "type": "string"
                        },
                        "deleteBehaviorES": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "domainType",
                        "autoScheduleEnabled"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update job configuration",
        "tags": [
          "Hidden"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "JobConfiguration",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "externalSystemId": {
                    "type": "integer"
                  },
                  "domainType": {
                    "type": "string"
                  },
                  "autoScheduleEnabled": {
                    "type": "boolean"
                  },
                  "createBehaviorMaster": {
                    "type": "string"
                  },
                  "createBehaviorES": {
                    "type": "string"
                  },
                  "createDefaultsMaster": {
                    "type": "object"
                  },
                  "createDefaultsES": {
                    "type": "object"
                  },
                  "linkBehavior": {
                    "type": "string"
                  },
                  "linkData": {
                    "type": "string"
                  },
                  "updateBehavior": {
                    "type": "string"
                  },
                  "updateData": {
                    "type": "string"
                  },
                  "deleteBehaviorMaster": {
                    "type": "string"
                  },
                  "deleteBehaviorES": {
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "externalSystemId",
                  "domainType",
                  "autoScheduleEnabled"
                ],
                "x-examples": {
                  "example-1": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete job config",
        "operationId": "delete-sync-externalsystems-externalSystemId-jobconfigs-jobId",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Delete sync job config",
        "tags": [
          "Hidden"
        ]
      }
    },
    "/sync/externalsystems/{externalSystemId}/jobconfigs/{jobId}/properties": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "externalSystemId",
          "in": "path",
          "required": true,
          "description": "External System ID"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "Job Configuration ID"
        }
      ],
      "get": {
        "summary": "Fetch all Properties for This Job",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "externalSystem",
                        "domainType",
                        "properties"
                      ],
                      "properties": {
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "accessHeaderValues": {
                              "type": "object",
                              "description": "Key Value Pairs that define the access to the external system"
                            },
                            "id": {
                              "type": "number",
                              "description": "Not necessary when creating a new external system"
                            }
                          },
                          "required": [
                            "name",
                            "adapter",
                            "accessHeaderValues"
                          ],
                          "x-tags": [
                            "Sync"
                          ]
                        },
                        "domainType": {
                          "type": "string",
                          "minLength": 1
                        },
                        "properties": {
                          "type": "object",
                          "required": [
                            "propertyMappingsMasterToES",
                            "propertyMappingsESToMaster"
                          ],
                          "properties": {
                            "propertyMappingsMasterToES": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "fieldMappingId": {
                                    "type": "number"
                                  },
                                  "system": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "from": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "to": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "fromFilter": {
                                    "type": "string"
                                  },
                                  "toFilter": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "fieldMappingId",
                                  "system",
                                  "from",
                                  "to",
                                  "fromFilter",
                                  "toFilter"
                                ]
                              }
                            },
                            "propertyMappingsESToMaster": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "fieldMappingId": {
                                    "type": "number"
                                  },
                                  "system": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "from": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "to": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "fromFilter": {
                                    "type": "string"
                                  },
                                  "toFilter": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "fieldMappingId",
                                  "system",
                                  "from",
                                  "to",
                                  "fromFilter",
                                  "toFilter"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-sync-externalsystems-externalSystemId-jobconfigs-jobId-properties",
        "description": "Fetch all properties (field mapping entries), which are checked for this particular job to be synced. ",
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "put": {
        "summary": "Save Properties, Which Should Be Synced",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "externalSystem",
                        "domainType",
                        "properties"
                      ],
                      "properties": {
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "accessHeaderValues": {
                              "type": "object",
                              "description": "Key Value Pairs that define the access to the external system"
                            },
                            "id": {
                              "type": "number",
                              "description": "Not necessary when creating a new external system"
                            }
                          },
                          "required": [
                            "name",
                            "adapter",
                            "accessHeaderValues"
                          ],
                          "x-tags": [
                            "Sync"
                          ]
                        },
                        "domainType": {
                          "type": "string",
                          "minLength": 1
                        },
                        "properties": {
                          "type": "object",
                          "required": [
                            "propertyMappingsMasterToES",
                            "propertyMappingsESToMaster"
                          ],
                          "properties": {
                            "propertyMappingsMasterToES": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "fieldMappingId": {
                                    "type": "number"
                                  },
                                  "system": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "from": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "to": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "fromFilter": {
                                    "type": "string"
                                  },
                                  "toFilter": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "fieldMappingId",
                                  "system",
                                  "from",
                                  "to",
                                  "fromFilter",
                                  "toFilter"
                                ]
                              }
                            },
                            "propertyMappingsESToMaster": {
                              "type": "array",
                              "uniqueItems": true,
                              "minItems": 1,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "fieldMappingId": {
                                    "type": "number"
                                  },
                                  "system": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "from": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "to": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "fromFilter": {
                                    "type": "string"
                                  },
                                  "toFilter": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "fieldMappingId",
                                  "system",
                                  "from",
                                  "to",
                                  "fromFilter",
                                  "toFilter"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "put-sync-externalsystems-externalSystemId-jobconfigs-jobId-properties",
        "description": "Save properties (field mapping entries) for this job. Those properties will be synced.",
        "security": [
          {
            "login_token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "propertyMappingsMasterToES": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "fieldMappingId",
                        "system",
                        "from",
                        "to",
                        "fromFilter",
                        "toFilter"
                      ],
                      "properties": {
                        "fieldMappingId": {
                          "type": "number"
                        },
                        "system": {
                          "type": "string",
                          "minLength": 1
                        },
                        "from": {
                          "type": "string",
                          "minLength": 1
                        },
                        "to": {
                          "type": "string",
                          "minLength": 1
                        },
                        "fromFilter": {
                          "type": "string"
                        },
                        "toFilter": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "propertyMappingsESToMaster": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "required": [
                        "fieldMappingId",
                        "system",
                        "from",
                        "to",
                        "fromFilter",
                        "toFilter"
                      ],
                      "properties": {
                        "fieldMappingId": {
                          "type": "number"
                        },
                        "system": {
                          "type": "string",
                          "minLength": 1
                        },
                        "from": {
                          "type": "string",
                          "minLength": 1
                        },
                        "to": {
                          "type": "string",
                          "minLength": 1
                        },
                        "fromFilter": {
                          "type": "string"
                        },
                        "toFilter": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "propertyMappingsMasterToES",
                  "propertyMappingsESToMaster"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all Properties for This Job",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-sync-externalsystems-externalSystemId-jobconfigs-jobId-properties",
        "description": "Delete all saved properties for this job configuration.",
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/sync/externalsystems/{externalSystemId}/jobconfigs/{jobId}/filter": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "externalSystemId",
          "in": "path",
          "required": true,
          "description": "External System ID"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "Job Configuration ID"
        }
      ],
      "get": {
        "summary": "Fetch all entity filters for this job",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "master",
                        "es"
                      ],
                      "properties": {
                        "master": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "minLength": 1
                              },
                              "field": {
                                "type": "string",
                                "minLength": 1
                              },
                              "values": {
                                "type": "object"
                              }
                            },
                            "required": [
                              "system",
                              "field",
                              "values"
                            ]
                          }
                        },
                        "es": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "minLength": 1
                              },
                              "field": {
                                "type": "string",
                                "minLength": 1
                              },
                              "values": {
                                "type": "object"
                              }
                            },
                            "required": [
                              "system",
                              "field",
                              "values"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-sync-externalsystems-externalSystemId-jobconfigs-jobId-filter",
        "description": "Fetch all entity filters for this job.",
        "security": [
          {
            "login_token": []
          }
        ]
      },
      "put": {
        "summary": "Save entity filters",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "master",
                        "es"
                      ],
                      "properties": {
                        "master": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "minLength": 1
                              },
                              "field": {
                                "type": "string",
                                "minLength": 1
                              },
                              "values": {
                                "type": "object"
                              }
                            },
                            "required": [
                              "system",
                              "field",
                              "values"
                            ]
                          }
                        },
                        "es": {
                          "type": "array",
                          "uniqueItems": true,
                          "items": {
                            "type": "object",
                            "properties": {
                              "system": {
                                "type": "string",
                                "minLength": 1
                              },
                              "field": {
                                "type": "string",
                                "minLength": 1
                              },
                              "values": {
                                "type": "object"
                              }
                            },
                            "required": [
                              "system",
                              "field",
                              "values"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "put-sync-externalsystems-externalSystemId-jobconfigs-jobId-filter",
        "description": "Save entity filter for this job.",
        "security": [
          {
            "login_token": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "master": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "required": [
                        "system",
                        "field",
                        "values"
                      ],
                      "properties": {
                        "system": {
                          "type": "string",
                          "minLength": 1
                        },
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "values": {
                          "type": "object"
                        }
                      }
                    }
                  },
                  "es": {
                    "type": "array",
                    "uniqueItems": true,
                    "items": {
                      "required": [
                        "system",
                        "field",
                        "values"
                      ],
                      "properties": {
                        "system": {
                          "type": "string",
                          "minLength": 1
                        },
                        "field": {
                          "type": "string",
                          "minLength": 1
                        },
                        "values": {
                          "type": "object"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "master",
                  "es"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete all filter entities",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-sync-externalsystems-externalSystemId-jobconfigs-jobId-filter",
        "description": "Delete all saved filters for this job configuration.",
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/sync/externalsystems/{id}/fieldmappings/{domainType}": {
      "get": {
        "summary": "Get Mapping for Domain Type",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Field Mapping",
                      "type": "object",
                      "x-tags": [
                        "Sync"
                      ],
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": "1"
                        },
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "accessHeaderValues": {
                              "type": "object",
                              "description": "Key Value Pairs that define the access to the external system"
                            },
                            "id": {
                              "type": "number",
                              "description": "Not necessary when creating a new external system"
                            }
                          },
                          "required": [
                            "name",
                            "adapter",
                            "accessHeaderValues"
                          ],
                          "x-tags": [
                            "Sync"
                          ]
                        },
                        "domainType": {
                          "type": "string",
                          "example": "person"
                        },
                        "entries": {
                          "type": "object",
                          "required": [
                            "propertyMappingsMasterToES",
                            "propertyMappingsESToMaster"
                          ],
                          "properties": {
                            "propertyMappingsMasterToES": {
                              "title": "Field Mapping Entry",
                              "type": "object",
                              "x-tags": [
                                "Sync"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "system": {
                                  "type": "string",
                                  "example": "master",
                                  "enum": [
                                    "master",
                                    "externalSystem"
                                  ]
                                },
                                "from": {
                                  "type": "string"
                                },
                                "to": {
                                  "type": "string"
                                },
                                "fromFilter": {
                                  "type": "string"
                                },
                                "toFilter": {
                                  "type": "string"
                                },
                                "valueMapping": {
                                  "type": "array",
                                  "items": {}
                                },
                                "others": {
                                  "type": "array",
                                  "items": {}
                                }
                              },
                              "required": [
                                "id",
                                "system",
                                "from",
                                "to"
                              ]
                            },
                            "propertyMappingsESToMaster": {
                              "title": "Field Mapping Entry",
                              "type": "object",
                              "x-tags": [
                                "Sync"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "system": {
                                  "type": "string",
                                  "example": "master",
                                  "enum": [
                                    "master",
                                    "externalSystem"
                                  ]
                                },
                                "from": {
                                  "type": "string"
                                },
                                "to": {
                                  "type": "string"
                                },
                                "fromFilter": {
                                  "type": "string"
                                },
                                "toFilter": {
                                  "type": "string"
                                },
                                "valueMapping": {
                                  "type": "array",
                                  "items": {}
                                },
                                "others": {
                                  "type": "array",
                                  "items": {}
                                }
                              },
                              "required": [
                                "id",
                                "system",
                                "from",
                                "to"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "id",
                        "externalSystem",
                        "domainType",
                        "entries"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. "
          },
          "403": {
            "description": "Forbidden. Missing Sync Auths"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-sync-field-mappings",
        "description": "Get Sync Field Mappings for an external system of a specific domain type."
      },
      "delete": {
        "summary": "Delete Mapping for Domain Type",
        "tags": [
          "Hidden"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-sync-field-mappings",
        "description": "Delete Mapping for domain type of external system."
      },
      "put": {
        "summary": "Save Mapping for Domain Type",
        "tags": [
          "Sync"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Field Mapping",
                      "type": "object",
                      "x-tags": [
                        "Sync"
                      ],
                      "description": "",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": "1"
                        },
                        "externalSystem": {
                          "title": "ExternalSystem",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "adapter": {
                              "type": "string"
                            },
                            "accessHeaderValues": {
                              "type": "object",
                              "description": "Key Value Pairs that define the access to the external system"
                            },
                            "id": {
                              "type": "number",
                              "description": "Not necessary when creating a new external system"
                            }
                          },
                          "required": [
                            "name",
                            "adapter",
                            "accessHeaderValues"
                          ],
                          "x-tags": [
                            "Sync"
                          ]
                        },
                        "domainType": {
                          "type": "string",
                          "example": "person"
                        },
                        "entries": {
                          "type": "object",
                          "required": [
                            "propertyMappingsMasterToES",
                            "propertyMappingsESToMaster"
                          ],
                          "properties": {
                            "propertyMappingsMasterToES": {
                              "title": "Field Mapping Entry",
                              "type": "object",
                              "x-tags": [
                                "Sync"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "system": {
                                  "type": "string",
                                  "example": "master",
                                  "enum": [
                                    "master",
                                    "externalSystem"
                                  ]
                                },
                                "from": {
                                  "type": "string"
                                },
                                "to": {
                                  "type": "string"
                                },
                                "fromFilter": {
                                  "type": "string"
                                },
                                "toFilter": {
                                  "type": "string"
                                },
                                "valueMapping": {
                                  "type": "array",
                                  "items": {}
                                },
                                "others": {
                                  "type": "array",
                                  "items": {}
                                }
                              },
                              "required": [
                                "id",
                                "system",
                                "from",
                                "to"
                              ]
                            },
                            "propertyMappingsESToMaster": {
                              "title": "Field Mapping Entry",
                              "type": "object",
                              "x-tags": [
                                "Sync"
                              ],
                              "properties": {
                                "id": {
                                  "type": "number"
                                },
                                "system": {
                                  "type": "string",
                                  "example": "master",
                                  "enum": [
                                    "master",
                                    "externalSystem"
                                  ]
                                },
                                "from": {
                                  "type": "string"
                                },
                                "to": {
                                  "type": "string"
                                },
                                "fromFilter": {
                                  "type": "string"
                                },
                                "toFilter": {
                                  "type": "string"
                                },
                                "valueMapping": {
                                  "type": "array",
                                  "items": {}
                                },
                                "others": {
                                  "type": "array",
                                  "items": {}
                                }
                              },
                              "required": [
                                "id",
                                "system",
                                "from",
                                "to"
                              ]
                            }
                          }
                        }
                      },
                      "required": [
                        "id",
                        "externalSystem",
                        "domainType",
                        "entries"
                      ]
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "put-sync-field-mappings",
        "description": "Save Mapping for External System of Domain Type. Existing mappings will be removed beforehand.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "propertyMappingsMasterToES": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "fromFilter": {
                          "type": "string"
                        },
                        "toFilter": {
                          "type": "string"
                        },
                        "valueMapping": {
                          "type": "array",
                          "items": {}
                        },
                        "others": {
                          "type": "array",
                          "items": {}
                        }
                      }
                    }
                  },
                  "propertyMappingsESToMaster": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        },
                        "fromFilter": {
                          "type": "string"
                        },
                        "toFilter": {
                          "type": "string"
                        },
                        "valueMapping": {
                          "type": "array",
                          "items": {}
                        },
                        "others": {
                          "type": "array",
                          "items": {}
                        }
                      }
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "domainType": "person",
                    "propertyMappingsMasterToES": [
                      {
                        "from": "lastName",
                        "to": "nachname"
                      },
                      {
                        "from": "firstName",
                        "to": "vorname"
                      },
                      {
                        "from": "sexId",
                        "to": "geschlecht",
                        "valueMapping": {
                          "unbekannt": [
                            "0"
                          ],
                          "männlich": [
                            "1"
                          ],
                          "weiblich": [
                            "2"
                          ],
                          "divers": [
                            "1"
                          ]
                        }
                      },
                      {
                        "from": "status",
                        "to": "kategorie",
                        "valueMapping": {
                          "1": [
                            1
                          ],
                          "2": [
                            2
                          ],
                          "5": [
                            3
                          ]
                        },
                        "others": [
                          0,
                          4
                        ]
                      },
                      {
                        "from": "groups",
                        "fromAttributes": {
                          "id": 36
                        },
                        "to": "kategorie",
                        "valueMapping": {
                          "15": [
                            757
                          ],
                          "16": [
                            758
                          ]
                        },
                        "others": [
                          null,
                          759,
                          760
                        ]
                      }
                    ],
                    "propertyMappingsESToMaster": [
                      {
                        "from": "nachname",
                        "to": "lastName"
                      },
                      {
                        "from": "vorname",
                        "to": "firstName"
                      },
                      {
                        "from": "geschlecht",
                        "to": "sexId",
                        "valueMapping": {
                          "0": [
                            "unbekannt",
                            "divers"
                          ],
                          "1": [
                            "männlich"
                          ],
                          "2": [
                            "weiblich"
                          ]
                        },
                        "others": [
                          "alien",
                          "gott"
                        ]
                      },
                      {
                        "from": "kategorie",
                        "to": "status",
                        "valueMapping": {
                          "1": [
                            1
                          ],
                          "2": [
                            2,
                            4
                          ],
                          "3": [
                            5
                          ]
                        },
                        "others": [
                          0,
                          4
                        ]
                      },
                      {
                        "from": "kategorie",
                        "to": "group",
                        "toAttributes": {
                          "id": 36
                        },
                        "valueMapping": {
                          "757": [
                            15
                          ],
                          "758": [
                            16
                          ]
                        },
                        "others": [
                          null
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": ""
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "ID of External System"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "domainType",
          "in": "path",
          "required": true,
          "description": "Domatin Type"
        }
      ]
    },
    "/contactlabels": {
      "get": {
        "summary": "Get All Contact Labels",
        "tags": [
          "Contact Label"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Contact Label",
                        "type": "object",
                        "x-tags": [
                          "Contact Label"
                        ],
                        "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "description": "ID of Record",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of Label",
                            "example": "Private"
                          },
                          "nameTranslated": {
                            "type": "string",
                            "description": "Translated Name of Label",
                            "example": "Privat"
                          },
                          "sortKey": {
                            "type": "number",
                            "example": 10
                          },
                          "isDefault": {
                            "type": "boolean",
                            "example": "false",
                            "description": "Indicator if label is the default. Used for new person emails"
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "nameTranslated",
                          "sortKey",
                          "isDefault"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-contactlabels",
        "description": "Fetch all contact labels."
      },
      "post": {
        "summary": "Create new Contact Label",
        "tags": [
          "Contact Label"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Contact Label",
                      "type": "object",
                      "x-tags": [
                        "Contact Label"
                      ],
                      "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "ID of Record",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of Label",
                          "example": "Private"
                        },
                        "nameTranslated": {
                          "type": "string",
                          "description": "Translated Name of Label",
                          "example": "Privat"
                        },
                        "sortKey": {
                          "type": "number",
                          "example": 10
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": "false",
                          "description": "Indicator if label is the default. Used for new person emails"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "nameTranslated",
                        "sortKey",
                        "isDefault"
                      ]
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-contactlabels",
        "description": "Save new contact label.",
        "parameters": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Contact Label",
                    "example": "Business"
                  },
                  "sortKey": {
                    "type": "number",
                    "description": "SortKey",
                    "example": 10
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "Indicator if label is new default.",
                    "example": "false"
                  }
                },
                "required": [
                  "name",
                  "sortKey",
                  "isDefault"
                ]
              }
            }
          },
          "description": ""
        }
      }
    },
    "/contactlabels/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true,
          "description": "Contact Label ID"
        }
      ],
      "get": {
        "summary": "Get Contact Label",
        "tags": [
          "Contact Label"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Contact Label",
                      "type": "object",
                      "x-tags": [
                        "Contact Label"
                      ],
                      "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "ID of Record",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of Label",
                          "example": "Private"
                        },
                        "nameTranslated": {
                          "type": "string",
                          "description": "Translated Name of Label",
                          "example": "Privat"
                        },
                        "sortKey": {
                          "type": "number",
                          "example": 10
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": "false",
                          "description": "Indicator if label is the default. Used for new person emails"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "nameTranslated",
                        "sortKey",
                        "isDefault"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-contactlabel",
        "description": "Fetch one specific contact label."
      },
      "put": {
        "summary": "Update Contact Label",
        "tags": [
          "Contact Label"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Contact Label",
                      "type": "object",
                      "x-tags": [
                        "Contact Label"
                      ],
                      "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "description": "ID of Record",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of Label",
                          "example": "Private"
                        },
                        "nameTranslated": {
                          "type": "string",
                          "description": "Translated Name of Label",
                          "example": "Privat"
                        },
                        "sortKey": {
                          "type": "number",
                          "example": 10
                        },
                        "isDefault": {
                          "type": "boolean",
                          "example": "false",
                          "description": "Indicator if label is the default. Used for new person emails"
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "nameTranslated",
                        "sortKey",
                        "isDefault"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "put-contactlabel",
        "description": "Update contact label.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of Contact Label"
                  },
                  "sortKey": {
                    "type": "number",
                    "description": "SortKey"
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "Indicator if label is new default."
                  }
                },
                "required": [
                  "name",
                  "sortKey",
                  "isDefault"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "delete": {
        "summary": "Delete Contact Label",
        "tags": [
          "Contact Label"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "delete-contactlabel",
        "description": "Delete a contact label."
      }
    },
    "/groups/{groupId}/meetings/{meetingId}/members": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "groupId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "meetingId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Group Meeting Members",
        "tags": [
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "",
                        "type": "object",
                        "x-tags": [
                          "Hidden"
                        ],
                        "properties": {
                          "member": {
                            "type": "object",
                            "properties": {
                              "personId": {
                                "type": "integer"
                              },
                              "person": {
                                "type": "object",
                                "properties": {
                                  "titel": {
                                    "type": "string"
                                  },
                                  "domainType": {
                                    "type": "string",
                                    "enum": [
                                      "person"
                                    ]
                                  },
                                  "domainIdentifier": {
                                    "type": "string"
                                  },
                                  "apiUrl": {
                                    "type": "string"
                                  },
                                  "frontendUrl": {
                                    "type": "string"
                                  },
                                  "imageUrl": {
                                    "type": "string"
                                  },
                                  "domainAttributes": {
                                    "type": "object",
                                    "properties": {
                                      "firstName": {
                                        "type": "string"
                                      },
                                      "lastName": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "example": {
                                  "title": "John Smith",
                                  "domainType": "person",
                                  "domainIdentifier": "116",
                                  "apiUrl": "http://churchtools.test/api/persons/116",
                                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                                  "imageUrl": "",
                                  "domainAttributes": [
                                    {
                                      "firstName": "John",
                                      "lastName": "Smith"
                                    }
                                  ]
                                }
                              },
                              "groupTypeRoleId": {
                                "type": "integer"
                              },
                              "comment": {
                                "type": "string"
                              },
                              "memberStartDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "memberEndDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "waitinglistPos": {
                                "type": "integer",
                                "nullable": true
                              }
                            }
                          },
                          "isCheckedIn": {
                            "type": "boolean"
                          }
                        },
                        "title": ""
                      }
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "integer"
                        },
                        "totalCheckedIn": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-groups-groupId-meetings-meetingId-members",
        "description": "Get all group members that the current user can see and is able to check in."
      }
    },
    "/groups/{groupId}/meetings/{meetingId}/members/{memberId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "groupId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "meetingId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "memberId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Revoke checkin",
        "tags": [
          "Group"
        ],
        "responses": {
          "204": {
            "description": "OK"
          }
        },
        "operationId": "delete-groups-groupId-meetings-meetingId-members-memberId",
        "description": "Revoke the checkin for a previously checked-in group member."
      }
    },
    "/event/masterdata": {
      "get": {
        "summary": "Fetch MasterData for Module \"Event\"",
        "tags": [
          "MasterData",
          "Event"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "EventMasterData",
                  "type": "object",
                  "x-tags": [
                    "MasterData",
                    "Event"
                  ],
                  "description": "",
                  "properties": {
                    "data": {
                      "type": "object",
                      "required": [
                        "absenceReasons",
                        "songCategories"
                      ],
                      "properties": {
                        "absenceReasons": {
                          "type": "array",
                          "items": {
                            "title": "Absence Reason",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "nameTranslated": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "nameTranslated",
                              "sortKey"
                            ],
                            "x-tags": [
                              "Absence"
                            ]
                          }
                        },
                        "songCategories": {
                          "type": "array",
                          "items": {
                            "title": "Song Category",
                            "type": "object",
                            "x-tags": [
                              "Song"
                            ],
                            "description": "",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "nameTranslated": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "number"
                              },
                              "campusId": {
                                "type": [
                                  "number",
                                  "null"
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "required": [
                        "absenceReasons",
                        "songCategories"
                      ],
                      "properties": {
                        "absenceReasons": {
                          "type": "number",
                          "description": "Count of available absence reasons"
                        },
                        "songCategories": {
                          "type": "number",
                          "description": "Count of available song categories"
                        }
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-event-masterdata",
        "description": "The master data are the backbone of ChurchTools. This endpoint returns all data for that module to work with. Different endpoints don't include the master data directly but only state the ID for this data and this endpoint provides the data with all its details."
      }
    },
    "/persons/{personId}/absences": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "personId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch all absences for a person",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Absence",
                        "type": "object",
                        "description": "Absence for a person, like vacation or sickness.",
                        "x-tags": [
                          "Absence"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1,
                            "description": "ID of Record"
                          },
                          "comment": {
                            "type": "string",
                            "example": "Holiday",
                            "description": "Name, description for absence"
                          },
                          "absenceReason": {
                            "title": "Absence Reason",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "nameTranslated": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "nameTranslated",
                              "sortKey"
                            ],
                            "x-tags": [
                              "Absence"
                            ]
                          },
                          "startTime": {
                            "type": "string",
                            "nullable": true,
                            "format": "date-time",
                            "example": "2020-11-18T23:00:00Z",
                            "description": "When this absence begins. Is null if absence is all-day."
                          },
                          "endTime": {
                            "type": "string",
                            "nullable": true,
                            "description": "When this absence ends. Is null if absence is all-day.",
                            "format": "date-time",
                            "example": "2020-11-19T23:00:00Z"
                          },
                          "startDate": {
                            "type": "string",
                            "example": "2020-11-18",
                            "format": "date",
                            "description": "When this absence begins."
                          },
                          "endDate": {
                            "type": "string",
                            "example": "2020-11-19",
                            "format": "date",
                            "description": "When this absence ends."
                          }
                        },
                        "required": [
                          "id",
                          "comment",
                          "absenceReason",
                          "startDate",
                          "endDate"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-persons-absences",
        "description": "This endpoint returns absences for a person. Absences are sorted by startDate that means, the newest absence is first.\n\nThe endpoint uses a time window. If no query parameter are present only absences between two weeks ago and two weeks in the future are returned.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-11-11"
            },
            "in": "query",
            "name": "from_date",
            "description": "Return absences starting from this date."
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-12-01"
            },
            "in": "query",
            "name": "to_date",
            "description": "Return absences till this date."
          }
        ],
        "tags": [
          "Absence"
        ]
      },
      "post": {
        "summary": "Create new absence for person",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Absence",
                      "type": "object",
                      "description": "Absence for a person, like vacation or sickness.",
                      "x-tags": [
                        "Absence"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "description": "ID of Record"
                        },
                        "comment": {
                          "type": "string",
                          "example": "Holiday",
                          "description": "Name, description for absence"
                        },
                        "absenceReason": {
                          "title": "Absence Reason",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "nameTranslated": {
                              "type": "string"
                            },
                            "sortKey": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "nameTranslated",
                            "sortKey"
                          ],
                          "x-tags": [
                            "Absence"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "nullable": true,
                          "format": "date-time",
                          "example": "2020-11-18T23:00:00Z",
                          "description": "When this absence begins. Is null if absence is all-day."
                        },
                        "endTime": {
                          "type": "string",
                          "nullable": true,
                          "description": "When this absence ends. Is null if absence is all-day.",
                          "format": "date-time",
                          "example": "2020-11-19T23:00:00Z"
                        },
                        "startDate": {
                          "type": "string",
                          "example": "2020-11-18",
                          "format": "date",
                          "description": "When this absence begins."
                        },
                        "endDate": {
                          "type": "string",
                          "example": "2020-11-19",
                          "format": "date",
                          "description": "When this absence ends."
                        }
                      },
                      "required": [
                        "id",
                        "comment",
                        "absenceReason",
                        "startDate",
                        "endDate"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-persons-absences",
        "description": "Save new absence for this person.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string",
                    "example": "Vaccation with Family"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-11-12",
                    "description": "Date used for all-day absences. If startTime is present, startDate is ignored."
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-11-15",
                    "description": "Date used for all-day absences. If endTime is present, endDate is ignored."
                  },
                  "startTime": {
                    "type": "string",
                    "example": "2020-11-20T15:00:00Z",
                    "format": "date-time"
                  },
                  "endTime": {
                    "type": "string",
                    "example": "2020-11-30T15:00:00Z",
                    "format": "date-time"
                  },
                  "absenceReasonId": {
                    "type": "integer",
                    "example": 1,
                    "description": "ID of absence reason."
                  }
                },
                "required": [
                  "comment",
                  "absenceReasonId"
                ]
              }
            }
          },
          "description": "Absences can be all-day or with a specific time. Either `startDate`, `endDate`  or `startTime`, `endTime` MUST be present. If `*Time` is given, the `*Date` value will be ignored."
        },
        "tags": [
          "Absence"
        ]
      }
    },
    "/persons/{personId}/absences/{id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "personId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch one absence",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Absence",
                      "type": "object",
                      "description": "Absence for a person, like vacation or sickness.",
                      "x-tags": [
                        "Absence"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "description": "ID of Record"
                        },
                        "comment": {
                          "type": "string",
                          "example": "Holiday",
                          "description": "Name, description for absence"
                        },
                        "absenceReason": {
                          "title": "Absence Reason",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "nameTranslated": {
                              "type": "string"
                            },
                            "sortKey": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "nameTranslated",
                            "sortKey"
                          ],
                          "x-tags": [
                            "Absence"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "nullable": true,
                          "format": "date-time",
                          "example": "2020-11-18T23:00:00Z",
                          "description": "When this absence begins. Is null if absence is all-day."
                        },
                        "endTime": {
                          "type": "string",
                          "nullable": true,
                          "description": "When this absence ends. Is null if absence is all-day.",
                          "format": "date-time",
                          "example": "2020-11-19T23:00:00Z"
                        },
                        "startDate": {
                          "type": "string",
                          "example": "2020-11-18",
                          "format": "date",
                          "description": "When this absence begins."
                        },
                        "endDate": {
                          "type": "string",
                          "example": "2020-11-19",
                          "format": "date",
                          "description": "When this absence ends."
                        }
                      },
                      "required": [
                        "id",
                        "comment",
                        "absenceReason",
                        "startDate",
                        "endDate"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-persons-absence",
        "description": "Fetch one absence for person.",
        "tags": [
          "Absence"
        ]
      },
      "put": {
        "summary": "Update absence",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Absence",
                      "type": "object",
                      "description": "Absence for a person, like vacation or sickness.",
                      "x-tags": [
                        "Absence"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "description": "ID of Record"
                        },
                        "comment": {
                          "type": "string",
                          "example": "Holiday",
                          "description": "Name, description for absence"
                        },
                        "absenceReason": {
                          "title": "Absence Reason",
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "nameTranslated": {
                              "type": "string"
                            },
                            "sortKey": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "nameTranslated",
                            "sortKey"
                          ],
                          "x-tags": [
                            "Absence"
                          ]
                        },
                        "startTime": {
                          "type": "string",
                          "nullable": true,
                          "format": "date-time",
                          "example": "2020-11-18T23:00:00Z",
                          "description": "When this absence begins. Is null if absence is all-day."
                        },
                        "endTime": {
                          "type": "string",
                          "nullable": true,
                          "description": "When this absence ends. Is null if absence is all-day.",
                          "format": "date-time",
                          "example": "2020-11-19T23:00:00Z"
                        },
                        "startDate": {
                          "type": "string",
                          "example": "2020-11-18",
                          "format": "date",
                          "description": "When this absence begins."
                        },
                        "endDate": {
                          "type": "string",
                          "example": "2020-11-19",
                          "format": "date",
                          "description": "When this absence ends."
                        }
                      },
                      "required": [
                        "id",
                        "comment",
                        "absenceReason",
                        "startDate",
                        "endDate"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "put-persons-absence",
        "description": "Update absence for person.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "comment": {
                    "type": "string"
                  },
                  "absenceReasonId": {
                    "type": "number"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-11-12",
                    "description": "If startTime is present, startDate is ignored."
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2020-11-15",
                    "description": "If endTime is present, endDate is ignored."
                  },
                  "startTime": {
                    "type": "string",
                    "example": "2020-11-20T15:00:00Z",
                    "format": "date-time"
                  },
                  "endTime": {
                    "type": "string",
                    "example": "2020-11-30T15:00:00Z",
                    "format": "date-time"
                  }
                },
                "required": [
                  "comment",
                  "absenceReasonId"
                ]
              }
            }
          },
          "description": "Absences can be all-day or with a specific time. Either `startDate`, `endDate`  or `startTime`, `endTime` MUST be present. If `*Time` is given, the `*Date` value will be ignored."
        },
        "tags": [
          "Absence"
        ]
      },
      "delete": {
        "summary": "Delete absence",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-persons-absence",
        "description": "Delete absence for person",
        "tags": [
          "Absence"
        ]
      }
    },
    "/songs": {
      "get": {
        "summary": "Get All Songs",
        "tags": [
          "Song"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Song",
                        "type": "object",
                        "x-tags": [
                          "Song"
                        ],
                        "description": "Song and Arrangement information.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 5
                          },
                          "name": {
                            "type": "string",
                            "example": "Hallelujah"
                          },
                          "category": {
                            "title": "Song Category",
                            "type": "object",
                            "x-tags": [
                              "Song"
                            ],
                            "description": "",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "nameTranslated": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "number"
                              },
                              "campusId": {
                                "type": [
                                  "number",
                                  "null"
                                ]
                              }
                            }
                          },
                          "shouldPractice": {
                            "type": "boolean",
                            "example": "true"
                          },
                          "author": {
                            "type": "string",
                            "example": "Matthias Claudius"
                          },
                          "ccli": {
                            "type": "string",
                            "example": "123456789"
                          },
                          "copyright": {
                            "type": "string",
                            "example": "Public Domain"
                          },
                          "note": {
                            "type": "string",
                            "example": "Old but Gold"
                          },
                          "arrangements": {
                            "type": "array",
                            "description": "All arrangements for that song",
                            "items": {
                              "title": "Arrangement",
                              "type": "object",
                              "x-tags": [
                                "Song"
                              ],
                              "description": "Details about song arrangement.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 2
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Men Voicing"
                                },
                                "isDefault": {
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "keyOfArrangement": {
                                  "type": "string",
                                  "example": "Cm"
                                },
                                "bpm": {
                                  "type": "string",
                                  "example": "120"
                                },
                                "beat": {
                                  "type": "string",
                                  "example": "4/4"
                                },
                                "duration": {
                                  "type": "number",
                                  "description": "Duration in seconds",
                                  "example": 170
                                },
                                "note": {
                                  "type": "string",
                                  "example": "Greate Arrangement for Men Voices"
                                },
                                "links": {
                                  "type": "array",
                                  "description": "List of links \"uploaded\" to that arrangement",
                                  "items": {
                                    "title": "File or Link",
                                    "type": "object",
                                    "x-tags": [
                                      "General"
                                    ],
                                    "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                                    "properties": {
                                      "domainType": {
                                        "type": "string",
                                        "example": "avatar",
                                        "description": "ChurchTools Domain Type. Where does this file belong to?"
                                      },
                                      "domainId": {
                                        "type": "string",
                                        "example": "1"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "myPicture.jpg",
                                        "description": "Name of that file, when it's been uploaded"
                                      },
                                      "filename": {
                                        "type": "string",
                                        "description": "Filename of uploaded file or name of the link",
                                        "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                                      },
                                      "fileUrl": {
                                        "type": "string",
                                        "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                                        "description": "Link to external website or link to file in ChurchTools"
                                      }
                                    }
                                  }
                                },
                                "files": {
                                  "type": "array",
                                  "description": "List of files uploaded to that arrangement",
                                  "items": {
                                    "title": "File or Link",
                                    "type": "object",
                                    "x-tags": [
                                      "General"
                                    ],
                                    "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                                    "properties": {
                                      "domainType": {
                                        "type": "string",
                                        "example": "avatar",
                                        "description": "ChurchTools Domain Type. Where does this file belong to?"
                                      },
                                      "domainId": {
                                        "type": "string",
                                        "example": "1"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "myPicture.jpg",
                                        "description": "Name of that file, when it's been uploaded"
                                      },
                                      "filename": {
                                        "type": "string",
                                        "description": "Filename of uploaded file or name of the link",
                                        "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                                      },
                                      "fileUrl": {
                                        "type": "string",
                                        "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                                        "description": "Link to external website or link to file in ChurchTools"
                                      }
                                    }
                                  }
                                },
                                "meta": {
                                  "title": "Entity Meta Data",
                                  "type": "object",
                                  "description": "Created and Modified Date of an Entity",
                                  "properties": {
                                    "createdPerson": {
                                      "type": "object",
                                      "example": 1,
                                      "description": "Person Id Who Created the Entity",
                                      "properties": {
                                        "id": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2019-05-25T11:00:00Z",
                                      "description": "Date of Creation"
                                    },
                                    "modifiedPerson": {
                                      "type": "object",
                                      "example": 1,
                                      "description": "Person Id Who Modified the Entity",
                                      "properties": {
                                        "id": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "modifiedDate": {
                                      "type": "string",
                                      "example": "2019-05-25T11:00:00Z",
                                      "description": "Date of Last Modification"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-songs",
        "description": "Get all Songs. Only those songs are returned, that the user may see and have the global permissions to view them.",
        "parameters": [
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "song_category_ids",
            "description": "Filter response by category IDs.",
            "style": "deepObject"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "ids",
            "description": "Filter by Song IDs.",
            "style": "deepObject"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "practice",
            "description": "Filter by field `shouldPractice`."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "key_of_arrangement",
            "description": "Filter by arrangement key. (Song + all Arrangements are returned, if one arrangement fulfills the filter)"
          }
        ]
      }
    },
    "/songs/{songId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "songId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Song",
        "tags": [
          "Song"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Song",
                      "type": "object",
                      "x-tags": [
                        "Song"
                      ],
                      "description": "Song and Arrangement information.",
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 5
                        },
                        "name": {
                          "type": "string",
                          "example": "Hallelujah"
                        },
                        "category": {
                          "title": "Song Category",
                          "type": "object",
                          "x-tags": [
                            "Song"
                          ],
                          "description": "",
                          "properties": {
                            "id": {
                              "type": "number"
                            },
                            "name": {
                              "type": "string"
                            },
                            "nameTranslated": {
                              "type": "string"
                            },
                            "sortKey": {
                              "type": "number"
                            },
                            "campusId": {
                              "type": [
                                "number",
                                "null"
                              ]
                            }
                          }
                        },
                        "shouldPractice": {
                          "type": "boolean",
                          "example": "true"
                        },
                        "author": {
                          "type": "string",
                          "example": "Matthias Claudius"
                        },
                        "ccli": {
                          "type": "string",
                          "example": "123456789"
                        },
                        "copyright": {
                          "type": "string",
                          "example": "Public Domain"
                        },
                        "note": {
                          "type": "string",
                          "example": "Old but Gold"
                        },
                        "arrangements": {
                          "type": "array",
                          "description": "All arrangements for that song",
                          "items": {
                            "title": "Arrangement",
                            "type": "object",
                            "x-tags": [
                              "Song"
                            ],
                            "description": "Details about song arrangement.",
                            "properties": {
                              "id": {
                                "type": "number",
                                "example": 2
                              },
                              "name": {
                                "type": "string",
                                "example": "Men Voicing"
                              },
                              "isDefault": {
                                "type": "boolean",
                                "example": "true"
                              },
                              "keyOfArrangement": {
                                "type": "string",
                                "example": "Cm"
                              },
                              "bpm": {
                                "type": "string",
                                "example": "120"
                              },
                              "beat": {
                                "type": "string",
                                "example": "4/4"
                              },
                              "duration": {
                                "type": "number",
                                "description": "Duration in seconds",
                                "example": 170
                              },
                              "note": {
                                "type": "string",
                                "example": "Greate Arrangement for Men Voices"
                              },
                              "links": {
                                "type": "array",
                                "description": "List of links \"uploaded\" to that arrangement",
                                "items": {
                                  "title": "File or Link",
                                  "type": "object",
                                  "x-tags": [
                                    "General"
                                  ],
                                  "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                                  "properties": {
                                    "domainType": {
                                      "type": "string",
                                      "example": "avatar",
                                      "description": "ChurchTools Domain Type. Where does this file belong to?"
                                    },
                                    "domainId": {
                                      "type": "string",
                                      "example": "1"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "myPicture.jpg",
                                      "description": "Name of that file, when it's been uploaded"
                                    },
                                    "filename": {
                                      "type": "string",
                                      "description": "Filename of uploaded file or name of the link",
                                      "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                                    },
                                    "fileUrl": {
                                      "type": "string",
                                      "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                                      "description": "Link to external website or link to file in ChurchTools"
                                    }
                                  }
                                }
                              },
                              "files": {
                                "type": "array",
                                "description": "List of files uploaded to that arrangement",
                                "items": {
                                  "title": "File or Link",
                                  "type": "object",
                                  "x-tags": [
                                    "General"
                                  ],
                                  "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                                  "properties": {
                                    "domainType": {
                                      "type": "string",
                                      "example": "avatar",
                                      "description": "ChurchTools Domain Type. Where does this file belong to?"
                                    },
                                    "domainId": {
                                      "type": "string",
                                      "example": "1"
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "myPicture.jpg",
                                      "description": "Name of that file, when it's been uploaded"
                                    },
                                    "filename": {
                                      "type": "string",
                                      "description": "Filename of uploaded file or name of the link",
                                      "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                                    },
                                    "fileUrl": {
                                      "type": "string",
                                      "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                                      "description": "Link to external website or link to file in ChurchTools"
                                    }
                                  }
                                }
                              },
                              "meta": {
                                "title": "Entity Meta Data",
                                "type": "object",
                                "description": "Created and Modified Date of an Entity",
                                "properties": {
                                  "createdPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Created the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "createdDate": {
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Creation"
                                  },
                                  "modifiedPerson": {
                                    "type": "object",
                                    "example": 1,
                                    "description": "Person Id Who Modified the Entity",
                                    "properties": {
                                      "id": {
                                        "type": "number"
                                      }
                                    }
                                  },
                                  "modifiedDate": {
                                    "type": "string",
                                    "example": "2019-05-25T11:00:00Z",
                                    "description": "Date of Last Modification"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-song",
        "description": "Get one Song."
      }
    },
    "/events/{eventId}/agenda/songs": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "eventId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get All Songs of Agenda",
        "tags": [
          "Song",
          "Event"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Song",
                        "type": "object",
                        "x-tags": [
                          "Song"
                        ],
                        "description": "Song and Arrangement information.",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 5
                          },
                          "name": {
                            "type": "string",
                            "example": "Hallelujah"
                          },
                          "category": {
                            "title": "Song Category",
                            "type": "object",
                            "x-tags": [
                              "Song"
                            ],
                            "description": "",
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "nameTranslated": {
                                "type": "string"
                              },
                              "sortKey": {
                                "type": "number"
                              },
                              "campusId": {
                                "type": [
                                  "number",
                                  "null"
                                ]
                              }
                            }
                          },
                          "shouldPractice": {
                            "type": "boolean",
                            "example": "true"
                          },
                          "author": {
                            "type": "string",
                            "example": "Matthias Claudius"
                          },
                          "ccli": {
                            "type": "string",
                            "example": "123456789"
                          },
                          "copyright": {
                            "type": "string",
                            "example": "Public Domain"
                          },
                          "note": {
                            "type": "string",
                            "example": "Old but Gold"
                          },
                          "arrangements": {
                            "type": "array",
                            "description": "All arrangements for that song",
                            "items": {
                              "title": "Arrangement",
                              "type": "object",
                              "x-tags": [
                                "Song"
                              ],
                              "description": "Details about song arrangement.",
                              "properties": {
                                "id": {
                                  "type": "number",
                                  "example": 2
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Men Voicing"
                                },
                                "isDefault": {
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "keyOfArrangement": {
                                  "type": "string",
                                  "example": "Cm"
                                },
                                "bpm": {
                                  "type": "string",
                                  "example": "120"
                                },
                                "beat": {
                                  "type": "string",
                                  "example": "4/4"
                                },
                                "duration": {
                                  "type": "number",
                                  "description": "Duration in seconds",
                                  "example": 170
                                },
                                "note": {
                                  "type": "string",
                                  "example": "Greate Arrangement for Men Voices"
                                },
                                "links": {
                                  "type": "array",
                                  "description": "List of links \"uploaded\" to that arrangement",
                                  "items": {
                                    "title": "File or Link",
                                    "type": "object",
                                    "x-tags": [
                                      "General"
                                    ],
                                    "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                                    "properties": {
                                      "domainType": {
                                        "type": "string",
                                        "example": "avatar",
                                        "description": "ChurchTools Domain Type. Where does this file belong to?"
                                      },
                                      "domainId": {
                                        "type": "string",
                                        "example": "1"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "myPicture.jpg",
                                        "description": "Name of that file, when it's been uploaded"
                                      },
                                      "filename": {
                                        "type": "string",
                                        "description": "Filename of uploaded file or name of the link",
                                        "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                                      },
                                      "fileUrl": {
                                        "type": "string",
                                        "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                                        "description": "Link to external website or link to file in ChurchTools"
                                      }
                                    }
                                  }
                                },
                                "files": {
                                  "type": "array",
                                  "description": "List of files uploaded to that arrangement",
                                  "items": {
                                    "title": "File or Link",
                                    "type": "object",
                                    "x-tags": [
                                      "General"
                                    ],
                                    "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                                    "properties": {
                                      "domainType": {
                                        "type": "string",
                                        "example": "avatar",
                                        "description": "ChurchTools Domain Type. Where does this file belong to?"
                                      },
                                      "domainId": {
                                        "type": "string",
                                        "example": "1"
                                      },
                                      "name": {
                                        "type": "string",
                                        "example": "myPicture.jpg",
                                        "description": "Name of that file, when it's been uploaded"
                                      },
                                      "filename": {
                                        "type": "string",
                                        "description": "Filename of uploaded file or name of the link",
                                        "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                                      },
                                      "fileUrl": {
                                        "type": "string",
                                        "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                                        "description": "Link to external website or link to file in ChurchTools"
                                      }
                                    }
                                  }
                                },
                                "meta": {
                                  "title": "Entity Meta Data",
                                  "type": "object",
                                  "description": "Created and Modified Date of an Entity",
                                  "properties": {
                                    "createdPerson": {
                                      "type": "object",
                                      "example": 1,
                                      "description": "Person Id Who Created the Entity",
                                      "properties": {
                                        "id": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "createdDate": {
                                      "type": "string",
                                      "format": "date-time",
                                      "example": "2019-05-25T11:00:00Z",
                                      "description": "Date of Creation"
                                    },
                                    "modifiedPerson": {
                                      "type": "object",
                                      "example": 1,
                                      "description": "Person Id Who Modified the Entity",
                                      "properties": {
                                        "id": {
                                          "type": "number"
                                        }
                                      }
                                    },
                                    "modifiedDate": {
                                      "type": "string",
                                      "example": "2019-05-25T11:00:00Z",
                                      "description": "Date of Last Modification"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "meta": {
                            "title": "Entity Meta Data",
                            "type": "object",
                            "description": "Created and Modified Date of an Entity",
                            "properties": {
                              "createdPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Created the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "createdDate": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Creation"
                              },
                              "modifiedPerson": {
                                "type": "object",
                                "example": 1,
                                "description": "Person Id Who Modified the Entity",
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  }
                                }
                              },
                              "modifiedDate": {
                                "type": "string",
                                "example": "2019-05-25T11:00:00Z",
                                "description": "Date of Last Modification"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-songs-of-agenda",
        "description": "Get all songs of agenda for this event. Only those songs are returned, which the user may see. The user may see that the song is on the agenda, but s/he may not view all its details.",
        "security": [
          {
            "login_token": []
          }
        ]
      }
    },
    "/sync/logs": {
      "get": {
        "summary": "Get Sync Logs",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Log entry during a sync execution.",
                        "type": "object",
                        "title": "Sync Log Entry",
                        "properties": {
                          "id": {
                            "type": "number"
                          },
                          "date": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time"
                          },
                          "job": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "externalSystem"
                            ],
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "externalSystem": {
                                "type": "object",
                                "required": [
                                  "id",
                                  "name"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "number"
                                  },
                                  "name": {
                                    "type": "string",
                                    "minLength": 1
                                  }
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "minLength": 1
                          },
                          "level": {
                            "type": "string",
                            "minLength": 1
                          },
                          "messageI18n": {
                            "type": "string",
                            "minLength": 1
                          },
                          "messageArgs": {
                            "type": "object"
                          },
                          "isDryRun": {
                            "type": "boolean"
                          },
                          "domainType": {
                            "type": "string",
                            "minLength": 1
                          },
                          "domainId": {
                            "type": "string",
                            "minLength": 1
                          },
                          "sourceEntityId": {
                            "type": "string",
                            "minLength": 1
                          },
                          "system": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "id",
                          "date",
                          "job",
                          "type",
                          "level",
                          "message",
                          "isDryRun",
                          "domainType",
                          "domainId",
                          "sourceEntityId",
                          "system"
                        ]
                      }
                    },
                    "meta": {
                      "title": "MetaPagination",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "example": 17,
                              "description": "Count of total entities over all pages"
                            },
                            "limit": {
                              "type": "number",
                              "default": 10,
                              "example": 10,
                              "description": "Current limit. How many entities are listed max in data array."
                            },
                            "current": {
                              "type": "number",
                              "example": 1,
                              "description": "Number of Current Page"
                            },
                            "lastPage": {
                              "type": "number",
                              "example": 2,
                              "description": "Number of Last Page"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-sync-logs",
        "description": "Fetch all ",
        "parameters": [
          {
            "schema": {
              "type": "number",
              "example": 1,
              "default": 1
            },
            "in": "query",
            "name": "page",
            "description": "Page Number"
          },
          {
            "schema": {
              "type": "number",
              "default": "10",
              "example": "10",
              "maxLength": 100,
              "minLength": 1
            },
            "in": "query",
            "name": "limit",
            "description": "Number of Logs per Page"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "es_ids",
            "description": "Filter by External Systems"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "job_ids",
            "description": "Filter by Jobs"
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-02-01"
            },
            "in": "query",
            "name": "start_date",
            "description": "Show Logs From This Date on"
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-02-0"
            },
            "in": "query",
            "name": "end_date",
            "description": "Show Logs Until This Date"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "in": "query",
            "name": "types",
            "description": "Filter by Types"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "query",
            "description": "Search Through Log Messages"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "levels",
            "description": "the log levels"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_dry_run"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      },
      "post": {
        "summary": "Save Sync Logs",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "persisted": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "post-sync-logs",
        "description": "Save many sync log entries in one request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "logs": {
                    "type": "array",
                    "uniqueItems": true,
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "properties": {
                        "date": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "example": "2021-02-19T10:44:12Z"
                        },
                        "jobId": {
                          "type": "number"
                        },
                        "system": {
                          "type": "string",
                          "minLength": 1,
                          "enum": [
                            "es",
                            "master",
                            "both"
                          ],
                          "example": "es"
                        },
                        "level": {
                          "type": "string",
                          "minLength": 1,
                          "example": "info",
                          "enum": [
                            "debug",
                            "info",
                            "notice",
                            "warning",
                            "error",
                            "critical",
                            "alert",
                            "emergency"
                          ]
                        },
                        "isDryRun": {
                          "type": "boolean"
                        },
                        "type": {
                          "type": "string",
                          "minLength": 1,
                          "enum": [
                            "create",
                            "update",
                            "link",
                            "delete",
                            "execution"
                          ]
                        },
                        "messageKey": {
                          "type": "string",
                          "minLength": 1,
                          "description": "Translation Key"
                        },
                        "args": {
                          "type": "object",
                          "description": "Arguments for Translation Key"
                        },
                        "domainType": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "minLength": 1
                        },
                        "domainId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "minLength": 1
                        },
                        "sourceEntityId": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "minLength": 1
                        },
                        "changes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "fieldName": {
                                "type": "string",
                                "description": "Name of field. Translation Key allowed"
                              },
                              "oldValue": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "`null` if new"
                              },
                              "newValue": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "fieldAttribute": {
                                "type": "string",
                                "description": "Secondary value for FieldName. Used for Group Roles."
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "date",
                        "jobId",
                        "system",
                        "level",
                        "isDryRun",
                        "type",
                        "messageKey",
                        "args",
                        "domainType",
                        "domainId",
                        "sourceEntityId"
                      ]
                    }
                  }
                },
                "required": [
                  "logs"
                ]
              }
            }
          },
          "description": ""
        },
        "parameters": []
      }
    },
    "/sync/externalsystems/{externalSystemId}/jobconfigs/{jobId}/start": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "externalSystemId",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "jobId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Start Execution",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "post-sync-externalsystems-externalSystemId-jobconfigs-jobId-start",
        "description": "Start Execution of specific Job Configuration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "isDryRun": {
                    "type": "boolean",
                    "description": "If `true` no records will be changed, deleted, linked, created. Default: `false`"
                  },
                  "isValidationOnly": {
                    "type": "boolean",
                    "description": "If `true` configuration is validated. Default: `false`"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sync/jobconfigs": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "JobConfigurationReturn",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "externalSystem": {
                            "title": "ExternalSystem",
                            "type": "object",
                            "x-tags": [
                              "Sync"
                            ],
                            "properties": {
                              "id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "adapter": {
                                "type": "string"
                              },
                              "jobConfigsCount": {
                                "type": "integer"
                              }
                            }
                          },
                          "domainType": {
                            "type": "string"
                          },
                          "autoScheduleEnabled": {
                            "type": "boolean"
                          },
                          "createBehaviorMaster": {
                            "type": "string"
                          },
                          "createBehaviorES": {
                            "type": "string"
                          },
                          "createDefaultsMaster": {
                            "type": "object"
                          },
                          "createDefaultsES": {
                            "type": "object"
                          },
                          "linkBehavior": {
                            "type": "string"
                          },
                          "linkData": {
                            "type": "string"
                          },
                          "updateBehavior": {
                            "type": "string"
                          },
                          "updateData": {
                            "type": "string"
                          },
                          "deleteBehaviorMaster": {
                            "type": "string"
                          },
                          "deleteBehaviorES": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "domainType",
                          "autoScheduleEnabled"
                        ]
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-sync-jobconfigs",
        "description": "Get all job configs for the sync",
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "external_system_ids"
          }
        ]
      }
    },
    "/jobs": {
      "get": {
        "summary": "Your GET endpoint",
        "tags": [
          "Job"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Job",
                        "type": "object",
                        "properties": {
                          "identifier": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "domeinType": {
                            "type": "string"
                          },
                          "domainId": {
                            "type": "string"
                          },
                          "createdDate": {
                            "type": "string"
                          },
                          "modifiedDate": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "meta": {
                      "title": "Meta",
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "example": 10,
                          "description": "Size of data array."
                        }
                      },
                      "description": "Basic meta object for API repsonses."
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-jobs",
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "status"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "name"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "domain_ids"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "created_start_date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "created_end_date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "modified_start_date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "modified_end_date"
          }
        ]
      }
    },
    "/checkin/persons": {
      "put": {
        "summary": "Put existing person into group",
        "tags": [
          "Checkin"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Person",
                      "type": "object",
                      "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "securityLevelForPerson": {
                          "type": "integer",
                          "description": "Security level of the current user. The user sees fields upto this level."
                        },
                        "editSecurityLevelForPerson": {
                          "type": "integer",
                          "description": "Eidt security level of the current user. The user can edit fields upto this level."
                        },
                        "title": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstName": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "job": {
                          "type": "string",
                          "nullable": true
                        },
                        "street": {
                          "type": "string",
                          "nullable": true
                        },
                        "addressAddition": {
                          "type": "string",
                          "nullable": true
                        },
                        "zip": {
                          "type": "string",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "latitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "phonePrivate": {
                          "type": "string",
                          "nullable": true
                        },
                        "phoneWork": {
                          "type": "string",
                          "nullable": true
                        },
                        "mobile": {
                          "type": "string",
                          "nullable": true
                        },
                        "fax": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthName": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "birthplace": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "familyImageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "sexId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "cmsUserId": {
                          "type": "string",
                          "nullable": true
                        },
                        "optigemId": {
                          "type": "string",
                          "description": "String with Optigem ID or empty string if no ID is set."
                        },
                        "privacyPolicyAgreement": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "typeId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "whoId": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        "nationalityId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "familyStatusId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "weddingDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "campusId": {
                          "type": "integer"
                        },
                        "statusId": {
                          "type": "integer"
                        },
                        "departmentIds": {
                          "type": "array",
                          "description": "List of department IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "firstContact": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBelonging": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "dateOfEntry": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfResign": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBaptism": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "placeOfBaptism": {
                          "type": "string",
                          "nullable": true
                        },
                        "baptisedBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredTo": {
                          "type": "string",
                          "nullable": true
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "firstName": "Alfred",
                        "lastName": "API Tester",
                        "sexId": 1,
                        "nationalityId": 3,
                        "campusId": 0,
                        "statusId": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Group or Person not found."
          },
          "409": {
            "description": "Conflict. Group full or person already in group.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "translatedMessage": {
                          "type": "string",
                          "minLength": 1
                        },
                        "messageKey": {
                          "type": "string",
                          "minLength": 1
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        }
                      },
                      "required": [
                        "message",
                        "translatedMessage",
                        "messageKey",
                        "args",
                        "errors"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "examples": {
                  "group full": {
                    "value": {
                      "data": {
                        "message": "Group is full",
                        "translatedMessage": "Gruppe ist voll",
                        "messageKey": "group.is.full.short",
                        "args": [],
                        "errors": []
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "put-checkin-persons",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "personId": {
                    "type": "number"
                  },
                  "group": {
                    "type": "object",
                    "required": [
                      "id",
                      "ignoreGroupSize",
                      "fields",
                      "personFields"
                    ],
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "ignoreGroupSize": {
                        "type": "boolean",
                        "default": false,
                        "description": "If `true` the group size is ignored, and a person can be added to a full group."
                      },
                      "fields": {
                        "type": "object",
                        "description": "Key-Value mapping of group member fields. Key: field Id; Value: Input"
                      },
                      "personFields": {
                        "type": "object",
                        "description": "Key-Value Mapping of person fields in group. Key: Person field name; Value: Input"
                      }
                    }
                  },
                  "tagId": {
                    "type": "number"
                  }
                },
                "required": [
                  "personId",
                  "group",
                  "tagId"
                ]
              }
            }
          },
          "description": ""
        }
      },
      "post": {
        "summary": "Create new person and add to group",
        "tags": [
          "Checkin"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "title": "Person",
                      "type": "object",
                      "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
                      "x-tags": [
                        "Person"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "securityLevelForPerson": {
                          "type": "integer",
                          "description": "Security level of the current user. The user sees fields upto this level."
                        },
                        "editSecurityLevelForPerson": {
                          "type": "integer",
                          "description": "Eidt security level of the current user. The user can edit fields upto this level."
                        },
                        "title": {
                          "type": "string",
                          "nullable": true
                        },
                        "firstName": {
                          "type": "string",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "nullable": true
                        },
                        "nickname": {
                          "type": "string",
                          "nullable": true
                        },
                        "job": {
                          "type": "string",
                          "nullable": true
                        },
                        "street": {
                          "type": "string",
                          "nullable": true
                        },
                        "addressAddition": {
                          "type": "string",
                          "nullable": true
                        },
                        "zip": {
                          "type": "string",
                          "nullable": true
                        },
                        "city": {
                          "type": "string",
                          "nullable": true
                        },
                        "country": {
                          "type": "string",
                          "nullable": true
                        },
                        "latitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitude": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "latitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "longitudeLoose": {
                          "type": "number",
                          "format": "float",
                          "nullable": true
                        },
                        "phonePrivate": {
                          "type": "string",
                          "nullable": true
                        },
                        "phoneWork": {
                          "type": "string",
                          "nullable": true
                        },
                        "mobile": {
                          "type": "string",
                          "nullable": true
                        },
                        "fax": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthName": {
                          "type": "string",
                          "nullable": true
                        },
                        "birthday": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "birthplace": {
                          "type": "string",
                          "nullable": true
                        },
                        "imageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "familyImageUrl": {
                          "type": "string",
                          "nullable": true
                        },
                        "sexId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "nullable": true
                        },
                        "cmsUserId": {
                          "type": "string",
                          "nullable": true
                        },
                        "optigemId": {
                          "type": "string",
                          "description": "String with Optigem ID or empty string if no ID is set."
                        },
                        "privacyPolicyAgreement": {
                          "type": "object",
                          "properties": {
                            "date": {
                              "type": "string",
                              "format": "date",
                              "nullable": true
                            },
                            "typeId": {
                              "type": "integer",
                              "nullable": true
                            },
                            "whoId": {
                              "type": "integer",
                              "nullable": true
                            }
                          }
                        },
                        "nationalityId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "familyStatusId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "weddingDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "campusId": {
                          "type": "integer"
                        },
                        "statusId": {
                          "type": "integer"
                        },
                        "departmentIds": {
                          "type": "array",
                          "description": "List of department IDs",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "firstContact": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBelonging": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "dateOfEntry": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfResign": {
                          "type": "string",
                          "format": "date-time",
                          "nullable": true
                        },
                        "dateOfBaptism": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "placeOfBaptism": {
                          "type": "string",
                          "nullable": true
                        },
                        "baptisedBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredBy": {
                          "type": "string",
                          "nullable": true
                        },
                        "referredTo": {
                          "type": "string",
                          "nullable": true
                        },
                        "growPathId": {
                          "type": "integer",
                          "nullable": true
                        },
                        "isArchived": {
                          "type": "boolean"
                        },
                        "meta": {
                          "title": "Entity Meta Data",
                          "type": "object",
                          "description": "Created and Modified Date of an Entity",
                          "properties": {
                            "createdPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Created the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "createdDate": {
                              "type": "string",
                              "format": "date-time",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Creation"
                            },
                            "modifiedPerson": {
                              "type": "object",
                              "example": 1,
                              "description": "Person Id Who Modified the Entity",
                              "properties": {
                                "id": {
                                  "type": "number"
                                }
                              }
                            },
                            "modifiedDate": {
                              "type": "string",
                              "example": "2019-05-25T11:00:00Z",
                              "description": "Date of Last Modification"
                            }
                          }
                        }
                      },
                      "example": {
                        "id": 1,
                        "firstName": "Alfred",
                        "lastName": "API Tester",
                        "sexId": 1,
                        "nationalityId": 3,
                        "campusId": 0,
                        "statusId": 5
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Validation Error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Group not found"
          },
          "409": {
            "description": "Group is full.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "translatedMessage": {
                          "type": "string",
                          "minLength": 1
                        },
                        "messageKey": {
                          "type": "string",
                          "minLength": 1
                        },
                        "args": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "required": [],
                            "properties": {}
                          }
                        }
                      },
                      "required": [
                        "message",
                        "translatedMessage",
                        "messageKey",
                        "args",
                        "errors"
                      ]
                    }
                  },
                  "required": [
                    "data"
                  ]
                },
                "examples": {
                  "Group is full": {
                    "value": {
                      "data": {
                        "message": "Group is full",
                        "translatedMessage": "Gruppe ist voll",
                        "messageKey": "group.is.full.short",
                        "args": [],
                        "errors": []
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-checkin-persons",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "person": {
                    "type": "object",
                    "description": "See `POST /persons`"
                  },
                  "group": {
                    "type": "object",
                    "required": [
                      "id",
                      "ignoreGroupSize",
                      "fields",
                      "personFields"
                    ],
                    "properties": {
                      "id": {
                        "type": "number"
                      },
                      "ignoreGroupSize": {
                        "type": "boolean",
                        "description": "If `true` the group size is ignored, and a person can be added to a full group.",
                        "default": false
                      },
                      "fields": {
                        "type": "object",
                        "description": "Key-Value mapping of group member fields. Key: field Id; Value: Input"
                      },
                      "personFields": {
                        "type": "object",
                        "description": "Key-Value Mapping of person fields in group. Key: Person field name; Value: Input"
                      }
                    }
                  },
                  "tagId": {
                    "type": "number"
                  }
                },
                "required": [
                  "person",
                  "group",
                  "tagId"
                ]
              }
            }
          },
          "description": ""
        },
        "description": ""
      }
    },
    "/sync/executions": {
      "get": {
        "summary": "Statistical Information about Sync Executions",
        "tags": [
          "Sync",
          "Hidden"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "NOTICE": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "executionId": {
                            "type": "string",
                            "minLength": 1
                          },
                          "jobId": {
                            "type": "number"
                          },
                          "startDate": {
                            "type": "string",
                            "minLength": 1
                          },
                          "endDate": {
                            "type": "string",
                            "minLength": 1
                          },
                          "status": {
                            "type": "string",
                            "minLength": 1
                          },
                          "errorCount": {
                            "type": "int"
                          },
                          "both": {
                            "type": "object",
                            "properties": {
                              "create": {
                                "type": "number"
                              },
                              "delete": {
                                "type": "number"
                              },
                              "link": {
                                "type": "number"
                              },
                              "update": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "create",
                              "delete",
                              "link",
                              "update"
                            ]
                          },
                          "es": {
                            "type": "object",
                            "properties": {
                              "create": {
                                "type": "number"
                              },
                              "delete": {
                                "type": "number"
                              },
                              "update": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "create",
                              "delete",
                              "update"
                            ]
                          },
                          "master": {
                            "type": "object",
                            "properties": {
                              "create": {
                                "type": "number"
                              },
                              "delete": {
                                "type": "number"
                              },
                              "update": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "create",
                              "delete",
                              "update"
                            ]
                          },
                          "isDryRun": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "executionId",
                          "jobId",
                          "startDate",
                          "endDate",
                          "status"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "required": [
                        "count",
                        "pagination"
                      ],
                      "properties": {
                        "count": {
                          "type": "number"
                        },
                        "pagination": {
                          "type": "object",
                          "required": [
                            "total",
                            "limit",
                            "current",
                            "lastPage"
                          ],
                          "properties": {
                            "total": {
                              "type": "number"
                            },
                            "limit": {
                              "type": "number"
                            },
                            "current": {
                              "type": "number"
                            },
                            "lastPage": {
                              "type": "number"
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "NOTICE",
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-sync-executions",
        "description": "Fetch statistical information about sync executions, like count of created entities, linked ones, etc.\n\nResult is ordered by execution start date.",
        "parameters": [
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "es_ids",
            "description": "Filter by external system"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "job_ids",
            "description": "Filter by sync job configuration"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "start_date",
            "description": "Return executions after that date"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "end_date",
            "description": "Return executions before that date"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "statuses",
            "description": "Filter by status"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "page",
            "description": "Query page"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "limit",
            "description": "Number of results per page"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "is_dry_run"
          }
        ]
      }
    },
    "/persons/birthdays": {
      "get": {
        "summary": "Fetch Birthdays",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "Birthdays",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "uniqueItems": true,
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Type of Date",
                            "example": "birthday"
                          },
                          "date": {
                            "type": "string",
                            "minLength": 1,
                            "description": "Actually birthday"
                          },
                          "age": {
                            "type": "number",
                            "description": "Calculated age. (see note to that endpoint)"
                          },
                          "person": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "minLength": 1
                              },
                              "domainType": {
                                "type": "string",
                                "minLength": 1
                              },
                              "domainIdentifier": {
                                "type": "string",
                                "minLength": 1
                              },
                              "apiUrl": {
                                "type": "string",
                                "minLength": 1
                              },
                              "frontendUrl": {
                                "type": "string",
                                "minLength": 1
                              },
                              "imageUrl": {
                                "type": "string"
                              },
                              "domainAttributes": {
                                "type": "object",
                                "required": [
                                  "firstName",
                                  "lastName",
                                  "guid"
                                ],
                                "properties": {
                                  "firstName": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "minLength": 1
                                  },
                                  "guid": {
                                    "type": "string",
                                    "minLength": 1
                                  }
                                }
                              }
                            },
                            "required": [
                              "title",
                              "domainType",
                              "domainIdentifier",
                              "apiUrl",
                              "frontendUrl",
                              "imageUrl",
                              "domainAttributes"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "date",
                          "age"
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "required": [
                        "count"
                      ],
                      "properties": {
                        "count": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "get-persons-birthdays",
        "description": "This endpoint returns Birthdays within a specific time interval. The returned objects are ordered by MONTH-DAY, where the first birthday in the list, is the one next from the start date.\n\nThe API also returns the `age` of the birthday. That age is calculated based on the time interval. That means, it is not the current age and also not the next birthday, but the age, which the person had/will have with the end of the time interval.\n\n\nThe time intervall (`start_date`, `end_date`) may not be large than one year.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2000-01-01",
              "default": "yesterday"
            },
            "in": "query",
            "name": "start_date",
            "description": "Birthdays from that date on"
          },
          {
            "schema": {
              "type": "string",
              "format": "date",
              "default": "in 30 Days",
              "example": "2000-12-31"
            },
            "in": "query",
            "name": "end_date",
            "description": "Birthdays up to that date"
          }
        ]
      }
    },
    "/persons/{id}/logintoken": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fetch Login Token",
        "tags": [
          "Person"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "data": "32fOWjI0BdQZwYy7OvcHT2LN9MrYsvE9MTFxcPJlODkwWmFKsUdH3XaVypiu8J1gaHTdDoN9I9fPT9NXMLckFfGf0qEC24mfZHQ1iwUcRDcofs7QCWgwS4Fm1uDGNMI0vOQIol1OCumUj2I907mddJ4gIvhNCz00vPz3dEIgEg66iYG9petpeESFNodwX5q8xaayGC131SXY3mECca3Fpw3MxSnoDfR4V89gZthcgCFXt8sjl6z29s6KQAPRqucV"
                    }
                  },
                  "properties": {
                    "data": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Login Token",
                      "example": "32fOWjI0BdQZwYy7OvcHT2LN9MrYsvE9MTFxcPJlODkwWmFKsUdH3XaVypiu8J1gaHTdDoN9I9fPT9NXMLckFfGf0qEC24mfZHQ1iwUcRDcofs7QCWgwS4Fm1uDGNMI0vOQIol1OCumUj2I907mddJ4gIvhNCz00vPz3dEIgEg66iYG9petpeESFNodwX5q8xaayGC131SXY3mECca3Fpw3MxSnoDfR4V89gZthcgCFXt8sjl6z29s6KQAPRqucV"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Person Not Found"
          }
        },
        "operationId": "get-persons-id-logintoken",
        "description": "Fetch login token for person. If a token does not yet exists, a new one is created on the fly.",
        "x-internal": true
      }
    },
    "/persons/{personId}/archive": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "personId",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "",
        "operationId": "post-persons-personId-archive",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "archives or undos an archive of a person",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "archived": {
                    "type": "boolean",
                    "default": "true",
                    "description": "if true the person is archived, if false the archive operation is undone"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Person"
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "Login Token (Query)": {
        "type": "apiKey",
        "name": "login_token",
        "in": "query",
        "description": "Format: `?login_token=<token>`"
      },
      "Login Token (Header)": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "Format: `Login <token>`"
      }
    },
    "schemas": {
      "Person": {
        "title": "Person",
        "type": "object",
        "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
        "x-tags": [
          "Person"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "securityLevelForPerson": {
            "type": "integer",
            "description": "Security level of the current user. The user sees fields upto this level."
          },
          "editSecurityLevelForPerson": {
            "type": "integer",
            "description": "Eidt security level of the current user. The user can edit fields upto this level."
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "nickname": {
            "type": "string",
            "nullable": true
          },
          "job": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "addressAddition": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "latitude": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "longitude": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "latitudeLoose": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "longitudeLoose": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "phonePrivate": {
            "type": "string",
            "nullable": true
          },
          "phoneWork": {
            "type": "string",
            "nullable": true
          },
          "mobile": {
            "type": "string",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "nullable": true
          },
          "birthName": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "birthplace": {
            "type": "string",
            "nullable": true
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "familyImageUrl": {
            "type": "string",
            "nullable": true
          },
          "sexId": {
            "type": "integer",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "cmsUserId": {
            "type": "string",
            "nullable": true
          },
          "optigemId": {
            "type": "string",
            "description": "String with Optigem ID or empty string if no ID is set."
          },
          "privacyPolicyAgreement": {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "typeId": {
                "type": "integer",
                "nullable": true
              },
              "whoId": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          "nationalityId": {
            "type": "integer",
            "nullable": true
          },
          "familyStatusId": {
            "type": "integer",
            "nullable": true
          },
          "weddingDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "campusId": {
            "type": "integer"
          },
          "statusId": {
            "type": "integer"
          },
          "departmentIds": {
            "type": "array",
            "description": "List of department IDs",
            "items": {
              "type": "integer"
            }
          },
          "firstContact": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBelonging": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dateOfEntry": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfResign": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBaptism": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "placeOfBaptism": {
            "type": "string",
            "nullable": true
          },
          "baptisedBy": {
            "type": "string",
            "nullable": true
          },
          "referredBy": {
            "type": "string",
            "nullable": true
          },
          "referredTo": {
            "type": "string",
            "nullable": true
          },
          "growPathId": {
            "type": "integer",
            "nullable": true
          },
          "isArchived": {
            "type": "boolean"
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "firstName": "Alfred",
          "lastName": "API Tester",
          "sexId": 1,
          "nationalityId": 3,
          "campusId": 0,
          "statusId": 5
        }
      },
      "PersonSetting": {
        "description": "Piece of meta information about a person, like is this person using two factor authentication or does she want service remind mails.",
        "type": "object",
        "properties": {
          "module": {
            "type": "string"
          },
          "attribute": {
            "type": "string"
          },
          "value": {
            "description": "Mixed content. Each setting has its own type.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "array"
              },
              {
                "type": "object"
              }
            ]
          }
        },
        "example": {
          "module": "churchcore",
          "attribute": "saml-id",
          "value": 99
        }
      },
      "Group": {
        "type": "object",
        "description": "The group model structures all information in different objects: `information`, `settings`, `followUp`, and `roles`. Custom group fields are added to the root level of this model.",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "guid": {
            "type": "string",
            "example": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727"
          },
          "name": {
            "type": "string",
            "example": "Smallgroup West"
          },
          "securityLevelForGroup": {
            "type": "integer",
            "description": "You can see group fields up to this security level.",
            "example": 3
          },
          "information": {
            "type": "object",
            "properties": {
              "imageUrl": {
                "default": null,
                "nullable": true,
                "type": "string"
              },
              "dateOfFoundation": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "endDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "meetingTime": {
                "type": "string",
                "nullable": true
              },
              "weekday": {
                "type": "integer",
                "nullable": true,
                "description": "The number of the weekday. Starting with 0 = Sunday, 1 = Monday, ..."
              },
              "groupCategoryId": {
                "nullable": true,
                "type": "integer"
              },
              "ageGroups": {
                "type": "array",
                "items": {
                  "type": "integer"
                },
                "example": [
                  1,
                  2
                ]
              },
              "targetGroupId": {
                "nullable": true,
                "type": "integer"
              },
              "maxMembers": {
                "type": "integer",
                "nullable": true
              },
              "groupTypeId": {
                "type": "integer"
              },
              "groupStatusId": {
                "type": "integer"
              },
              "note": {
                "type": "string"
              },
              "campusId": {
                "nullable": true,
                "type": "integer"
              },
              "chatStatus": {
                "description": "status of group chat",
                "type": "string",
                "example": "STARTED"
              }
            }
          },
          "settings": {
            "type": "object",
            "properties": {
              "isHidden": {
                "type": "boolean"
              },
              "isOpenForMembers": {
                "description": "Indicator if people can apply for participation.",
                "type": "boolean"
              },
              "autoAccept": {
                "description": "Indicator if applications are accepted automatically.",
                "type": "boolean"
              },
              "isPublic": {
                "type": "boolean"
              },
              "inStatistic": {
                "description": "Show in statistics.",
                "type": "boolean"
              },
              "groupMeeting": {
                "type": "object",
                "properties": {
                  "autoCreate": {
                    "description": "Create weekly group meetings.",
                    "type": "boolean"
                  },
                  "templateId": {
                    "description": "Group template used for meetings.",
                    "type": "integer",
                    "nullable": true
                  }
                }
              },
              "informLeader": {
                "description": "Inform leader via e-mail about changes.",
                "type": "boolean"
              },
              "newMember": {
                "description": "Campus, Status, Department for newly created persons.",
                "type": "object",
                "nullable": true,
                "properties": {
                  "campusId": {
                    "nullable": true,
                    "type": "integer"
                  },
                  "statusId": {
                    "nullable": true,
                    "type": "integer"
                  },
                  "departmentId": {
                    "nullable": true,
                    "type": "integer"
                  }
                }
              }
            }
          },
          "followUp": {
            "type": "object",
            "properties": {
              "typeId": {
                "type": "integer",
                "example": 1
              },
              "targetTypeId": {
                "type": "integer",
                "example": 0
              },
              "targetObjectId": {
                "type": "integer",
                "nullable": true,
                "example": null
              },
              "targetGroupMemberStatusId": {
                "type": "integer",
                "nullable": true,
                "example": null
              },
              "sendReminderMails": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of this group role."
                },
                "groupTypeRoleId": {
                  "type": "integer",
                  "description": "ID of the corresponding group type role."
                },
                "groupTypeId": {
                  "type": "integer",
                  "description": "ID of corresponding group type."
                },
                "name": {
                  "type": "string",
                  "description": "Name of role."
                },
                "shorty": {
                  "type": "string",
                  "description": "Abbreviation of the name."
                },
                "sortKey": {
                  "type": "integer",
                  "description": "Number used for sorting roles."
                },
                "toDelete": {
                  "type": "boolean",
                  "description": "Flag, if members of this role can be deleted or removed from the group."
                },
                "hasRequested": {
                  "type": "boolean",
                  "description": "Flag, if group member is requesting group access."
                },
                "isLeader": {
                  "type": "boolean",
                  "description": "Flag, this role is a leader."
                },
                "isDefault": {
                  "type": "boolean",
                  "description": "Indicator of default roles."
                },
                "isHidden": {
                  "type": "boolean",
                  "description": "Flag, if this role is hidden in groups."
                },
                "growPathId": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the grow path. The id is either given from the group type role. But a group can override the grow path. In this case the group role specific ID is used."
                },
                "forceTwoFactorAuth": {
                  "type": "boolean",
                  "description": "Flag, if members with this role have to use two factor authentication."
                },
                "isActive": {
                  "type": "boolean",
                  "description": "Flag, if this role is active in this group."
                }
              },
              "example": [
                {
                  "id": 5,
                  "groupTypeRoleId": 3,
                  "groupTypeId": 2,
                  "name": "Member",
                  "shorty": "M",
                  "sortKey": 4,
                  "toDelete": false,
                  "hasRequested": false,
                  "isLeader": false,
                  "isDefault": true,
                  "isHidden": false,
                  "growPathId": null,
                  "forceTwoFactorAuth": false,
                  "isActive": true
                },
                {
                  "id": 6,
                  "groupTypeRoleId": 4,
                  "groupTypeId": 2,
                  "name": "Leader",
                  "shorty": "L",
                  "sortKey": 2,
                  "toDelete": false,
                  "hasRequested": false,
                  "isLeader": true,
                  "isDefault": false,
                  "isHidden": false,
                  "growPathId": 2,
                  "forceTwoFactorAuth": true,
                  "isActive": true
                }
              ]
            },
            "example": [
              {
                "id": 5,
                "groupTypeRoleId": 3,
                "groupTypeId": 2,
                "name": "Member",
                "shorty": "M",
                "sortKey": 4,
                "toDelete": false,
                "hasRequested": false,
                "isLeader": false,
                "isDefault": true,
                "isHidden": false,
                "growPathId": null,
                "forceTwoFactorAuth": false,
                "isActive": true
              },
              {
                "id": 6,
                "groupTypeRoleId": 4,
                "groupTypeId": 2,
                "name": "Leader",
                "shorty": "L",
                "sortKey": 2,
                "toDelete": false,
                "hasRequested": false,
                "isLeader": true,
                "isDefault": false,
                "isHidden": false,
                "growPathId": 2,
                "forceTwoFactorAuth": true,
                "isActive": true
              }
            ]
          }
        }
      },
      "GroupMeeting": {
        "type": "object",
        "x-tags": [
          "Group"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "dateFrom": {
            "type": "string",
            "format": "date-time",
            "description": "Start of the group meeting in UTC / Zulu format"
          },
          "dateTo": {
            "type": "string",
            "format": "date-time",
            "description": "End of the group meeting in UTC / Zulu format"
          },
          "isCompleted": {
            "type": "boolean"
          }
        }
      },
      "Checkin": {
        "type": "object",
        "x-tags": [
          "Group"
        ],
        "properties": {
          "person": {
            "title": "Person DomainObject",
            "type": "object",
            "x-tags": [
              "Person"
            ],
            "description": "Person as Domain Object",
            "properties": {
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "description": "",
                    "example": "Vanessa"
                  },
                  "lastName": {
                    "type": "string",
                    "example": "Fischer",
                    "description": ""
                  },
                  "guid": {
                    "type": "string",
                    "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                    "description": "Globally Unique Identifier"
                  }
                }
              },
              "imageUrl": {
                "type": "string",
                "description": "Image Url",
                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
              },
              "frontendUrl": {
                "type": "string",
                "description": "Frontend link",
                "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
              },
              "apiUrl": {
                "type": "string",
                "description": "API Endpoint to calendar",
                "example": "http://churchtools.test/api/persons/19"
              },
              "domainType": {
                "type": "string",
                "description": "ChurchTools domain type",
                "example": "person"
              },
              "title": {
                "type": "string",
                "description": "Fullname of Person",
                "example": "Vanessa Fischer"
              },
              "domainIdentifier": {
                "type": "string",
                "example": "19",
                "description": "Person ID"
              }
            }
          },
          "group": {
            "title": "GroupDomainObject",
            "type": "object",
            "properties": {
              "imageUrl": {
                "type": "string",
                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
              },
              "frontendUrl": {
                "type": "string",
                "example": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%236/"
              },
              "apiUrl": {
                "type": "string",
                "example": "http://churchtools.test/api/groups/6"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "group"
                ]
              },
              "title": {
                "type": "string",
                "example": "Technik"
              },
              "domainIdentifier": {
                "type": "string",
                "example": "6"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "frontendUrl",
              "apiUrl",
              "title"
            ]
          },
          "groupMeeting": {
            "type": "object",
            "x-tags": [
              "Group"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "dateFrom": {
                "type": "string",
                "format": "date-time",
                "description": "Start of the group meeting in UTC / Zulu format"
              },
              "dateTo": {
                "type": "string",
                "format": "date-time",
                "description": "End of the group meeting in UTC / Zulu format"
              },
              "isCompleted": {
                "type": "boolean"
              }
            }
          },
          "totalCheckedIn": {
            "type": "integer"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of this group type role."
          },
          "groupTypeId": {
            "type": "integer",
            "description": "ID of corresponding group type."
          },
          "name": {
            "type": "string",
            "description": "Name of role."
          },
          "shorty": {
            "type": "string",
            "description": "Abbreviation of the name."
          },
          "sortKey": {
            "type": "integer",
            "description": "Number used for sorting roles."
          },
          "toDelete": {
            "type": "boolean",
            "description": "Flag, if members of this role can be deleted or removed from the group."
          },
          "hasRequested": {
            "type": "boolean",
            "description": "Flag, if group member is requesting group access."
          },
          "isLeader": {
            "type": "boolean",
            "description": "Flag, this role is a leader."
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicator of default roles."
          },
          "isHidden": {
            "type": "boolean",
            "description": "Flag, if this role is hidden in groups."
          },
          "growPathId": {
            "type": "integer",
            "nullable": true,
            "description": "ID of the grow path."
          }
        },
        "example": [
          {
            "id": 5,
            "groupTypeId": 2,
            "name": "Member",
            "shorty": "M",
            "sortKey": 4,
            "toDelete": false,
            "hasRequested": false,
            "isLeader": false,
            "isDefault": true,
            "isHidden": false,
            "growPathId": null
          },
          {
            "id": 6,
            "groupTypeId": 2,
            "name": "Leader",
            "shorty": "L",
            "sortKey": 2,
            "toDelete": false,
            "hasRequested": false,
            "isLeader": true,
            "isDefault": false,
            "isHidden": false,
            "growPathId": 2
          }
        ]
      },
      "GroupMember": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer"
          },
          "person": {
            "type": "object",
            "properties": {
              "titel": {
                "type": "string"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "person"
                ]
              },
              "domainIdentifier": {
                "type": "string"
              },
              "apiUrl": {
                "type": "string"
              },
              "frontendUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "title": "John Smith",
              "domainType": "person",
              "domainIdentifier": "116",
              "apiUrl": "http://churchtools.test/api/persons/116",
              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
              "imageUrl": "",
              "domainAttributes": [
                {
                  "firstName": "John",
                  "lastName": "Smith"
                }
              ]
            }
          },
          "groupTypeRoleId": {
            "type": "integer"
          },
          "comment": {
            "type": "string"
          },
          "memberStartDate": {
            "type": "string",
            "format": "date"
          },
          "memberEndDate": {
            "type": "string",
            "format": "date"
          },
          "waitinglistPos": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "GroupMemberShort": {
        "type": "object",
        "properties": {
          "personId": {
            "type": "integer"
          },
          "groupId": {
            "type": "integer"
          },
          "groupTypeRoleId": {
            "type": "integer"
          },
          "lastChange": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "GroupsForPerson": {
        "type": "object",
        "properties": {
          "group": {
            "type": "object",
            "properties": {
              "titel": {
                "type": "string"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "group"
                ]
              },
              "domainIdentifier": {
                "type": "string"
              },
              "apiUrl": {
                "type": "string"
              },
              "frontendUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "title": "Smallgroup Smith",
              "domainType": "group",
              "domainIdentifier": "42",
              "apiUrl": "http://churchtools.test/api/groups/42",
              "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
              "imageUrl": "",
              "domainAttributes": [
                {
                  "note": "This group is aweasome"
                }
              ]
            }
          },
          "roleId": {
            "type": "integer"
          },
          "comment": {
            "type": "string"
          },
          "memberStartDate": {
            "type": "string",
            "format": "date"
          },
          "memberEndDate": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "Status": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of status"
          },
          "name": {
            "type": "string",
            "description": "Status name"
          },
          "shorty": {
            "type": "string",
            "description": "Abbreviation of name."
          },
          "isMember": {
            "type": "boolean",
            "description": "Flag if status is member of the church"
          },
          "isSearchable": {
            "type": "boolean",
            "description": "Flag if that status is searchable"
          },
          "sortKey": {
            "type": "integer",
            "description": "Used to sort all statuses"
          },
          "securityLevelId": {
            "type": "integer",
            "description": "Only persons with that securitylevel can edit/select/delete that status"
          }
        },
        "example": {
          "id": 1,
          "name": "Mitglied",
          "shorty": "M",
          "isMember": true,
          "isSearchable": true,
          "sortKey": 10,
          "securityLevelId": 1
        }
      },
      "Campus": {
        "title": "Campus",
        "type": "object",
        "x-tags": [
          "Campus"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of campus"
          },
          "name": {
            "type": "string",
            "description": "Campus name"
          },
          "shorty": {
            "type": "string",
            "description": "Abbreviation"
          },
          "sortKey": {
            "type": "integer",
            "description": "Used to sort all campuses"
          }
        },
        "example": {
          "id": 1,
          "name": "Gersthofen",
          "shorty": "G",
          "sortKey": 10
        }
      },
      "ServiceGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sortKey": {
            "type": "integer"
          },
          "viewAll": {
            "type": "boolean"
          },
          "campusId": {
            "type": "integer",
            "nullable": true
          },
          "onlyVisibleInCampusFilter": {
            "type": "boolean"
          }
        },
        "example": {
          "id": 2,
          "name": "Program",
          "sortKey": 20,
          "viewAll": true,
          "campusId": 1,
          "onlyVisibleInCampusFilter": false
        }
      },
      "Service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "serviceGroupId": {
            "type": "integer"
          },
          "commentOnConfirmation": {
            "type": "boolean"
          },
          "sortKey": {
            "type": "integer"
          },
          "allowDecline": {
            "type": "boolean"
          },
          "allowExchange": {
            "type": "boolean"
          },
          "comment": {
            "type": "string"
          },
          "standard": {
            "type": "boolean"
          },
          "hidePersonName": {
            "type": "boolean"
          },
          "sendReminderMails": {
            "type": "boolean"
          },
          "sendServiceRequestEmails": {
            "type": "boolean"
          },
          "allowControlLiveAgenda": {
            "type": "boolean"
          },
          "groupIds": {
            "type": "string",
            "nullable": true,
            "description": "Comma separated list of group ids"
          },
          "tagIds": {
            "type": "string",
            "nullable": true,
            "description": "Comma separated list of tag ids"
          },
          "calTextTemplate": {
            "type": "string"
          },
          "allowChat": {
            "type": "boolean"
          }
        },
        "example": {
          "id": 2,
          "name": "Preaching",
          "serviceGroupId": 1,
          "commentOnConfirmation": false,
          "sortKey": 20,
          "allowDecline": true,
          "allowExchange": true,
          "comment": "",
          "standard": true,
          "hidePersonName": false,
          "sendReminderMails": true,
          "sendServiceRequestEmails": true,
          "allowControlLiveAgenda": false,
          "groupIds": "6",
          "tagIds": "8,10",
          "calTextTemplate": "",
          "allowChat": true
        }
      },
      "ServiceRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "personId": {
            "deprecated": true,
            "type": "integer"
          },
          "person": {
            "title": "Person",
            "type": "object",
            "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
            "x-tags": [
              "Person"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "securityLevelForPerson": {
                "type": "integer",
                "description": "Security level of the current user. The user sees fields upto this level."
              },
              "editSecurityLevelForPerson": {
                "type": "integer",
                "description": "Eidt security level of the current user. The user can edit fields upto this level."
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              },
              "nickname": {
                "type": "string",
                "nullable": true
              },
              "job": {
                "type": "string",
                "nullable": true
              },
              "street": {
                "type": "string",
                "nullable": true
              },
              "addressAddition": {
                "type": "string",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "country": {
                "type": "string",
                "nullable": true
              },
              "latitude": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "longitude": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "latitudeLoose": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "longitudeLoose": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "phonePrivate": {
                "type": "string",
                "nullable": true
              },
              "phoneWork": {
                "type": "string",
                "nullable": true
              },
              "mobile": {
                "type": "string",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "nullable": true
              },
              "birthName": {
                "type": "string",
                "nullable": true
              },
              "birthday": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "birthplace": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              },
              "familyImageUrl": {
                "type": "string",
                "nullable": true
              },
              "sexId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "cmsUserId": {
                "type": "string",
                "nullable": true
              },
              "optigemId": {
                "type": "string",
                "description": "String with Optigem ID or empty string if no ID is set."
              },
              "privacyPolicyAgreement": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "typeId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "whoId": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              },
              "nationalityId": {
                "type": "integer",
                "nullable": true
              },
              "familyStatusId": {
                "type": "integer",
                "nullable": true
              },
              "weddingDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "campusId": {
                "type": "integer"
              },
              "statusId": {
                "type": "integer"
              },
              "departmentIds": {
                "type": "array",
                "description": "List of department IDs",
                "items": {
                  "type": "integer"
                }
              },
              "firstContact": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfBelonging": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "dateOfEntry": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfResign": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfBaptism": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "placeOfBaptism": {
                "type": "string",
                "nullable": true
              },
              "baptisedBy": {
                "type": "string",
                "nullable": true
              },
              "referredBy": {
                "type": "string",
                "nullable": true
              },
              "referredTo": {
                "type": "string",
                "nullable": true
              },
              "growPathId": {
                "type": "integer",
                "nullable": true
              },
              "isArchived": {
                "type": "boolean"
              },
              "meta": {
                "title": "Entity Meta Data",
                "type": "object",
                "description": "Created and Modified Date of an Entity",
                "properties": {
                  "createdPerson": {
                    "type": "object",
                    "example": 1,
                    "description": "Person Id Who Created the Entity",
                    "properties": {
                      "id": {
                        "type": "number"
                      }
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-05-25T11:00:00Z",
                    "description": "Date of Creation"
                  },
                  "modifiedPerson": {
                    "type": "object",
                    "example": 1,
                    "description": "Person Id Who Modified the Entity",
                    "properties": {
                      "id": {
                        "type": "number"
                      }
                    }
                  },
                  "modifiedDate": {
                    "type": "string",
                    "example": "2019-05-25T11:00:00Z",
                    "description": "Date of Last Modification"
                  }
                }
              }
            },
            "example": {
              "id": 1,
              "firstName": "Alfred",
              "lastName": "API Tester",
              "sexId": 1,
              "nationalityId": 3,
              "campusId": 0,
              "statusId": 5
            }
          },
          "name": {
            "type": "string"
          },
          "serviceId": {
            "type": "integer"
          },
          "agreed": {
            "type": "boolean"
          },
          "isValid": {
            "type": "boolean"
          },
          "requestedDate": {
            "type": "string",
            "format": "date-time"
          },
          "requesterPersonId": {
            "deprecated": true,
            "type": "integer"
          },
          "requesterPerson": {
            "title": "Person",
            "type": "object",
            "description": "A person object includes all fields the logged in user may see depending on the security level. Additional DB fields, created by the admin, are also part of the response. Those fields have the same name as the column name.",
            "x-tags": [
              "Person"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "securityLevelForPerson": {
                "type": "integer",
                "description": "Security level of the current user. The user sees fields upto this level."
              },
              "editSecurityLevelForPerson": {
                "type": "integer",
                "description": "Eidt security level of the current user. The user can edit fields upto this level."
              },
              "title": {
                "type": "string",
                "nullable": true
              },
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              },
              "nickname": {
                "type": "string",
                "nullable": true
              },
              "job": {
                "type": "string",
                "nullable": true
              },
              "street": {
                "type": "string",
                "nullable": true
              },
              "addressAddition": {
                "type": "string",
                "nullable": true
              },
              "zip": {
                "type": "string",
                "nullable": true
              },
              "city": {
                "type": "string",
                "nullable": true
              },
              "country": {
                "type": "string",
                "nullable": true
              },
              "latitude": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "longitude": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "latitudeLoose": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "longitudeLoose": {
                "type": "number",
                "format": "float",
                "nullable": true
              },
              "phonePrivate": {
                "type": "string",
                "nullable": true
              },
              "phoneWork": {
                "type": "string",
                "nullable": true
              },
              "mobile": {
                "type": "string",
                "nullable": true
              },
              "fax": {
                "type": "string",
                "nullable": true
              },
              "birthName": {
                "type": "string",
                "nullable": true
              },
              "birthday": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "birthplace": {
                "type": "string",
                "nullable": true
              },
              "imageUrl": {
                "type": "string",
                "nullable": true
              },
              "familyImageUrl": {
                "type": "string",
                "nullable": true
              },
              "sexId": {
                "type": "integer",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "cmsUserId": {
                "type": "string",
                "nullable": true
              },
              "optigemId": {
                "type": "string",
                "description": "String with Optigem ID or empty string if no ID is set."
              },
              "privacyPolicyAgreement": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date",
                    "nullable": true
                  },
                  "typeId": {
                    "type": "integer",
                    "nullable": true
                  },
                  "whoId": {
                    "type": "integer",
                    "nullable": true
                  }
                }
              },
              "nationalityId": {
                "type": "integer",
                "nullable": true
              },
              "familyStatusId": {
                "type": "integer",
                "nullable": true
              },
              "weddingDate": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "campusId": {
                "type": "integer"
              },
              "statusId": {
                "type": "integer"
              },
              "departmentIds": {
                "type": "array",
                "description": "List of department IDs",
                "items": {
                  "type": "integer"
                }
              },
              "firstContact": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfBelonging": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "dateOfEntry": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfResign": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfBaptism": {
                "type": "string",
                "format": "date",
                "nullable": true
              },
              "placeOfBaptism": {
                "type": "string",
                "nullable": true
              },
              "baptisedBy": {
                "type": "string",
                "nullable": true
              },
              "referredBy": {
                "type": "string",
                "nullable": true
              },
              "referredTo": {
                "type": "string",
                "nullable": true
              },
              "growPathId": {
                "type": "integer",
                "nullable": true
              },
              "isArchived": {
                "type": "boolean"
              },
              "meta": {
                "title": "Entity Meta Data",
                "type": "object",
                "description": "Created and Modified Date of an Entity",
                "properties": {
                  "createdPerson": {
                    "type": "object",
                    "example": 1,
                    "description": "Person Id Who Created the Entity",
                    "properties": {
                      "id": {
                        "type": "number"
                      }
                    }
                  },
                  "createdDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-05-25T11:00:00Z",
                    "description": "Date of Creation"
                  },
                  "modifiedPerson": {
                    "type": "object",
                    "example": 1,
                    "description": "Person Id Who Modified the Entity",
                    "properties": {
                      "id": {
                        "type": "number"
                      }
                    }
                  },
                  "modifiedDate": {
                    "type": "string",
                    "example": "2019-05-25T11:00:00Z",
                    "description": "Date of Last Modification"
                  }
                }
              }
            },
            "example": {
              "id": 1,
              "firstName": "Alfred",
              "lastName": "API Tester",
              "sexId": 1,
              "nationalityId": 3,
              "campusId": 0,
              "statusId": 5
            }
          },
          "comment": {
            "type": "string"
          },
          "counter": {
            "type": "integer"
          }
        },
        "example": {
          "id": 2,
          "personId": 1,
          "person": {
            "id": 1,
            "firstName": "Alfred",
            "lastName": "API Tester",
            "sexId": 1,
            "nationalityId": 3,
            "campusId": 0,
            "statusId": 5
          },
          "name": "Alfred Tester",
          "serviceId": 2,
          "agreed": false,
          "isValid": true,
          "requestedDate": "1970-01-01T12:00:00Z",
          "requesterPersonId": 1,
          "requesterPerson": {
            "id": 1,
            "firstName": "Alfred",
            "lastName": "API Tester",
            "sexId": 1,
            "nationalityId": 3,
            "campusId": 0,
            "statusId": 5
          },
          "comment": "",
          "counter": 0
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          }
        },
        "example": {
          "id": 1,
          "name": "Super Tag",
          "count": 2
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of department"
          },
          "name": {
            "type": "string",
            "description": "Department name"
          },
          "shorty": {
            "type": "string",
            "description": "Abbreviation"
          },
          "sortKey": {
            "type": "integer",
            "description": "Used to sort all departments"
          }
        },
        "example": {
          "id": 1,
          "name": "Gemeindeliste",
          "shorty": "G",
          "sortKey": 10
        }
      },
      "File": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string"
          },
          "relativeUrl": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "showOnlyWhenEditable": {
            "type": "boolean"
          },
          "securityLevelId": {
            "type": "integer"
          },
          "size": {
            "type": "integer",
            "description": "The file size in byte"
          },
          "domainType": {
            "type": "string"
          },
          "domainId": {
            "type": "string"
          }
        },
        "example": {
          "id": 12,
          "name": "Bild.png",
          "filename": 34567890987654566000,
          "fileUrl": "https://tets.church.tools?q=file&id=12",
          "imageUrl": "http://churchtools.test/images/137/2d038328db90850b31f541ace2c6f13f0fbd65224728a8c99061156814cb40d7",
          "relativeUrl": "?q=file&id=12",
          "size": 45678,
          "domainType": "avatar",
          "domainId": 56,
          "type": "file"
        }
      },
      "Log": {
        "title": "Log",
        "type": "object",
        "x-tags": [
          "Admin"
        ],
        "description": "ChurchTools writes log messages for many events and changes. This can be an update for a person or the deletion of an event. You can use the log to debug your system and follow error messages. This is a versitile tool.",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "level": {
            "type": "integer",
            "description": "The log level indicates the importance. 1 = Warning, 2 = Notice, 3 = Info.",
            "example": 1
          },
          "date": {
            "type": "string",
            "description": "Timestamp of log",
            "format": "date-time",
            "example": "2020-05-01T20:07:36Z"
          },
          "personId": {
            "type": "integer",
            "description": "If the person ID is `-1`, that means, no person but the system itself has logged that message.",
            "example": 2
          },
          "simultePersonId": {
            "type": "integer",
            "description": "If a person is simulated by an administrator, we log the personId as well. This makes it possible to see if a person did the action or an admin, who simulated that person.",
            "example": 5,
            "nullable": true
          },
          "domainType": {
            "type": "string",
            "description": "The domain type tells us, where in ChurchTools the action was performed.",
            "example": "mail"
          },
          "domainId": {
            "type": "integer",
            "description": "Analog to the domain type, the ID is the explicit resource.",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "Help page called: 0:main (1)"
          }
        }
      },
      "AppointmentTemplate": {
        "title": "AppointmentTemplate",
        "type": "object",
        "x-tags": [
          "Calendar"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Service"
          },
          "comment": {
            "type": "string",
            "example": "With Sacrament"
          },
          "startTime": {
            "type": "string",
            "example": "10:00"
          },
          "duration": {
            "type": "integer",
            "description": "Duration in seconds",
            "example": 3600
          },
          "allDay": {
            "type": "boolean",
            "example": false
          },
          "note": {
            "type": "string",
            "example": ""
          },
          "isInternal": {
            "type": "boolean",
            "example": false
          },
          "categoryId": {
            "type": "integer",
            "example": 1
          },
          "repeatId": {
            "type": "integer",
            "example": 4
          },
          "repeatFrequence": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "repeatOptionId": {
            "type": "integer",
            "nullable": true,
            "example": null
          },
          "repeatDuration": {
            "type": "integer",
            "nullable": true,
            "example": null
          }
        }
      },
      "Agenda": {
        "title": "Agenda",
        "type": "object",
        "x-tags": [
          "Event"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 10
          },
          "name": {
            "type": "string",
            "example": "11.00 Service 25.05.2019"
          },
          "series": {
            "type": "string",
            "example": "Prophets"
          },
          "isFinal": {
            "type": "boolean",
            "example": false
          },
          "calendarId": {
            "type": "integer",
            "example": 1
          },
          "total": {
            "type": "integer",
            "description": "Total of agenda items (without headers)",
            "example": 24
          },
          "items": {
            "type": "array",
            "items": {
              "title": "Agenda Item",
              "type": "object",
              "x-tags": [
                "Event"
              ],
              "description": "",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 345
                },
                "position": {
                  "type": "integer",
                  "example": 1
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "normal",
                    "song",
                    "header"
                  ],
                  "example": "song"
                },
                "title": {
                  "type": "string",
                  "example": "Start of Worship"
                },
                "note": {
                  "type": "string",
                  "example": "Praise the Lord"
                },
                "duration": {
                  "type": "integer",
                  "description": "Duration of agenda item in seconds.",
                  "example": 315
                },
                "start": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The start time of a position is dynamically calculated based on previous items and the start time of the event.",
                  "example": "2019-05-25T11:00:00Z"
                },
                "isBeforeEvent": {
                  "type": "boolean",
                  "example": false
                },
                "responsible": {
                  "type": "object",
                  "example": {
                    "text": "[Worshipleader]",
                    "persons": [
                      {
                        "service": "[Worshipleader]",
                        "approved": true,
                        "person": {
                          "title": "Person DomainObject",
                          "type": "object",
                          "x-tags": [
                            "Person"
                          ],
                          "description": "Person as Domain Object",
                          "properties": {
                            "domainAttributes": {
                              "type": "object",
                              "properties": {
                                "firstName": {
                                  "type": "string",
                                  "description": "",
                                  "example": "Vanessa"
                                },
                                "lastName": {
                                  "type": "string",
                                  "example": "Fischer",
                                  "description": ""
                                },
                                "guid": {
                                  "type": "string",
                                  "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                  "description": "Globally Unique Identifier"
                                }
                              }
                            },
                            "imageUrl": {
                              "type": "string",
                              "description": "Image Url",
                              "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                            },
                            "frontendUrl": {
                              "type": "string",
                              "description": "Frontend link",
                              "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                            },
                            "apiUrl": {
                              "type": "string",
                              "description": "API Endpoint to calendar",
                              "example": "http://churchtools.test/api/persons/19"
                            },
                            "domainType": {
                              "type": "string",
                              "description": "ChurchTools domain type",
                              "example": "person"
                            },
                            "title": {
                              "type": "string",
                              "description": "Fullname of Person",
                              "example": "Vanessa Fischer"
                            },
                            "domainIdentifier": {
                              "type": "string",
                              "example": "19",
                              "description": "Person ID"
                            }
                          }
                        }
                      }
                    ]
                  },
                  "properties": {
                    "text": {
                      "type": "string",
                      "description": "Raw text string. You need to search-replace the placeholders yourself."
                    },
                    "persons": {
                      "description": "Array of all persons, who could be resolved from the text string. If a service has multiple positions, multiple objects are in the array with the same `service` text string. If a service is not yet set the `person` object will be null.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "service": {
                            "type": "string",
                            "description": "Name of the service, which is also the placeholder in the raw text string."
                          },
                          "approved": {
                            "type": "boolean",
                            "description": "Flat to indicate if the person has approved the service or is requested."
                          },
                          "person": {
                            "title": "Person DomainObject",
                            "type": "object",
                            "x-tags": [
                              "Person"
                            ],
                            "description": "Person as Domain Object",
                            "properties": {
                              "domainAttributes": {
                                "type": "object",
                                "properties": {
                                  "firstName": {
                                    "type": "string",
                                    "description": "",
                                    "example": "Vanessa"
                                  },
                                  "lastName": {
                                    "type": "string",
                                    "example": "Fischer",
                                    "description": ""
                                  },
                                  "guid": {
                                    "type": "string",
                                    "example": "D7AC4C66-8DA4-405A-B492-39B5870D2DB6",
                                    "description": "Globally Unique Identifier"
                                  }
                                }
                              },
                              "imageUrl": {
                                "type": "string",
                                "description": "Image Url",
                                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
                              },
                              "frontendUrl": {
                                "type": "string",
                                "description": "Frontend link",
                                "example": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%2319/"
                              },
                              "apiUrl": {
                                "type": "string",
                                "description": "API Endpoint to calendar",
                                "example": "http://churchtools.test/api/persons/19"
                              },
                              "domainType": {
                                "type": "string",
                                "description": "ChurchTools domain type",
                                "example": "person"
                              },
                              "title": {
                                "type": "string",
                                "description": "Fullname of Person",
                                "example": "Vanessa Fischer"
                              },
                              "domainIdentifier": {
                                "type": "string",
                                "example": "19",
                                "description": "Person ID"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "serviceGroupNotes": {
                  "description": "Array of notes per service group. You will only see the service groups, you are allowed to see.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "serviceGroupId": {
                        "type": "integer",
                        "example": 13
                      },
                      "note": {
                        "type": "string",
                        "example": "Start with synthy pad in background"
                      }
                    }
                  }
                },
                "song": {
                  "type": "object",
                  "description": "If the type is `song` the song object is added to this item. `normal` and `header` items do not include this object.",
                  "properties": {
                    "songId": {
                      "type": "integer",
                      "example": 11
                    },
                    "arrangementId": {
                      "type": "integer",
                      "example": 22
                    },
                    "title": {
                      "type": "string",
                      "example": "Bless the Lord"
                    },
                    "arrangement": {
                      "type": "string",
                      "example": "For Man Voice"
                    },
                    "category": {
                      "type": "string",
                      "example": "Worship"
                    },
                    "key": {
                      "type": "string",
                      "example": "G-Major"
                    },
                    "bpm": {
                      "type": "string",
                      "example": "80"
                    },
                    "defaultArrangement": {
                      "type": "string",
                      "example": "Original"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "modifiedDate": {
                      "type": "string"
                    },
                    "modifiedPid": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    }
                  }
                },
                "startTimes": {
                  "type": "object",
                  "description": "List of start times if this agenda is shared between multiple events.",
                  "properties": {
                    "eventId": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "date-time",
                      "example": "2021-03-09T13:59:00Z"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "modifiedDate": {
                "type": "string",
                "description": "Last change of that agenda"
              },
              "modifiedPerson": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "description": "Person ID, who did the last change"
                  }
                }
              }
            }
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "guid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "eventServices": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "person": {
                  "nullable": true,
                  "type": "object",
                  "properties": {
                    "titel": {
                      "type": "string"
                    },
                    "domainType": {
                      "type": "string",
                      "enum": [
                        "person"
                      ]
                    },
                    "domainIdentifier": {
                      "type": "string"
                    },
                    "apiUrl": {
                      "type": "string"
                    },
                    "frontendUrl": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "domainAttributes": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "title": "John Smith",
                    "domainType": "person",
                    "domainIdentifier": "116",
                    "apiUrl": "http://churchtools.test/api/persons/116",
                    "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                    "imageUrl": "",
                    "domainAttributes": [
                      {
                        "firstName": "John",
                        "lastName": "Smith"
                      }
                    ]
                  }
                },
                "name": {
                  "type": "string"
                },
                "serviceId": {
                  "type": "integer"
                },
                "agreed": {
                  "type": "boolean"
                },
                "isValid": {
                  "type": "boolean"
                },
                "requestedDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "requesterPerson": {
                  "nullable": true,
                  "type": "object",
                  "properties": {
                    "titel": {
                      "type": "string"
                    },
                    "domainType": {
                      "type": "string",
                      "enum": [
                        "person"
                      ]
                    },
                    "domainIdentifier": {
                      "type": "string"
                    },
                    "apiUrl": {
                      "type": "string"
                    },
                    "frontendUrl": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "domainAttributes": {
                      "type": "object",
                      "properties": {
                        "firstName": {
                          "type": "string"
                        },
                        "lastName": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "title": "John Smith",
                    "domainType": "person",
                    "domainIdentifier": "116",
                    "apiUrl": "http://churchtools.test/api/persons/116",
                    "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                    "imageUrl": "",
                    "domainAttributes": [
                      {
                        "firstName": "John",
                        "lastName": "Smith"
                      }
                    ]
                  }
                },
                "comment": {
                  "type": "string"
                },
                "counter": {
                  "type": "integer"
                },
                "allowChat": {
                  "type": "boolean"
                }
              },
              "example": {
                "id": 77,
                "person": {
                  "title": "John Smith",
                  "domainType": "person",
                  "domainIdentifier": "116",
                  "apiUrl": "http://churchtools.test/api/persons/116",
                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                  "imageUrl": "",
                  "domainAttributes": [
                    {
                      "firstName": "John",
                      "lastName": "Smith"
                    }
                  ]
                },
                "name": "John Smith",
                "serviceId": 8,
                "agreed": true,
                "isValid": true,
                "requestedDate": "2019-08-01T16:16:54Z",
                "requesterPerson": {
                  "title": "John Smith",
                  "domainType": "person",
                  "domainIdentifier": "116",
                  "apiUrl": "http://churchtools.test/api/persons/116",
                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                  "imageUrl": "",
                  "domainAttributes": [
                    {
                      "firstName": "John",
                      "lastName": "Smith"
                    }
                  ]
                },
                "comment": "I\"m in",
                "counter": 0,
                "allowChat": true
              }
            }
          }
        },
        "example": {
          "id": 10,
          "guid": "681F54E3-2EB7-40A4-84F0-EFF8E8F05727",
          "name": "Sunday Service",
          "description": "We celebrate",
          "startDate": "2019-08-06T11:00:00Z",
          "endDate": "2019-08-06T12:30:00Z",
          "items": [
            {
              "id": 77,
              "person": {
                "title": "John Smith",
                "domainType": "person",
                "domainIdentifier": "116",
                "apiUrl": "http://churchtools.test/api/persons/116",
                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                "imageUrl": "",
                "domainAttributes": [
                  {
                    "firstName": "John",
                    "lastName": "Smith"
                  }
                ]
              },
              "name": "John Smith",
              "serviceId": 8,
              "agreed": true,
              "isValid": true,
              "requestedDate": "2019-08-01T16:16:54Z",
              "requesterPerson": {
                "title": "John Smith",
                "domainType": "person",
                "domainIdentifier": "116",
                "apiUrl": "http://churchtools.test/api/persons/116",
                "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                "imageUrl": "",
                "domainAttributes": [
                  {
                    "firstName": "John",
                    "lastName": "Smith"
                  }
                ]
              },
              "comment": "I\"m in",
              "counter": 0,
              "allowChat": true
            }
          ]
        }
      },
      "TranslationKey": {
        "title": "Translation Key",
        "type": "object",
        "x-tags": [
          "Translation"
        ],
        "description": "Translation key object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 42
          },
          "key": {
            "type": "string",
            "example": "person.title"
          },
          "module": {
            "type": "string",
            "example": "app"
          },
          "updated": {
            "type": "string",
            "nullable": true,
            "description": "Last updated",
            "format": "date-time",
            "example": "2018-05-06T19:33:00Z"
          },
          "translations": {
            "type": "object",
            "properties": {
              "additionalProperties": {
                "title": "Translation",
                "type": "object",
                "x-tags": [
                  "Translation"
                ],
                "description": "Translation object",
                "properties": {
                  "translation": {
                    "type": "string",
                    "description": "The translation value for the key",
                    "example": "Der Titel der Personen"
                  },
                  "updatedByChurch": {
                    "type": "boolean",
                    "description": "Determines if the translation was updated or created by the church",
                    "example": true
                  },
                  "updated": {
                    "type": "string",
                    "nullable": true,
                    "description": "Last updated",
                    "format": "date-time",
                    "example": "2018-05-06T19:33:00Z"
                  }
                }
              }
            }
          }
        }
      },
      "Translation": {
        "title": "Translation",
        "type": "object",
        "x-tags": [
          "Translation"
        ],
        "description": "Translation object",
        "properties": {
          "translation": {
            "type": "string",
            "description": "The translation value for the key",
            "example": "Der Titel der Personen"
          },
          "updatedByChurch": {
            "type": "boolean",
            "description": "Determines if the translation was updated or created by the church",
            "example": true
          },
          "updated": {
            "type": "string",
            "nullable": true,
            "description": "Last updated",
            "format": "date-time",
            "example": "2018-05-06T19:33:00Z"
          }
        }
      },
      "Client": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "First Client"
          },
          "sortKey": {
            "type": "integer",
            "example": 1
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        }
      },
      "AccountingPeriod": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "clientId": {
            "type": "integer"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string",
            "format": "date"
          },
          "isClosed": {
            "type": "boolean"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "canUseExpertMode": {
                "type": "boolean",
                "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Buchungsjahr 2018",
          "clientId": 1,
          "startDate": "2018-01-01",
          "endDate": "2018-12-31",
          "isClosed": false,
          "permissions": {
            "canEdit": true
          }
        }
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "accountGroupId": {
            "type": "integer"
          },
          "accountingPeriodId": {
            "type": "integer"
          },
          "isDonationAccount": {
            "type": "boolean"
          },
          "isOpeningBalanceAccount": {
            "type": "boolean"
          },
          "taxeRateId": {
            "type": "integer"
          },
          "balance": {
            "type": "number",
            "format": "integer",
            "description": "Current balance of account in cent."
          },
          "permissions": {
            "type": "object",
            "properties": {
              "allowPosting": {
                "description": "Flag, if user can use this account to post a transaction.",
                "type": "boolean"
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "number": 8200,
          "name": "Donations",
          "accountGroupId": 2,
          "accountingPeriodId": 3,
          "isDonationAccount": true,
          "isOpeningBalanceAccount": false,
          "taxRateId": null,
          "balance": 20043,
          "permissions": {
            "allowPosting": true
          }
        }
      },
      "AccountType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "isBalanceAccount": {
            "type": "boolean"
          },
          "sortKey": {
            "type": "integer",
            "default": 0
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Aktiva",
          "isBalanceAccount": true,
          "sortKey": 0
        }
      },
      "AccountClass": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "accountTypeId": {
            "type": "integer"
          },
          "includeProfitLoss": {
            "type": "boolean",
            "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
          },
          "sortKey": {
            "type": "integer",
            "default": 0
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Anlagevermögen",
          "accountTypeId": 2,
          "includeProfitLoss": false,
          "sortKey": 0
        }
      },
      "AccountGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "accountClassId": {
            "type": "integer"
          },
          "isCashAssetAccount": {
            "type": "boolean"
          },
          "sortKey": {
            "type": "integer",
            "default": 0
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Sachanlagen",
          "accountClassId": 2,
          "isCashAssetAccount": false,
          "sortKey": 0
        }
      },
      "CashDiscount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "note": {
            "type": "string"
          },
          "accountId": {
            "type": "integer"
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "rate": 0.02,
          "note": "Skonto 2%",
          "accountId": 2
        }
      },
      "CostCenter": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "budget": {
            "type": "number",
            "format": "integer",
            "description": "Budget is in cent."
          },
          "budgetBalance": {
            "type": "number",
            "format": "integer",
            "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
          },
          "budgetSpent": {
            "type": "number",
            "format": "integer",
            "description": "Cost Center Expences. (Outcome - Income). In cent"
          },
          "budgetLastPeriod": {
            "type": "number",
            "format": "integer",
            "description": "Budget for the cost center with the same number in the previous accounting period."
          },
          "accountingPeriodId": {
            "type": "integer"
          },
          "group": {
            "type": "object",
            "properties": {
              "titel": {
                "type": "string"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "group"
                ]
              },
              "domainIdentifier": {
                "type": "string"
              },
              "apiUrl": {
                "type": "string"
              },
              "frontendUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "title": "Smallgroup Smith",
              "domainType": "group",
              "domainIdentifier": "42",
              "apiUrl": "http://churchtools.test/api/groups/42",
              "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
              "imageUrl": "",
              "domainAttributes": [
                {
                  "note": "This group is aweasome"
                }
              ]
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "number": 802,
          "name": "Kostenstelle Sonstige",
          "accountId": 2,
          "group": {
            "title": "Smallgroup Smith",
            "domainType": "group",
            "domainIdentifier": "42",
            "apiUrl": "http://churchtools.test/api/groups/42",
            "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
            "imageUrl": "",
            "domainAttributes": [
              {
                "note": "This group is aweasome"
              }
            ]
          },
          "budget": 3200,
          "budgetBalance": 144
        }
      },
      "TaxType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sortKey": {
            "type": "integer"
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Umsatzsteuer",
          "sortKey": 2
        }
      },
      "TaxRate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "taxTypeId": {
            "type": "integer"
          },
          "rate": {
            "type": "number",
            "format": "float"
          },
          "note": {
            "type": "string"
          },
          "accountId": {
            "type": "integer"
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "taxTypeId": 2,
          "rate": 0.19,
          "note": "Ust. 19%",
          "accountId": 3
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "documentDate": {
            "type": "string",
            "format": "date"
          },
          "documentNumber": {
            "type": "string"
          },
          "accountId": {
            "type": "integer"
          },
          "contraAccountId": {
            "type": "integer"
          },
          "amount": {
            "type": "number",
            "format": "integer",
            "description": "Value is in cent."
          },
          "note": {
            "type": "string"
          },
          "isImmutable": {
            "type": "boolean",
            "description": "If a transaction is immutable, no field can be change or deleted."
          },
          "costCenterId": {
            "type": "integer",
            "nullable": true
          },
          "donator": {
            "type": "object",
            "properties": {
              "titel": {
                "type": "string"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "person"
                ]
              },
              "domainIdentifier": {
                "type": "string"
              },
              "apiUrl": {
                "type": "string"
              },
              "frontendUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "title": "John Smith",
              "domainType": "person",
              "domainIdentifier": "116",
              "apiUrl": "http://churchtools.test/api/persons/116",
              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
              "imageUrl": "",
              "domainAttributes": [
                {
                  "firstName": "John",
                  "lastName": "Smith"
                }
              ]
            }
          },
          "donatorSpouse": {
            "type": "object",
            "properties": {
              "titel": {
                "type": "string"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "person"
                ]
              },
              "domainIdentifier": {
                "type": "string"
              },
              "apiUrl": {
                "type": "string"
              },
              "frontendUrl": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              }
            },
            "example": {
              "title": "John Smith",
              "domainType": "person",
              "domainIdentifier": "116",
              "apiUrl": "http://churchtools.test/api/persons/116",
              "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
              "imageUrl": "",
              "domainAttributes": [
                {
                  "firstName": "John",
                  "lastName": "Smith"
                }
              ]
            }
          },
          "splitTransactionId": {
            "type": "integer"
          },
          "taxRateId": {
            "type": "integer"
          },
          "taxAmount": {
            "type": "number",
            "format": "integer",
            "description": "Value is in cent."
          },
          "cashDiscountId": {
            "type": "integer"
          },
          "cashDiscountAmount": {
            "type": "number",
            "format": "integer",
            "description": "Value is in cent."
          },
          "permissions": {
            "type": "object",
            "properties": {
              "canEdit": {
                "description": "Flag if user can edit this transaction",
                "type": "boolean"
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "documentDate": "2019-01-14T00:00:00.000Z",
          "documentNumber": "3/4",
          "accountId": 2,
          "contraAccountId": 3,
          "amount": 5678,
          "note": "This is a transaction",
          "isImmutable": false,
          "costCenterId": 4,
          "donator": {
            "title": "John Smith",
            "domainType": "person",
            "domainIdentifier": "116",
            "apiUrl": "http://churchtools.test/api/persons/116",
            "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
            "imageUrl": "",
            "domainAttributes": [
              {
                "firstName": "John",
                "lastName": "Smith"
              }
            ]
          },
          "permissions": {
            "canEdit": true
          }
        }
      },
      "TransactionPurpose": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "costCenterId": {
            "type": "integer"
          },
          "purposeAccountId": {
            "type": "integer",
            "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
          },
          "sortKey": {
            "type": "integer"
          },
          "isIncome": {
            "type": "boolean"
          },
          "accountIds": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        },
        "example": {
          "id": 1,
          "name": "Der Zweck heiligt die Mittel",
          "costCenterId": 2,
          "purposeAccountId": 3,
          "sortKey": 4,
          "accountIds": [
            1,
            2,
            3
          ],
          "isIncome": true
        }
      },
      "FinanceMasterData": {
        "type": "object",
        "properties": {
          "clients": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "example": 2
                },
                "name": {
                  "type": "string",
                  "example": "First Client"
                },
                "sortKey": {
                  "type": "integer",
                  "example": 1
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              }
            }
          },
          "accountingPeriods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "clientId": {
                  "type": "integer"
                },
                "startDate": {
                  "type": "string",
                  "format": "date"
                },
                "endDate": {
                  "type": "string",
                  "format": "date"
                },
                "isClosed": {
                  "type": "boolean"
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "canUseExpertMode": {
                      "type": "boolean",
                      "description": "Flag if current user can make changes in this accounting periods, like filing new transactions and expert mode is enabled."
                    }
                  }
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "name": "Buchungsjahr 2018",
                "clientId": 1,
                "startDate": "2018-01-01",
                "endDate": "2018-12-31",
                "isClosed": false,
                "permissions": {
                  "canEdit": true
                }
              }
            }
          },
          "accounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "accountGroupId": {
                  "type": "integer"
                },
                "accountingPeriodId": {
                  "type": "integer"
                },
                "isDonationAccount": {
                  "type": "boolean"
                },
                "isOpeningBalanceAccount": {
                  "type": "boolean"
                },
                "taxeRateId": {
                  "type": "integer"
                },
                "balance": {
                  "type": "number",
                  "format": "integer",
                  "description": "Current balance of account in cent."
                },
                "permissions": {
                  "type": "object",
                  "properties": {
                    "allowPosting": {
                      "description": "Flag, if user can use this account to post a transaction.",
                      "type": "boolean"
                    }
                  }
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "number": 8200,
                "name": "Donations",
                "accountGroupId": 2,
                "accountingPeriodId": 3,
                "isDonationAccount": true,
                "isOpeningBalanceAccount": false,
                "taxRateId": null,
                "balance": 20043,
                "permissions": {
                  "allowPosting": true
                }
              }
            }
          },
          "accountTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "isBalanceAccount": {
                  "type": "boolean"
                },
                "sortKey": {
                  "type": "integer",
                  "default": 0
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "name": "Aktiva",
                "isBalanceAccount": true,
                "sortKey": 0
              }
            }
          },
          "accountClasses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "accountTypeId": {
                  "type": "integer"
                },
                "includeProfitLoss": {
                  "type": "boolean",
                  "description": "If true, an additional row is added to that class in the report, which lists the profit-loss sum."
                },
                "sortKey": {
                  "type": "integer",
                  "default": 0
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "name": "Anlagevermögen",
                "accountTypeId": 2,
                "includeProfitLoss": false,
                "sortKey": 0
              }
            }
          },
          "accountGroups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "accountClassId": {
                  "type": "integer"
                },
                "isCashAssetAccount": {
                  "type": "boolean"
                },
                "sortKey": {
                  "type": "integer",
                  "default": 0
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "name": "Sachanlagen",
                "accountClassId": 2,
                "isCashAssetAccount": false,
                "sortKey": 0
              }
            }
          },
          "cashDiscounts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "rate": {
                  "type": "number",
                  "format": "float"
                },
                "note": {
                  "type": "string"
                },
                "accountId": {
                  "type": "integer"
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "rate": 0.02,
                "note": "Skonto 2%",
                "accountId": 2
              }
            }
          },
          "costCenters": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "number": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "budget": {
                  "type": "number",
                  "format": "integer",
                  "description": "Budget is in cent."
                },
                "budgetBalance": {
                  "type": "number",
                  "format": "integer",
                  "description": "Remaining amount. (Budget - Cost Center Expenses). Budget balance is in cent."
                },
                "budgetSpent": {
                  "type": "number",
                  "format": "integer",
                  "description": "Cost Center Expences. (Outcome - Income). In cent"
                },
                "budgetLastPeriod": {
                  "type": "number",
                  "format": "integer",
                  "description": "Budget for the cost center with the same number in the previous accounting period."
                },
                "accountingPeriodId": {
                  "type": "integer"
                },
                "group": {
                  "type": "object",
                  "properties": {
                    "titel": {
                      "type": "string"
                    },
                    "domainType": {
                      "type": "string",
                      "enum": [
                        "group"
                      ]
                    },
                    "domainIdentifier": {
                      "type": "string"
                    },
                    "apiUrl": {
                      "type": "string"
                    },
                    "frontendUrl": {
                      "type": "string"
                    },
                    "imageUrl": {
                      "type": "string"
                    },
                    "domainAttributes": {
                      "type": "object",
                      "properties": {
                        "note": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "example": {
                    "title": "Smallgroup Smith",
                    "domainType": "group",
                    "domainIdentifier": "42",
                    "apiUrl": "http://churchtools.test/api/groups/42",
                    "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                    "imageUrl": "",
                    "domainAttributes": [
                      {
                        "note": "This group is aweasome"
                      }
                    ]
                  }
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "number": 802,
                "name": "Kostenstelle Sonstige",
                "accountId": 2,
                "group": {
                  "title": "Smallgroup Smith",
                  "domainType": "group",
                  "domainIdentifier": "42",
                  "apiUrl": "http://churchtools.test/api/groups/42",
                  "frontendUrl": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%2342/",
                  "imageUrl": "",
                  "domainAttributes": [
                    {
                      "note": "This group is aweasome"
                    }
                  ]
                },
                "budget": 3200,
                "budgetBalance": 144
              }
            }
          },
          "taxRates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "taxTypeId": {
                  "type": "integer"
                },
                "rate": {
                  "type": "number",
                  "format": "float"
                },
                "note": {
                  "type": "string"
                },
                "accountId": {
                  "type": "integer"
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "taxTypeId": 2,
                "rate": 0.19,
                "note": "Ust. 19%",
                "accountId": 3
              }
            }
          },
          "taxTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "sortKey": {
                  "type": "integer"
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "name": "Umsatzsteuer",
                "sortKey": 2
              }
            }
          },
          "transactionPurposes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "costCenterId": {
                  "type": "integer"
                },
                "purposeAccountId": {
                  "type": "integer",
                  "description": "This will always be a single account. But it depends on the `isIncome` flag if this is the debit or the credit account."
                },
                "sortKey": {
                  "type": "integer"
                },
                "isIncome": {
                  "type": "boolean"
                },
                "accountIds": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              },
              "example": {
                "id": 1,
                "name": "Der Zweck heiligt die Mittel",
                "costCenterId": 2,
                "purposeAccountId": 3,
                "sortKey": 4,
                "accountIds": [
                  1,
                  2,
                  3
                ],
                "isIncome": true
              }
            }
          }
        }
      },
      "WikiCategory": {
        "title": "WikiCategory",
        "type": "object",
        "x-examples": {
          "example-1": {
            "id": 0,
            "name": "Informationen und Dokumente",
            "nameTranslated": "Informationen und Dokumente",
            "sortKey": 30,
            "campusId": null,
            "inMenu": true,
            "fileAccessWithoutPermission": true
          }
        },
        "description": "",
        "x-tags": [
          "Wiki"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "sortKey": {
            "type": "integer"
          },
          "campusId": {
            "type": "integer",
            "nullable": true
          },
          "inMenu": {
            "type": "boolean"
          },
          "fileAccessWithoutPermission": {
            "type": "boolean"
          },
          "nameTranslated": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "sortKey",
          "campusId",
          "inMenu",
          "fileAccessWithoutPermission"
        ]
      },
      "WikiPage": {
        "title": "WikiPage",
        "type": "object",
        "description": "",
        "x-examples": {
          "example-1": {
            "identifier": "a01cc6dd-2ee6-4612-bf92-6ee14e6bb72c",
            "title": "Protokoll Gemeindeversammlung 02.02.2020",
            "wikiCategory": {
              "id": 5,
              "name": "Protokolle",
              "nameTranslated": "Protokolle",
              "sortKey": 1,
              "campusId": null,
              "inMenu": true,
              "fileAccessWithoutPermission": false
            },
            "version": 3,
            "text": "Punkt 1: Wasserspender in der Gemeinde",
            "onStartpage": false,
            "redirectTo": null,
            "permissions": {
              "canEdit": true
            },
            "meta": {
              "createdDate": "2020-07-17T14:35:30Z",
              "createdPerson": {
                "id": 1
              },
              "modifiedDate": "2020-07-17T14:35:30Z",
              "modifiedPerson": {
                "id": 1
              }
            }
          }
        },
        "x-tags": [
          "Wiki"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "wikiCategory": {
            "title": "WikiCategory",
            "type": "object",
            "x-examples": {
              "example-1": {
                "id": 0,
                "name": "Informationen und Dokumente",
                "nameTranslated": "Informationen und Dokumente",
                "sortKey": 30,
                "campusId": null,
                "inMenu": true,
                "fileAccessWithoutPermission": true
              }
            },
            "description": "",
            "x-tags": [
              "Wiki"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "sortKey": {
                "type": "integer"
              },
              "campusId": {
                "type": "integer",
                "nullable": true
              },
              "inMenu": {
                "type": "boolean"
              },
              "fileAccessWithoutPermission": {
                "type": "boolean"
              },
              "nameTranslated": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "sortKey",
              "campusId",
              "inMenu",
              "fileAccessWithoutPermission"
            ]
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "onStartpage": {
            "type": "boolean"
          },
          "redirectTo": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "canEdit": {
                "type": "boolean"
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          },
          "isMarkdown": {
            "type": "boolean"
          }
        },
        "required": [
          "identifier"
        ]
      },
      "SimpleWikiPage": {
        "title": "WikiPage",
        "type": "object",
        "description": "",
        "x-examples": {
          "example-1": {
            "identifier": "a01cc6dd-2ee6-4612-bf92-6ee14e6bb72c",
            "title": "Protokoll Gemeindeversammlung 02.02.2020",
            "wikiCategory": {
              "id": 5,
              "name": "Protokolle",
              "nameTranslated": "Protokolle",
              "sortKey": 1,
              "campusId": null,
              "inMenu": true,
              "fileAccessWithoutPermission": false
            },
            "version": 3,
            "onStartpage": false,
            "redirectTo": null,
            "permissions": {
              "canEdit": true
            },
            "meta": {
              "createdDate": "2020-07-17T14:35:30Z",
              "createdPerson": {
                "id": 1
              },
              "modifiedDate": "2020-07-17T14:35:30Z",
              "modifiedPerson": {
                "id": 1
              }
            }
          }
        },
        "x-tags": [
          "Wiki"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "wikiCategory": {
            "title": "WikiCategory",
            "type": "object",
            "x-examples": {
              "example-1": {
                "id": 0,
                "name": "Informationen und Dokumente",
                "nameTranslated": "Informationen und Dokumente",
                "sortKey": 30,
                "campusId": null,
                "inMenu": true,
                "fileAccessWithoutPermission": true
              }
            },
            "description": "",
            "x-tags": [
              "Wiki"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "sortKey": {
                "type": "integer"
              },
              "campusId": {
                "type": "integer",
                "nullable": true
              },
              "inMenu": {
                "type": "boolean"
              },
              "fileAccessWithoutPermission": {
                "type": "boolean"
              },
              "nameTranslated": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "sortKey",
              "campusId",
              "inMenu",
              "fileAccessWithoutPermission"
            ]
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "integer"
          },
          "onStartpage": {
            "type": "boolean"
          },
          "redirectTo": {
            "type": "string"
          },
          "permissions": {
            "type": "object",
            "properties": {
              "canEdit": {
                "type": "boolean"
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          },
          "isMarkdown": {
            "type": "boolean"
          }
        },
        "required": [
          "identifier"
        ]
      },
      "SearchResult": {
        "title": "SearchResult",
        "type": "object",
        "x-examples": {
          "example-1": {
            "title": "main",
            "domainType": "wiki_page",
            "domainIdentifier": "014CE18E-B72D-4511-81D4-ED12B6DD5770",
            "apiUrl": "http://churchtools.test/api/wiki/categories/0/pages/014CE18E-B72D-4511-81D4-ED12B6DD5770/versions/7",
            "frontendUrl": "http://churchtools.test/?q=churchwiki#WikiView/filterWikicategory_id:0/doc:main",
            "imageUrl": null,
            "domainAttributes": [],
            "preview": "Was ist das **Wiki**? Das Wiki soll als Dokumentation, Informations- und Arbeitsgrundlage für die verschiedenen Dienstb…"
          }
        },
        "description": "",
        "properties": {
          "title": {
            "type": "string",
            "example": "main"
          },
          "domainType": {
            "type": "string",
            "example": "wiki_page"
          },
          "domainIdentifier": {
            "type": "string",
            "example": "014CE18E-B72D-4511-81D4-ED12B6DD5770"
          },
          "apiUrl": {
            "type": "string",
            "example": "http://churchtools.test/api/wiki/categories/0/pages/014CE18E-B72D-4511-81D4-ED12B6DD5770/versions/7"
          },
          "frontendUrl": {
            "type": "string",
            "example": "http://churchtools.test/?q=churchwiki#WikiView/filterWikicategory_id:0/doc:main"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          },
          "domainAttributes": {
            "type": "object"
          },
          "preview": {
            "type": "string",
            "nullable": true,
            "example": "Was ist das **Wiki**? Das Wiki soll als Dokumentation, Informations- und Arbeitsgrundlage für die verschiedenen Dienstb…"
          }
        }
      },
      "GroupMemberField": {
        "title": "GroupMemberField",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "groupId": {
            "type": "integer"
          },
          "fieldName": {
            "type": "string"
          },
          "sortKey": {
            "type": "integer"
          },
          "fieldTypeId": {
            "type": "integer"
          },
          "securityLevel": {
            "type": "integer"
          },
          "defaultValue": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "useInRegistrationForm": {
            "type": "boolean"
          },
          "requiredInRegistrationForm": {
            "type": "boolean"
          }
        },
        "x-tags": [
          "Group"
        ]
      },
      "GroupMemberPersonField": {
        "title": "GroupMemberPersonField",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "groupId": {
            "type": "integer"
          },
          "sortKey": {
            "type": "integer"
          },
          "dbField": {
            "title": "DbField",
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "shorty": {
                "type": "string"
              },
              "fieldCategoryCode": {
                "type": "string"
              },
              "fieldTypeCode": {
                "type": "string"
              },
              "isActive": {
                "type": "boolean"
              },
              "isNewPersonField": {
                "type": "boolean"
              },
              "lineEnding": {
                "type": "string"
              },
              "secLevel": {
                "type": "integer"
              },
              "length": {
                "type": "integer"
              },
              "sortKey": {
                "type": "integer"
              },
              "deleteOnArchive": {
                "type": "boolean"
              },
              "nullable": {
                "type": "boolean"
              },
              "options": {
                "type": "array",
                "items": {}
              }
            }
          }
        }
      },
      "DbField": {
        "title": "DbField",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shorty": {
            "type": "string"
          },
          "fieldCategoryCode": {
            "type": "string"
          },
          "fieldTypeCode": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "isNewPersonField": {
            "type": "boolean"
          },
          "lineEnding": {
            "type": "string"
          },
          "secLevel": {
            "type": "integer"
          },
          "length": {
            "type": "integer"
          },
          "sortKey": {
            "type": "integer"
          },
          "deleteOnArchive": {
            "type": "boolean"
          },
          "nullable": {
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {}
          }
        }
      },
      "GroupHierarchy": {
        "title": "GroupHierarchy",
        "type": "object",
        "description": "The hierarchy of one group",
        "properties": {
          "id": {
            "type": "integer"
          },
          "group": {
            "title": "GroupDomainObject",
            "type": "object",
            "properties": {
              "imageUrl": {
                "type": "string",
                "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
              },
              "frontendUrl": {
                "type": "string",
                "example": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%236/"
              },
              "apiUrl": {
                "type": "string",
                "example": "http://churchtools.test/api/groups/6"
              },
              "domainType": {
                "type": "string",
                "enum": [
                  "group"
                ]
              },
              "title": {
                "type": "string",
                "example": "Technik"
              },
              "domainIdentifier": {
                "type": "string",
                "example": "6"
              },
              "domainAttributes": {
                "type": "object",
                "properties": {
                  "note": {
                    "type": "string"
                  }
                }
              }
            },
            "required": [
              "frontendUrl",
              "apiUrl",
              "title"
            ]
          },
          "parents": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "children": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        },
        "x-tags": [
          "Group"
        ]
      },
      "GroupDomainObject": {
        "title": "GroupDomainObject",
        "type": "object",
        "properties": {
          "imageUrl": {
            "type": "string",
            "example": "http://churchtools.test/images/310/d6d0a45779e1e40522e7cbb8552241e763e0c1084de2da094cc1583127b3c34a"
          },
          "frontendUrl": {
            "type": "string",
            "example": "http://churchtools.test/?q=churchdb#GroupView/searchEntry:%236/"
          },
          "apiUrl": {
            "type": "string",
            "example": "http://churchtools.test/api/groups/6"
          },
          "domainType": {
            "type": "string",
            "enum": [
              "group"
            ]
          },
          "title": {
            "type": "string",
            "example": "Technik"
          },
          "domainIdentifier": {
            "type": "string",
            "example": "6"
          },
          "domainAttributes": {
            "type": "object",
            "properties": {
              "note": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "frontendUrl",
          "apiUrl",
          "title"
        ]
      },
      "SyncAdapter": {
        "title": "SyncAdapter",
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "churchtools"
          },
          "url": {
            "type": "string",
            "example": "http://localhost:8090"
          },
          "token": {
            "type": "string",
            "example": "kfghsjdlkfigblszurglizeifuz4"
          }
        },
        "x-tags": [
          "Hidden"
        ]
      },
      "ExternalSystemReturn": {
        "title": "ExternalSystem",
        "type": "object",
        "x-tags": [
          "Sync"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "adapter": {
            "type": "string"
          },
          "jobConfigsCount": {
            "type": "integer"
          }
        }
      },
      "ExternalSystem": {
        "title": "ExternalSystem",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "adapter": {
            "type": "string"
          },
          "accessHeaderValues": {
            "type": "object",
            "description": "Key Value Pairs that define the access to the external system"
          },
          "id": {
            "type": "number",
            "description": "Not necessary when creating a new external system"
          }
        },
        "required": [
          "name",
          "adapter",
          "accessHeaderValues"
        ],
        "x-tags": [
          "Sync"
        ]
      },
      "JobConfigurationReturn": {
        "title": "JobConfigurationReturn",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "externalSystem": {
            "title": "ExternalSystem",
            "type": "object",
            "x-tags": [
              "Sync"
            ],
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "adapter": {
                "type": "string"
              },
              "jobConfigsCount": {
                "type": "integer"
              }
            }
          },
          "domainType": {
            "type": "string"
          },
          "autoScheduleEnabled": {
            "type": "boolean"
          },
          "createBehaviorMaster": {
            "type": "string"
          },
          "createBehaviorES": {
            "type": "string"
          },
          "createDefaultsMaster": {
            "type": "object"
          },
          "createDefaultsES": {
            "type": "object"
          },
          "linkBehavior": {
            "type": "string"
          },
          "linkData": {
            "type": "string"
          },
          "updateBehavior": {
            "type": "string"
          },
          "updateData": {
            "type": "string"
          },
          "deleteBehaviorMaster": {
            "type": "string"
          },
          "deleteBehaviorES": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "domainType",
          "autoScheduleEnabled"
        ]
      },
      "JobConfiguration": {
        "title": "JobConfiguration",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "externalSystemId": {
            "type": "integer"
          },
          "domainType": {
            "type": "string"
          },
          "autoScheduleEnabled": {
            "type": "boolean"
          },
          "createBehaviorMaster": {
            "type": "string"
          },
          "createBehaviorES": {
            "type": "string"
          },
          "createDefaultsMaster": {
            "type": "object"
          },
          "createDefaultsES": {
            "type": "object"
          },
          "linkBehavior": {
            "type": "string"
          },
          "linkData": {
            "type": "string"
          },
          "updateBehavior": {
            "type": "string"
          },
          "updateData": {
            "type": "string"
          },
          "deleteBehaviorMaster": {
            "type": "string"
          },
          "deleteBehaviorES": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "externalSystemId",
          "domainType",
          "autoScheduleEnabled"
        ],
        "x-examples": {
          "example-1": {}
        }
      },
      "FieldMapping": {
        "title": "Field Mapping",
        "type": "object",
        "x-tags": [
          "Sync"
        ],
        "description": "",
        "properties": {
          "id": {
            "type": "number",
            "example": "1"
          },
          "externalSystem": {
            "title": "ExternalSystem",
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "adapter": {
                "type": "string"
              },
              "accessHeaderValues": {
                "type": "object",
                "description": "Key Value Pairs that define the access to the external system"
              },
              "id": {
                "type": "number",
                "description": "Not necessary when creating a new external system"
              }
            },
            "required": [
              "name",
              "adapter",
              "accessHeaderValues"
            ],
            "x-tags": [
              "Sync"
            ]
          },
          "domainType": {
            "type": "string",
            "example": "person"
          },
          "entries": {
            "type": "object",
            "required": [
              "propertyMappingsMasterToES",
              "propertyMappingsESToMaster"
            ],
            "properties": {
              "propertyMappingsMasterToES": {
                "title": "Field Mapping Entry",
                "type": "object",
                "x-tags": [
                  "Sync"
                ],
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "system": {
                    "type": "string",
                    "example": "master",
                    "enum": [
                      "master",
                      "externalSystem"
                    ]
                  },
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  },
                  "fromFilter": {
                    "type": "string"
                  },
                  "toFilter": {
                    "type": "string"
                  },
                  "valueMapping": {
                    "type": "array",
                    "items": {}
                  },
                  "others": {
                    "type": "array",
                    "items": {}
                  }
                },
                "required": [
                  "id",
                  "system",
                  "from",
                  "to"
                ]
              },
              "propertyMappingsESToMaster": {
                "title": "Field Mapping Entry",
                "type": "object",
                "x-tags": [
                  "Sync"
                ],
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "system": {
                    "type": "string",
                    "example": "master",
                    "enum": [
                      "master",
                      "externalSystem"
                    ]
                  },
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  },
                  "fromFilter": {
                    "type": "string"
                  },
                  "toFilter": {
                    "type": "string"
                  },
                  "valueMapping": {
                    "type": "array",
                    "items": {}
                  },
                  "others": {
                    "type": "array",
                    "items": {}
                  }
                },
                "required": [
                  "id",
                  "system",
                  "from",
                  "to"
                ]
              }
            }
          }
        },
        "required": [
          "id",
          "externalSystem",
          "domainType",
          "entries"
        ]
      },
      "FieldMappingEntry": {
        "title": "Field Mapping Entry",
        "type": "object",
        "x-tags": [
          "Sync"
        ],
        "properties": {
          "id": {
            "type": "number"
          },
          "system": {
            "type": "string",
            "example": "master",
            "enum": [
              "master",
              "externalSystem"
            ]
          },
          "from": {
            "type": "string"
          },
          "to": {
            "type": "string"
          },
          "fromFilter": {
            "type": "string"
          },
          "toFilter": {
            "type": "string"
          },
          "valueMapping": {
            "type": "array",
            "items": {}
          },
          "others": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "id",
          "system",
          "from",
          "to"
        ]
      },
      "ContactLabel": {
        "title": "Contact Label",
        "type": "object",
        "x-tags": [
          "Contact Label"
        ],
        "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
        "properties": {
          "id": {
            "type": "number",
            "description": "ID of Record",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "Name of Label",
            "example": "Private"
          },
          "nameTranslated": {
            "type": "string",
            "description": "Translated Name of Label",
            "example": "Privat"
          },
          "sortKey": {
            "type": "number",
            "example": 10
          },
          "isDefault": {
            "type": "boolean",
            "example": "false",
            "description": "Indicator if label is the default. Used for new person emails"
          }
        },
        "required": [
          "id",
          "name",
          "nameTranslated",
          "sortKey",
          "isDefault"
        ]
      },
      "PersonEmail": {
        "title": "PersonEmail",
        "type": "object",
        "x-tags": [
          "Person"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "pastor@church.com"
          },
          "isDefault": {
            "description": "Marks the default eMail address.",
            "type": "boolean",
            "example": true
          },
          "contactLabelId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "PersonMasterData": {
        "type": "object",
        "properties": {
          "roles": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of this group type role."
                },
                "groupTypeId": {
                  "type": "integer",
                  "description": "ID of corresponding group type."
                },
                "name": {
                  "type": "string",
                  "description": "Name of role."
                },
                "shorty": {
                  "type": "string",
                  "description": "Abbreviation of the name."
                },
                "sortKey": {
                  "type": "integer",
                  "description": "Number used for sorting roles."
                },
                "toDelete": {
                  "type": "boolean",
                  "description": "Flag, if members of this role can be deleted or removed from the group."
                },
                "hasRequested": {
                  "type": "boolean",
                  "description": "Flag, if group member is requesting group access."
                },
                "isLeader": {
                  "type": "boolean",
                  "description": "Flag, this role is a leader."
                },
                "isDefault": {
                  "type": "boolean",
                  "description": "Indicator of default roles."
                },
                "isHidden": {
                  "type": "boolean",
                  "description": "Flag, if this role is hidden in groups."
                },
                "growPathId": {
                  "type": "integer",
                  "nullable": true,
                  "description": "ID of the grow path."
                }
              },
              "example": [
                {
                  "id": 5,
                  "groupTypeId": 2,
                  "name": "Member",
                  "shorty": "M",
                  "sortKey": 4,
                  "toDelete": false,
                  "hasRequested": false,
                  "isLeader": false,
                  "isDefault": true,
                  "isHidden": false,
                  "growPathId": null
                },
                {
                  "id": 6,
                  "groupTypeId": 2,
                  "name": "Leader",
                  "shorty": "L",
                  "sortKey": 2,
                  "toDelete": false,
                  "hasRequested": false,
                  "isLeader": true,
                  "isDefault": false,
                  "isHidden": false,
                  "growPathId": 2
                }
              ]
            }
          },
          "ageGroups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "start": {
                  "description": "Starting age of this age group.",
                  "type": "integer"
                },
                "end": {
                  "description": "End age of this age group.",
                  "type": "integer"
                },
                "sortKey": {
                  "type": "integer"
                }
              },
              "example": {
                "id": 2,
                "name": "11-13",
                "start": 11,
                "end": 13,
                "sortKey": 1
              }
            }
          },
          "targetGroups": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "sortKey": {
                  "type": "integer"
                }
              },
              "example": {
                "id": 3,
                "name": "everyone",
                "sortKey": 3
              }
            }
          },
          "groupTypes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "isLeaderNecessary": {
                  "description": "Flag if a group of this group type MUST have a leader.",
                  "type": "boolean"
                },
                "availableForNewPerson": {
                  "description": "Flag if this group type is available during the dialog when creating a new person.",
                  "type": "boolean"
                },
                "deepPermission": {
                  "type": "integer"
                },
                "sortKey": {
                  "type": "integer"
                }
              },
              "example": {
                "id": 3,
                "name": "Smallgroup",
                "isLeaderNecessary": true,
                "availableForNewPerson": false,
                "deepPersmission": 0,
                "sortKey": 3
              }
            }
          },
          "groupCategories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "sortKey": {
                  "type": "integer"
                }
              },
              "example": {
                "id": 4,
                "name": "Group Category 1",
                "sortKey": 1
              }
            }
          },
          "groupStatuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "sortKey": {
                  "type": "integer"
                }
              },
              "example": {
                "id": 44,
                "name": "active",
                "sortKey": 1
              }
            }
          },
          "departments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of department"
                },
                "name": {
                  "type": "string",
                  "description": "Department name"
                },
                "shorty": {
                  "type": "string",
                  "description": "Abbreviation"
                },
                "sortKey": {
                  "type": "integer",
                  "description": "Used to sort all departments"
                }
              },
              "example": {
                "id": 1,
                "name": "Gemeindeliste",
                "shorty": "G",
                "sortKey": 10
              }
            }
          },
          "statuses": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of status"
                },
                "name": {
                  "type": "string",
                  "description": "Status name"
                },
                "shorty": {
                  "type": "string",
                  "description": "Abbreviation of name."
                },
                "isMember": {
                  "type": "boolean",
                  "description": "Flag if status is member of the church"
                },
                "isSearchable": {
                  "type": "boolean",
                  "description": "Flag if that status is searchable"
                },
                "sortKey": {
                  "type": "integer",
                  "description": "Used to sort all statuses"
                },
                "securityLevelId": {
                  "type": "integer",
                  "description": "Only persons with that securitylevel can edit/select/delete that status"
                }
              },
              "example": {
                "id": 1,
                "name": "Mitglied",
                "shorty": "M",
                "isMember": true,
                "isSearchable": true,
                "sortKey": 10,
                "securityLevelId": 1
              }
            }
          },
          "campuses": {
            "type": "array",
            "items": {
              "title": "Campus",
              "type": "object",
              "x-tags": [
                "Campus"
              ],
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "ID of campus"
                },
                "name": {
                  "type": "string",
                  "description": "Campus name"
                },
                "shorty": {
                  "type": "string",
                  "description": "Abbreviation"
                },
                "sortKey": {
                  "type": "integer",
                  "description": "Used to sort all campuses"
                }
              },
              "example": {
                "id": 1,
                "name": "Gersthofen",
                "shorty": "G",
                "sortKey": 10
              }
            }
          },
          "contactLabels": {
            "type": "array",
            "items": {
              "title": "Contact Label",
              "type": "object",
              "x-tags": [
                "Contact Label"
              ],
              "description": "Master Data for Contact Labels. Used to label E-Mail Adresses.",
              "properties": {
                "id": {
                  "type": "number",
                  "description": "ID of Record",
                  "example": 1
                },
                "name": {
                  "type": "string",
                  "description": "Name of Label",
                  "example": "Private"
                },
                "nameTranslated": {
                  "type": "string",
                  "description": "Translated Name of Label",
                  "example": "Privat"
                },
                "sortKey": {
                  "type": "number",
                  "example": 10
                },
                "isDefault": {
                  "type": "boolean",
                  "example": "false",
                  "description": "Indicator if label is the default. Used for new person emails"
                }
              },
              "required": [
                "id",
                "name",
                "nameTranslated",
                "sortKey",
                "isDefault"
              ]
            }
          }
        }
      },
      "GroupMeetingMember": {
        "description": "",
        "type": "object",
        "x-tags": [
          "Hidden"
        ],
        "properties": {
          "member": {
            "type": "object",
            "properties": {
              "personId": {
                "type": "integer"
              },
              "person": {
                "type": "object",
                "properties": {
                  "titel": {
                    "type": "string"
                  },
                  "domainType": {
                    "type": "string",
                    "enum": [
                      "person"
                    ]
                  },
                  "domainIdentifier": {
                    "type": "string"
                  },
                  "apiUrl": {
                    "type": "string"
                  },
                  "frontendUrl": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "domainAttributes": {
                    "type": "object",
                    "properties": {
                      "firstName": {
                        "type": "string"
                      },
                      "lastName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "example": {
                  "title": "John Smith",
                  "domainType": "person",
                  "domainIdentifier": "116",
                  "apiUrl": "http://churchtools.test/api/persons/116",
                  "frontendUrl": "http://churchtools.test/?q=churchdb#PersonView/searchEntry:%23116/",
                  "imageUrl": "",
                  "domainAttributes": [
                    {
                      "firstName": "John",
                      "lastName": "Smith"
                    }
                  ]
                }
              },
              "groupTypeRoleId": {
                "type": "integer"
              },
              "comment": {
                "type": "string"
              },
              "memberStartDate": {
                "type": "string",
                "format": "date"
              },
              "memberEndDate": {
                "type": "string",
                "format": "date"
              },
              "waitinglistPos": {
                "type": "integer",
                "nullable": true
              }
            }
          },
          "isCheckedIn": {
            "type": "boolean"
          }
        },
        "title": ""
      },
      "EventMasterData": {
        "title": "EventMasterData",
        "type": "object",
        "x-tags": [
          "MasterData",
          "Event"
        ],
        "description": "",
        "properties": {
          "data": {
            "type": "object",
            "required": [
              "absenceReasons",
              "songCategories"
            ],
            "properties": {
              "absenceReasons": {
                "type": "array",
                "items": {
                  "title": "Absence Reason",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nameTranslated": {
                      "type": "string"
                    },
                    "sortKey": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "nameTranslated",
                    "sortKey"
                  ],
                  "x-tags": [
                    "Absence"
                  ]
                }
              },
              "songCategories": {
                "type": "array",
                "items": {
                  "title": "Song Category",
                  "type": "object",
                  "x-tags": [
                    "Song"
                  ],
                  "description": "",
                  "properties": {
                    "id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nameTranslated": {
                      "type": "string"
                    },
                    "sortKey": {
                      "type": "number"
                    },
                    "campusId": {
                      "type": [
                        "number",
                        "null"
                      ]
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "required": [
              "absenceReasons",
              "songCategories"
            ],
            "properties": {
              "absenceReasons": {
                "type": "number",
                "description": "Count of available absence reasons"
              },
              "songCategories": {
                "type": "number",
                "description": "Count of available song categories"
              }
            }
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "Absence": {
        "title": "Absence",
        "type": "object",
        "description": "Absence for a person, like vacation or sickness.",
        "x-tags": [
          "Absence"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1,
            "description": "ID of Record"
          },
          "comment": {
            "type": "string",
            "example": "Holiday",
            "description": "Name, description for absence"
          },
          "absenceReason": {
            "title": "Absence Reason",
            "type": "object",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "nameTranslated": {
                "type": "string"
              },
              "sortKey": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "name",
              "nameTranslated",
              "sortKey"
            ],
            "x-tags": [
              "Absence"
            ]
          },
          "startTime": {
            "type": "string",
            "nullable": true,
            "format": "date-time",
            "example": "2020-11-18T23:00:00Z",
            "description": "When this absence begins. Is null if absence is all-day."
          },
          "endTime": {
            "type": "string",
            "nullable": true,
            "description": "When this absence ends. Is null if absence is all-day.",
            "format": "date-time",
            "example": "2020-11-19T23:00:00Z"
          },
          "startDate": {
            "type": "string",
            "example": "2020-11-18",
            "format": "date",
            "description": "When this absence begins."
          },
          "endDate": {
            "type": "string",
            "example": "2020-11-19",
            "format": "date",
            "description": "When this absence ends."
          }
        },
        "required": [
          "id",
          "comment",
          "absenceReason",
          "startDate",
          "endDate"
        ]
      },
      "Song": {
        "title": "Song",
        "type": "object",
        "x-tags": [
          "Song"
        ],
        "description": "Song and Arrangement information.",
        "properties": {
          "id": {
            "type": "number",
            "example": 5
          },
          "name": {
            "type": "string",
            "example": "Hallelujah"
          },
          "category": {
            "title": "Song Category",
            "type": "object",
            "x-tags": [
              "Song"
            ],
            "description": "",
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string"
              },
              "nameTranslated": {
                "type": "string"
              },
              "sortKey": {
                "type": "number"
              },
              "campusId": {
                "type": [
                  "number",
                  "null"
                ]
              }
            }
          },
          "shouldPractice": {
            "type": "boolean",
            "example": "true"
          },
          "author": {
            "type": "string",
            "example": "Matthias Claudius"
          },
          "ccli": {
            "type": "string",
            "example": "123456789"
          },
          "copyright": {
            "type": "string",
            "example": "Public Domain"
          },
          "note": {
            "type": "string",
            "example": "Old but Gold"
          },
          "arrangements": {
            "type": "array",
            "description": "All arrangements for that song",
            "items": {
              "title": "Arrangement",
              "type": "object",
              "x-tags": [
                "Song"
              ],
              "description": "Details about song arrangement.",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 2
                },
                "name": {
                  "type": "string",
                  "example": "Men Voicing"
                },
                "isDefault": {
                  "type": "boolean",
                  "example": "true"
                },
                "keyOfArrangement": {
                  "type": "string",
                  "example": "Cm"
                },
                "bpm": {
                  "type": "string",
                  "example": "120"
                },
                "beat": {
                  "type": "string",
                  "example": "4/4"
                },
                "duration": {
                  "type": "number",
                  "description": "Duration in seconds",
                  "example": 170
                },
                "note": {
                  "type": "string",
                  "example": "Greate Arrangement for Men Voices"
                },
                "links": {
                  "type": "array",
                  "description": "List of links \"uploaded\" to that arrangement",
                  "items": {
                    "title": "File or Link",
                    "type": "object",
                    "x-tags": [
                      "General"
                    ],
                    "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                    "properties": {
                      "domainType": {
                        "type": "string",
                        "example": "avatar",
                        "description": "ChurchTools Domain Type. Where does this file belong to?"
                      },
                      "domainId": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "myPicture.jpg",
                        "description": "Name of that file, when it's been uploaded"
                      },
                      "filename": {
                        "type": "string",
                        "description": "Filename of uploaded file or name of the link",
                        "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                      },
                      "fileUrl": {
                        "type": "string",
                        "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                        "description": "Link to external website or link to file in ChurchTools"
                      }
                    }
                  }
                },
                "files": {
                  "type": "array",
                  "description": "List of files uploaded to that arrangement",
                  "items": {
                    "title": "File or Link",
                    "type": "object",
                    "x-tags": [
                      "General"
                    ],
                    "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
                    "properties": {
                      "domainType": {
                        "type": "string",
                        "example": "avatar",
                        "description": "ChurchTools Domain Type. Where does this file belong to?"
                      },
                      "domainId": {
                        "type": "string",
                        "example": "1"
                      },
                      "name": {
                        "type": "string",
                        "example": "myPicture.jpg",
                        "description": "Name of that file, when it's been uploaded"
                      },
                      "filename": {
                        "type": "string",
                        "description": "Filename of uploaded file or name of the link",
                        "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                      },
                      "fileUrl": {
                        "type": "string",
                        "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                        "description": "Link to external website or link to file in ChurchTools"
                      }
                    }
                  }
                },
                "meta": {
                  "title": "Entity Meta Data",
                  "type": "object",
                  "description": "Created and Modified Date of an Entity",
                  "properties": {
                    "createdPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Created the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "createdDate": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Creation"
                    },
                    "modifiedPerson": {
                      "type": "object",
                      "example": 1,
                      "description": "Person Id Who Modified the Entity",
                      "properties": {
                        "id": {
                          "type": "number"
                        }
                      }
                    },
                    "modifiedDate": {
                      "type": "string",
                      "example": "2019-05-25T11:00:00Z",
                      "description": "Date of Last Modification"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        }
      },
      "SongCategory": {
        "title": "Song Category",
        "type": "object",
        "x-tags": [
          "Song"
        ],
        "description": "",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "nameTranslated": {
            "type": "string"
          },
          "sortKey": {
            "type": "number"
          },
          "campusId": {
            "type": [
              "number",
              "null"
            ]
          }
        }
      },
      "Arrangement": {
        "title": "Arrangement",
        "type": "object",
        "x-tags": [
          "Song"
        ],
        "description": "Details about song arrangement.",
        "properties": {
          "id": {
            "type": "number",
            "example": 2
          },
          "name": {
            "type": "string",
            "example": "Men Voicing"
          },
          "isDefault": {
            "type": "boolean",
            "example": "true"
          },
          "keyOfArrangement": {
            "type": "string",
            "example": "Cm"
          },
          "bpm": {
            "type": "string",
            "example": "120"
          },
          "beat": {
            "type": "string",
            "example": "4/4"
          },
          "duration": {
            "type": "number",
            "description": "Duration in seconds",
            "example": 170
          },
          "note": {
            "type": "string",
            "example": "Greate Arrangement for Men Voices"
          },
          "links": {
            "type": "array",
            "description": "List of links \"uploaded\" to that arrangement",
            "items": {
              "title": "File or Link",
              "type": "object",
              "x-tags": [
                "General"
              ],
              "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
              "properties": {
                "domainType": {
                  "type": "string",
                  "example": "avatar",
                  "description": "ChurchTools Domain Type. Where does this file belong to?"
                },
                "domainId": {
                  "type": "string",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "example": "myPicture.jpg",
                  "description": "Name of that file, when it's been uploaded"
                },
                "filename": {
                  "type": "string",
                  "description": "Filename of uploaded file or name of the link",
                  "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                },
                "fileUrl": {
                  "type": "string",
                  "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                  "description": "Link to external website or link to file in ChurchTools"
                }
              }
            }
          },
          "files": {
            "type": "array",
            "description": "List of files uploaded to that arrangement",
            "items": {
              "title": "File or Link",
              "type": "object",
              "x-tags": [
                "General"
              ],
              "description": "File or Link for a specific domain type. E.g. uploaded music file for songs or avatar of a person.",
              "properties": {
                "domainType": {
                  "type": "string",
                  "example": "avatar",
                  "description": "ChurchTools Domain Type. Where does this file belong to?"
                },
                "domainId": {
                  "type": "string",
                  "example": "1"
                },
                "name": {
                  "type": "string",
                  "example": "myPicture.jpg",
                  "description": "Name of that file, when it's been uploaded"
                },
                "filename": {
                  "type": "string",
                  "description": "Filename of uploaded file or name of the link",
                  "example": "57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385"
                },
                "fileUrl": {
                  "type": "string",
                  "example": "http://churchtools.test/?q=public/filedownload&id=116&filename=57407b0f37e8833cc7ff34f76413885e3856336ff21a263187c6bbd3acb9d385",
                  "description": "Link to external website or link to file in ChurchTools"
                }
              }
            }
          },
          "meta": {
            "title": "Entity Meta Data",
            "type": "object",
            "description": "Created and Modified Date of an Entity",
            "properties": {
              "createdPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Created the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "createdDate": {
                "type": "string",
                "format": "date-time",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Creation"
              },
              "modifiedPerson": {
                "type": "object",
                "example": 1,
                "description": "Person Id Who Modified the Entity",
                "properties": {
                  "id": {
                    "type": "number"
                  }
                }
              },
              "modifiedDate": {
                "type": "string",
                "example": "2019-05-25T11:00:00Z",
                "description": "Date of Last Modification"
              }
            }
          }
        }
      },
      "SyncLog": {
        "description": "Log entry during a sync execution.",
        "type": "object",
        "title": "Sync Log Entry",
        "properties": {
          "id": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "minLength": 1,
            "format": "date-time"
          },
          "job": {
            "type": "object",
            "required": [
              "id",
              "name",
              "externalSystem"
            ],
            "properties": {
              "id": {
                "type": "number"
              },
              "name": {
                "type": "string",
                "minLength": 1
              },
              "externalSystem": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                }
              }
            }
          },
          "type": {
            "type": "string",
            "minLength": 1
          },
          "level": {
            "type": "string",
            "minLength": 1
          },
          "messageI18n": {
            "type": "string",
            "minLength": 1
          },
          "messageArgs": {
            "type": "object"
          },
          "isDryRun": {
            "type": "boolean"
          },
          "domainType": {
            "type": "string",
            "minLength": 1
          },
          "domainId": {
            "type": "string",
            "minLength": 1
          },
          "sourceEntityId": {
            "type": "string",
            "minLength": 1
          },
          "system": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "id",
          "date",
          "job",
          "type",
          "level",
          "message",
          "isDryRun",
          "domainType",
          "domainId",
          "sourceEntityId",
          "system"
        ]
      },
      "Job": {
        "title": "Job",
        "type": "object",
        "properties": {
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "domeinType": {
            "type": "string"
          },
          "domainId": {
            "type": "string"
          },
          "createdDate": {
            "type": "string"
          },
          "modifiedDate": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "Login Token (Header)": []
    }
  ]
}
