<?php
/**
 * DefaultApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ChurchTools REST API
 *
 * The ChurchTools REST API is the best entry point for developers to access ChurchTools. <br><br> **Authentication:** You need to be authorized to use some endpoints. Those endpoints are marked by a gray lock symbol. If you view the documentation, while you are logged into ChurchTools, all requests are already authorized. If you want to authorized a request, you need to provide a `Login Token` as `Authorization` header in the format `Authorization: Login<token>` or send a valid cookie. You can use the green \"Authorize\" dialog to enter those details and see how a request would look like in detail. <br><br> **Missing Endpoints:** Not all features are yet available by our new REST API. This documentation will grow in the future. We are working hard to add new endpoints with every ChurchTools version. The documentation will always show only those endpoints you can use with your ChurchTools installation.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.4.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace StevenBuehner\ChurchTools\Test\Api;

use \StevenBuehner\ChurchTools\Configuration;
use \StevenBuehner\ChurchTools\ApiException;
use \StevenBuehner\ChurchTools\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DefaultApiTest Class Doc Comment
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DefaultApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for deleteFilesId
     *
     * .
     *
     */
    public function testDeleteFilesId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGroupsGroupIdRolesRoleId
     *
     * Your GET endpoint.
     *
     */
    public function testGetGroupsGroupIdRolesRoleId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getGroupsGroupIdTags
     *
     * Fetch group tags.
     *
     */
    public function testGetGroupsGroupIdTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPublicgroupsGroupIdPossiblerequesters
     *
     * Your GET endpoint.
     *
     */
    public function testGetPublicgroupsGroupIdPossiblerequesters()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchFilesId
     *
     * .
     *
     */
    public function testPatchFilesId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchGroupsGroupIdRolesRoleId
     *
     * .
     *
     */
    public function testPatchGroupsGroupIdRolesRoleId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
