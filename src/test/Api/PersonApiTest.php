<?php
/**
 * PersonApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ChurchTools REST API
 *
 * The ChurchTools REST API is the best entry point for developers to access ChurchTools. <br><br> **Authentication:** You need to be authorized to use some endpoints. Those endpoints are marked by a gray lock symbol. If you view the documentation, while you are logged into ChurchTools, all requests are already authorized. If you want to authorized a request, you need to provide a `Login Token` as `Authorization` header in the format `Authorization: Login<token>` or send a valid cookie. You can use the green \"Authorize\" dialog to enter those details and see how a request would look like in detail. <br><br> **Missing Endpoints:** Not all features are yet available by our new REST API. This documentation will grow in the future. We are working hard to add new endpoints with every ChurchTools version. The documentation will always show only those endpoints you can use with your ChurchTools installation.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace StevenBuehner\ChurchTools\Test\Api;

use \StevenBuehner\ChurchTools\Configuration;
use \StevenBuehner\ChurchTools\ApiException;
use \StevenBuehner\ChurchTools\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * PersonApiTest Class Doc Comment
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class PersonApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createPerson
     *
     * Create new person.
     *
     */
    public function testCreatePerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for declineServiceRequestById
     *
     * Decline a service request for a person.
     *
     */
    public function testDeclineServiceRequestById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deleteDeviceForPerson
     *
     * Remove device for person.
     *
     */
    public function testDeleteDeviceForPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePerson
     *
     * Delete person.
     *
     */
    public function testDeletePerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for deletePersonSetting
     *
     * Delete a person setting.
     *
     */
    public function testDeletePersonSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllGroupsForPerson
     *
     * Get all groups a member is in.
     *
     */
    public function testGetAllGroupsForPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllPersonSettings
     *
     * Get all person settings.
     *
     */
    public function testGetAllPersonSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllPersons
     *
     * Get all persons.
     *
     */
    public function testGetAllPersons()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getDeviceForPerson
     *
     * Fetch one device.
     *
     */
    public function testGetDeviceForPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getOpenServiceRequestsForPerson
     *
     * Get all service requests for a person.
     *
     */
    public function testGetOpenServiceRequestsForPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonById
     *
     * Get a person by ID or GUID.
     *
     */
    public function testGetPersonById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonDevices
     *
     * Fetch all registered devices for person.
     *
     */
    public function testGetPersonDevices()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonEvents
     *
     * Get events that person is involved with.
     *
     */
    public function testGetPersonEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonModuleSettings
     *
     * Get all person settings of a module.
     *
     */
    public function testGetPersonModuleSettings()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonProperties
     *
     * Retrieve people's properties, whether they own an email adress.
     *
     */
    public function testGetPersonProperties()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonRelationships
     *
     * Get all relationships linked to this person.
     *
     */
    public function testGetPersonRelationships()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonSetting
     *
     * Get person setting.
     *
     */
    public function testGetPersonSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonTags
     *
     * Get all tags attached to a person.
     *
     */
    public function testGetPersonTags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonsBirthdays
     *
     * Fetch Birthdays.
     *
     */
    public function testGetPersonsBirthdays()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonsIdLogintoken
     *
     * Fetch Login Token.
     *
     */
    public function testGetPersonsIdLogintoken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getServiceRequestById
     *
     * Get a specific service request for a person.
     *
     */
    public function testGetServiceRequestById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for invitePerson
     *
     * Invite Person to ChurchTools.
     *
     */
    public function testInvitePerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for patchPerson
     *
     * Updates a person.
     *
     */
    public function testPatchPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for postPersonsPersonIdArchive
     *
     * .
     *
     */
    public function testPostPersonsPersonIdArchive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for undoServiceRequestById
     *
     * Undo last service request action.
     *
     */
    public function testUndoServiceRequestById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateDeviceForPerson
     *
     * Create / Update new device for person.
     *
     */
    public function testUpdateDeviceForPerson()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updatePersonSetting
     *
     * Create/Update person setting.
     *
     */
    public function testUpdatePersonSetting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateServiceRequestById
     *
     * Agree to a service request for a person.
     *
     */
    public function testUpdateServiceRequestById()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
