<?php
/**
 * EventApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ChurchTools REST API
 *
 * The ChurchTools REST API is the best entry point for developers to access ChurchTools. <br><br> **Authentication:** You need to be authorized to use some endpoints. Those endpoints are marked by a gray lock symbol. If you view the documentation, while you are logged into ChurchTools, all requests are already authorized. If you want to authorized a request, you need to provide a `Login Token` as `Authorization` header in the format `Authorization: Login<token>` or send a valid cookie. You can use the green \"Authorize\" dialog to enter those details and see how a request would look like in detail. <br><br> **Missing Endpoints:** Not all features are yet available by our new REST API. This documentation will grow in the future. We are working hard to add new endpoints with every ChurchTools version. The documentation will always show only those endpoints you can use with your ChurchTools installation.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace StevenBuehner\ChurchTools\Test\Api;

use \StevenBuehner\ChurchTools\Configuration;
use \StevenBuehner\ChurchTools\ApiException;
use \StevenBuehner\ChurchTools\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * EventApiTest Class Doc Comment
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EventApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for getAgendaForEvent
     *
     * Get agenda for event.
     *
     */
    public function testGetAgendaForEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getAllEvents
     *
     * Get all events.
     *
     */
    public function testGetAllEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEvent
     *
     * Get a single event.
     *
     */
    public function testGetEvent()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getEventMasterdata
     *
     * Fetch MasterData for Module \"Event\".
     *
     */
    public function testGetEventMasterdata()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getPersonEvents
     *
     * Get events that person is involved with.
     *
     */
    public function testGetPersonEvents()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getSongsOfAgenda
     *
     * Get All Songs of Agenda.
     *
     */
    public function testGetSongsOfAgenda()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendAgendaEmail
     *
     * Send agenda email to recipients.
     *
     */
    public function testSendAgendaEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for sendEventEmail
     *
     * Send Mail to Event Participants.
     *
     */
    public function testSendEventEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for startStopChat
     *
     * Start or stop an event chat.
     *
     */
    public function testStartStopChat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
