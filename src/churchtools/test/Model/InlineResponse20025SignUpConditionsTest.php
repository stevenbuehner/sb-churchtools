<?php
/**
 * InlineResponse20025SignUpConditionsTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * ChurchTools REST API
 *
 * The ChurchTools REST API is the best entry point for developers to access ChurchTools. <br><br> **Authentication:** You need to be authorized to use some endpoints. Those endpoints are marked by a gray lock symbol. If you view the documentation, while you are logged into ChurchTools, all requests are already authorized. If you want to authorized a request, you need to provide a `Login Token` as `Authorization` header in the format `Authorization: Login<token>` or send a valid cookie. You can use the green \"Authorize\" dialog to enter those details and see how a request would look like in detail. <br><br> **Missing Endpoints:** Not all features are yet available by our new REST API. This documentation will grow in the future. We are working hard to add new endpoints with every ChurchTools version. The documentation will always show only those endpoints you can use with your ChurchTools installation.
 *
 * OpenAPI spec version: 0.1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.25
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace StevenBuehner\ChurchTools;

/**
 * InlineResponse20025SignUpConditionsTest Class Doc Comment
 *
 * @category    Class
 * @description Specifies conditions required to sign up in this group. Not all conditions apply to any user, e.g. some of the conditions only apply to users that are not logged in.
 * @package     StevenBuehner\ChurchTools
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse20025SignUpConditionsTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "InlineResponse20025SignUpConditions"
     */
    public function testInlineResponse20025SignUpConditions()
    {
    }

    /**
     * Test attribute "group_is_not_hidden"
     */
    public function testPropertyGroupIsNotHidden()
    {
    }

    /**
     * Test attribute "group_is_active"
     */
    public function testPropertyGroupIsActive()
    {
    }

    /**
     * Test attribute "group_is_open_for_members"
     */
    public function testPropertyGroupIsOpenForMembers()
    {
    }

    /**
     * Test attribute "group_is_not_full"
     */
    public function testPropertyGroupIsNotFull()
    {
    }

    /**
     * Test attribute "group_has_leader"
     */
    public function testPropertyGroupHasLeader()
    {
    }

    /**
     * Test attribute "end_date_not_passed"
     */
    public function testPropertyEndDateNotPassed()
    {
    }

    /**
     * Test attribute "roles_set_in_group"
     */
    public function testPropertyRolesSetInGroup()
    {
    }

    /**
     * Test attribute "group_is_public"
     */
    public function testPropertyGroupIsPublic()
    {
    }

    /**
     * Test attribute "can_contact_leader"
     */
    public function testPropertyCanContactLeader()
    {
    }

    /**
     * Test attribute "new_person_station_is_set"
     */
    public function testPropertyNewPersonStationIsSet()
    {
    }

    /**
     * Test attribute "new_person_status_is_set"
     */
    public function testPropertyNewPersonStatusIsSet()
    {
    }

    /**
     * Test attribute "new_person_department_is_set"
     */
    public function testPropertyNewPersonDepartmentIsSet()
    {
    }
}
