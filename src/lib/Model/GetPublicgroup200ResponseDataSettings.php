<?php
/**
 * GetPublicgroup200ResponseDataSettings
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ChurchTools REST API
 *
 * The ChurchTools REST API is the best entry point for developers to access ChurchTools. <br><br> **Authentication:** You need to be authorized to use some endpoints. Those endpoints are marked by a gray lock symbol. If you view the documentation, while you are logged into ChurchTools, all requests are already authorized. If you want to authorized a request, you need to provide a `Login Token` as `Authorization` header in the format `Authorization: Login<token>` or send a valid cookie. You can use the green \"Authorize\" dialog to enter those details and see how a request would look like in detail. <br><br> **Missing Endpoints:** Not all features are yet available by our new REST API. This documentation will grow in the future. We are working hard to add new endpoints with every ChurchTools version. The documentation will always show only those endpoints you can use with your ChurchTools installation.
 *
 * The version of the OpenAPI document: 0.1.0
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace StevenBuehner\ChurchTools\Model;

use \ArrayAccess;
use \StevenBuehner\ChurchTools\ObjectSerializer;

/**
 * GetPublicgroup200ResponseDataSettings Class Doc Comment
 *
 * @category Class
 * @package  StevenBuehner\ChurchTools
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<string, mixed>
 */
class GetPublicgroup200ResponseDataSettings implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'getPublicgroup_200_response_data_settings';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'allow_child_registration' => 'bool',
        'allow_other_registration' => 'bool',
        'allow_sameemail_registration' => 'bool',
        'allow_spouse_registration' => 'bool',
        'hide_contact_leader' => 'bool',
        'hide_login' => 'bool',
        'sign_up_notification_sent' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'allow_child_registration' => null,
        'allow_other_registration' => null,
        'allow_sameemail_registration' => null,
        'allow_spouse_registration' => null,
        'hide_contact_leader' => null,
        'hide_login' => null,
        'sign_up_notification_sent' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allow_child_registration' => 'allowChildRegistration',
        'allow_other_registration' => 'allowOtherRegistration',
        'allow_sameemail_registration' => 'allowSameemailRegistration',
        'allow_spouse_registration' => 'allowSpouseRegistration',
        'hide_contact_leader' => 'hideContactLeader',
        'hide_login' => 'hideLogin',
        'sign_up_notification_sent' => 'signUpNotificationSent'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allow_child_registration' => 'setAllowChildRegistration',
        'allow_other_registration' => 'setAllowOtherRegistration',
        'allow_sameemail_registration' => 'setAllowSameemailRegistration',
        'allow_spouse_registration' => 'setAllowSpouseRegistration',
        'hide_contact_leader' => 'setHideContactLeader',
        'hide_login' => 'setHideLogin',
        'sign_up_notification_sent' => 'setSignUpNotificationSent'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allow_child_registration' => 'getAllowChildRegistration',
        'allow_other_registration' => 'getAllowOtherRegistration',
        'allow_sameemail_registration' => 'getAllowSameemailRegistration',
        'allow_spouse_registration' => 'getAllowSpouseRegistration',
        'hide_contact_leader' => 'getHideContactLeader',
        'hide_login' => 'getHideLogin',
        'sign_up_notification_sent' => 'getSignUpNotificationSent'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_child_registration'] = $data['allow_child_registration'] ?? null;
        $this->container['allow_other_registration'] = $data['allow_other_registration'] ?? null;
        $this->container['allow_sameemail_registration'] = $data['allow_sameemail_registration'] ?? null;
        $this->container['allow_spouse_registration'] = $data['allow_spouse_registration'] ?? null;
        $this->container['hide_contact_leader'] = $data['hide_contact_leader'] ?? null;
        $this->container['hide_login'] = $data['hide_login'] ?? null;
        $this->container['sign_up_notification_sent'] = $data['sign_up_notification_sent'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets allow_child_registration
     *
     * @return bool|null
     */
    public function getAllowChildRegistration()
    {
        return $this->container['allow_child_registration'];
    }

    /**
     * Sets allow_child_registration
     *
     * @param bool|null $allow_child_registration allow_child_registration
     *
     * @return self
     */
    public function setAllowChildRegistration($allow_child_registration)
    {
        $this->container['allow_child_registration'] = $allow_child_registration;

        return $this;
    }

    /**
     * Gets allow_other_registration
     *
     * @return bool|null
     */
    public function getAllowOtherRegistration()
    {
        return $this->container['allow_other_registration'];
    }

    /**
     * Sets allow_other_registration
     *
     * @param bool|null $allow_other_registration allow_other_registration
     *
     * @return self
     */
    public function setAllowOtherRegistration($allow_other_registration)
    {
        $this->container['allow_other_registration'] = $allow_other_registration;

        return $this;
    }

    /**
     * Gets allow_sameemail_registration
     *
     * @return bool|null
     */
    public function getAllowSameemailRegistration()
    {
        return $this->container['allow_sameemail_registration'];
    }

    /**
     * Sets allow_sameemail_registration
     *
     * @param bool|null $allow_sameemail_registration allow_sameemail_registration
     *
     * @return self
     */
    public function setAllowSameemailRegistration($allow_sameemail_registration)
    {
        $this->container['allow_sameemail_registration'] = $allow_sameemail_registration;

        return $this;
    }

    /**
     * Gets allow_spouse_registration
     *
     * @return bool|null
     */
    public function getAllowSpouseRegistration()
    {
        return $this->container['allow_spouse_registration'];
    }

    /**
     * Sets allow_spouse_registration
     *
     * @param bool|null $allow_spouse_registration allow_spouse_registration
     *
     * @return self
     */
    public function setAllowSpouseRegistration($allow_spouse_registration)
    {
        $this->container['allow_spouse_registration'] = $allow_spouse_registration;

        return $this;
    }

    /**
     * Gets hide_contact_leader
     *
     * @return bool|null
     */
    public function getHideContactLeader()
    {
        return $this->container['hide_contact_leader'];
    }

    /**
     * Sets hide_contact_leader
     *
     * @param bool|null $hide_contact_leader hide_contact_leader
     *
     * @return self
     */
    public function setHideContactLeader($hide_contact_leader)
    {
        $this->container['hide_contact_leader'] = $hide_contact_leader;

        return $this;
    }

    /**
     * Gets hide_login
     *
     * @return bool|null
     */
    public function getHideLogin()
    {
        return $this->container['hide_login'];
    }

    /**
     * Sets hide_login
     *
     * @param bool|null $hide_login hide_login
     *
     * @return self
     */
    public function setHideLogin($hide_login)
    {
        $this->container['hide_login'] = $hide_login;

        return $this;
    }

    /**
     * Gets sign_up_notification_sent
     *
     * @return mixed|null
     */
    public function getSignUpNotificationSent()
    {
        return $this->container['sign_up_notification_sent'];
    }

    /**
     * Sets sign_up_notification_sent
     *
     * @param mixed|null $sign_up_notification_sent sign_up_notification_sent
     *
     * @return self
     */
    public function setSignUpNotificationSent($sign_up_notification_sent)
    {
        $this->container['sign_up_notification_sent'] = $sign_up_notification_sent;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


